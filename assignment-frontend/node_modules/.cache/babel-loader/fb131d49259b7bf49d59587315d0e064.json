{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nvar splitButtonDividerBaseStyles = function () {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8\n  };\n};\n\nexport function standardStyles(theme) {\n  var _a, _b, _c, _d, _e;\n\n  var s = theme.semanticColors,\n      p = theme.palette;\n  var buttonBackground = s.buttonBackground;\n  var buttonBackgroundPressed = s.buttonBackgroundPressed;\n  var buttonBackgroundHovered = s.buttonBackgroundHovered;\n  var buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n  var buttonText = s.buttonText;\n  var buttonTextHovered = s.buttonTextHovered;\n  var buttonTextDisabled = s.buttonTextDisabled;\n  var buttonTextChecked = s.buttonTextChecked;\n  var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText\n    },\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered\n    },\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _b)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        border: 'none'\n      }, _c)\n    },\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            color: 'Highlight'\n          }, _d)\n        }\n      }\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _e)\n    }),\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.buttonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled\n    }\n  };\n}\nexport function primaryStyles(theme) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n  var p = theme.palette,\n      s = theme.semanticColors;\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: \"1px solid \" + s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        selectors: {\n          ':after': {\n            border: \"none\",\n            outlineColor: p.white\n          }\n        }\n      }, _a)\n    },\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: \"1px solid \" + s.primaryButtonBackgroundHovered,\n      color: s.primaryButtonTextHovered,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'Highlight',\n        borderColor: 'Highlight'\n      }, _b)\n    },\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: \"1px solid \" + s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n      selectors: (_c = {}, _c[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _c)\n    },\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _d)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none'\n      }, _e)\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.white,\n      selectors: (_f = {}, _f[HighContrastSelector] = {\n        backgroundColor: 'Window'\n      }, _f)\n    }),\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_g = {}, _g[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _g[':hover'] = {\n        backgroundColor: s.primaryButtonBackgroundHovered,\n        selectors: (_h = {}, _h[HighContrastSelector] = {\n          color: 'Highlight'\n        }, _h)\n      }, _g)\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n      selectors: (_j = {}, _j[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _j)\n    }\n  };\n}","map":{"version":3,"sources":["components/Button/ButtonThemes.ts"],"names":[],"mappings":"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","sourcesContent":["import { IButtonStyles } from './Button.types';\nimport { ITheme, HighContrastSelector, IRawStyle, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n  const buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextDisabled = s.buttonTextDisabled;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}