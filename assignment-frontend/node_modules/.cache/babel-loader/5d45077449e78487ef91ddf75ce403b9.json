{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport { PersonaSize } from '../../Persona';\nimport { PersonaCoin } from '../../PersonaCoin';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory DocumentCard}\n */\n\nvar DocumentCardActivityBase =\n/** @class */\nfunction (_super) {\n  __extends(DocumentCardActivityBase, _super);\n\n  function DocumentCardActivityBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  DocumentCardActivityBase.prototype.render = function () {\n    var _a = this.props,\n        activity = _a.activity,\n        people = _a.people,\n        styles = _a.styles,\n        theme = _a.theme,\n        className = _a.className;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      multiplePeople: people.length > 1\n    });\n\n    if (!people || people.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: this._classNames.root\n    }, this._renderAvatars(people), React.createElement(\"div\", {\n      className: this._classNames.details\n    }, React.createElement(\"span\", {\n      className: this._classNames.name\n    }, this._getNameString(people)), React.createElement(\"span\", {\n      className: this._classNames.activity\n    }, activity)));\n  };\n\n  DocumentCardActivityBase.prototype._renderAvatars = function (people) {\n    return React.createElement(\"div\", {\n      className: this._classNames.avatars\n    }, people.length > 1 ? this._renderAvatar(people[1]) : null, this._renderAvatar(people[0]));\n  };\n\n  DocumentCardActivityBase.prototype._renderAvatar = function (person) {\n    return React.createElement(\"div\", {\n      className: this._classNames.avatar\n    }, React.createElement(PersonaCoin, {\n      imageInitials: person.initials,\n      text: person.name,\n      imageUrl: person.profileImageSrc,\n      initialsColor: person.initialsColor,\n      allowPhoneInitials: person.allowPhoneInitials,\n      role: \"presentation\",\n      size: PersonaSize.size32\n    }));\n  };\n\n  DocumentCardActivityBase.prototype._getNameString = function (people) {\n    var nameString = people[0].name;\n\n    if (people.length >= 2) {\n      nameString += ' +' + (people.length - 1);\n    }\n\n    return nameString;\n  };\n\n  return DocumentCardActivityBase;\n}(React.Component);\n\nexport { DocumentCardActivityBase };","map":{"version":3,"sources":["components/DocumentCard/DocumentCardActivity.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport {\n  IDocumentCardActivityProps,\n  IDocumentCardActivityPerson,\n  IDocumentCardActivityStyleProps,\n  IDocumentCardActivityStyles,\n} from './DocumentCardActivity.types';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { PersonaSize } from '../../Persona';\nimport { PersonaCoin } from '../../PersonaCoin';\n\nconst getClassNames = classNamesFunction<IDocumentCardActivityStyleProps, IDocumentCardActivityStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardActivityBase extends React.Component<IDocumentCardActivityProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardActivityStyles>;\n\n  constructor(props: IDocumentCardActivityProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element | null {\n    const { activity, people, styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      multiplePeople: people.length > 1,\n    });\n\n    if (!people || people.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className={this._classNames.root}>\n        {this._renderAvatars(people)}\n        <div className={this._classNames.details}>\n          <span className={this._classNames.name}>{this._getNameString(people)}</span>\n          <span className={this._classNames.activity}>{activity}</span>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderAvatars(people: IDocumentCardActivityPerson[]): React.ReactElement<{}> {\n    return (\n      <div className={this._classNames.avatars}>\n        {people.length > 1 ? this._renderAvatar(people[1]) : null}\n        {this._renderAvatar(people[0])}\n      </div>\n    );\n  }\n\n  private _renderAvatar(person: IDocumentCardActivityPerson): JSX.Element {\n    return (\n      <div className={this._classNames.avatar}>\n        <PersonaCoin\n          imageInitials={person.initials}\n          text={person.name}\n          imageUrl={person.profileImageSrc}\n          initialsColor={person.initialsColor}\n          allowPhoneInitials={person.allowPhoneInitials}\n          role=\"presentation\"\n          size={PersonaSize.size32}\n        />\n      </div>\n    );\n  }\n\n  private _getNameString(people: IDocumentCardActivityPerson[]): string {\n    let nameString = people[0].name;\n\n    if (people.length >= 2) {\n      nameString += ' +' + (people.length - 1);\n    }\n\n    return nameString;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}