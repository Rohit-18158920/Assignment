{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Icon } from '../../Icon';\nimport { Image } from '../../Image';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory DocumentCard}\n */\n\nvar DocumentCardImageBase =\n/** @class */\nfunction (_super) {\n  __extends(DocumentCardImageBase, _super);\n\n  function DocumentCardImageBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onImageLoad = function () {\n      _this.setState({\n        imageHasLoaded: true\n      });\n    };\n\n    initializeComponentRef(_this);\n    _this.state = {\n      imageHasLoaded: false\n    };\n    return _this;\n  }\n\n  DocumentCardImageBase.prototype.render = function () {\n    var _a = this.props,\n        styles = _a.styles,\n        width = _a.width,\n        height = _a.height,\n        imageFit = _a.imageFit,\n        imageSrc = _a.imageSrc;\n    this._classNames = getClassNames(styles, this.props);\n    return React.createElement(\"div\", {\n      className: this._classNames.root\n    }, imageSrc && React.createElement(Image, {\n      width: width,\n      height: height,\n      imageFit: imageFit,\n      src: imageSrc,\n      role: \"presentation\",\n      alt: \"\",\n      onLoad: this._onImageLoad\n    }), this.state.imageHasLoaded ? this._renderCornerIcon() : this._renderCenterIcon());\n  };\n\n  DocumentCardImageBase.prototype._renderCenterIcon = function () {\n    var iconProps = this.props.iconProps;\n    return React.createElement(\"div\", {\n      className: this._classNames.centeredIconWrapper\n    }, React.createElement(Icon, __assign({\n      className: this._classNames.centeredIcon\n    }, iconProps)));\n  };\n\n  DocumentCardImageBase.prototype._renderCornerIcon = function () {\n    var iconProps = this.props.iconProps;\n    return React.createElement(Icon, __assign({\n      className: this._classNames.cornerIcon\n    }, iconProps));\n  };\n\n  return DocumentCardImageBase;\n}(React.Component);\n\nexport { DocumentCardImageBase };","map":{"version":3,"sources":["components/DocumentCard/DocumentCardImage.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,IAAT,QAAqB,YAArB;AACA,SAAS,KAAT,QAAsB,aAAtB;AAEA,SAAS,kBAAT,EAA6B,sBAA7B,QAA2D,iBAA3D;AAWA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;AAEA;;AAEG;;AACH,IAAA,qBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2C,EAAA,SAAA,CAAA,qBAAA,EAAA,MAAA,CAAA;;AAGzC,WAAA,qBAAA,CAAY,KAAZ,EAA0C;AAA1C,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;AA8BQ,IAAA,KAAA,CAAA,YAAA,GAAe,YAAA;AACrB,MAAA,KAAI,CAAC,QAAL,CAAc;AAAE,QAAA,cAAc,EAAE;AAAlB,OAAd;AACD,KAFO;;AA3BN,IAAA,sBAAsB,CAAC,KAAD,CAAtB;AACA,IAAA,KAAI,CAAC,KAAL,GAAa;AAAE,MAAA,cAAc,EAAE;AAAlB,KAAb;;AACD;;AAEM,EAAA,qBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,QAAU,KAAA,GAAA,EAAA,CAAA,KAAV;AAAA,QAAiB,MAAA,GAAA,EAAA,CAAA,MAAjB;AAAA,QAAyB,QAAA,GAAA,EAAA,CAAA,QAAzB;AAAA,QAAmC,QAAA,GAAA,EAAA,CAAA,QAAnC;AAEN,SAAK,WAAL,GAAmB,aAAa,CAAC,MAAD,EAAU,KAAK,KAAf,CAAhC;AAEA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,KAAK,WAAL,CAAiB;AAAjC,KAAA,EACG,QAAQ,IACP,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AACJ,MAAA,KAAK,EAAE,KADH;AAEJ,MAAA,MAAM,EAAE,MAFJ;AAGJ,MAAA,QAAQ,EAAE,QAHN;AAIJ,MAAA,GAAG,EAAE,QAJD;AAKJ,MAAA,IAAI,EAAC,cALD;AAMJ,MAAA,GAAG,EAAC,EANA;AAOJ,MAAA,MAAM,EAAE,KAAK;AAPT,KAAN,CAFJ,EAYG,KAAK,KAAL,CAAW,cAAX,GAA4B,KAAK,iBAAL,EAA5B,GAAuD,KAAK,iBAAL,EAZ1D,CADF;AAgBD,GArBM;;AA2BC,EAAA,qBAAA,CAAA,SAAA,CAAA,iBAAA,GAAR,YAAA;AACU,QAAA,SAAA,GAAA,KAAA,KAAA,CAAA,SAAA;AACR,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,KAAK,WAAL,CAAiB;AAAjC,KAAA,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,QAAA,CAAA;AAAC,MAAA,SAAS,EAAE,KAAK,WAAL,CAAiB;AAA7B,KAAA,EAA+C,SAA/C,CAAL,CADF,CADF;AAKD,GAPO;;AASA,EAAA,qBAAA,CAAA,SAAA,CAAA,iBAAA,GAAR,YAAA;AACU,QAAA,SAAA,GAAA,KAAA,KAAA,CAAA,SAAA;AACR,WAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,QAAA,CAAA;AAAC,MAAA,SAAS,EAAE,KAAK,WAAL,CAAiB;AAA7B,KAAA,EAA6C,SAA7C,CAAL,CAAP;AACD,GAHO;;AAIV,SAAA,qBAAA;AAAC,CAlDD,CAA2C,KAAK,CAAC,SAAjD,CAAA","sourcesContent":["import * as React from 'react';\nimport { Icon } from '../../Icon';\nimport { Image } from '../../Image';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport {\n  IDocumentCardImageProps,\n  IDocumentCardImageStyleProps,\n  IDocumentCardImageStyles,\n} from './DocumentCardImage.types';\n\nexport interface IDocumentCardImageState {\n  readonly imageHasLoaded: boolean;\n}\n\nconst getClassNames = classNamesFunction<IDocumentCardImageStyleProps, IDocumentCardImageStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardImageBase extends React.Component<IDocumentCardImageProps, IDocumentCardImageState> {\n  private _classNames: IProcessedStyleSet<IDocumentCardImageStyles>;\n\n  constructor(props: IDocumentCardImageProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this.state = { imageHasLoaded: false };\n  }\n\n  public render(): JSX.Element {\n    const { styles, width, height, imageFit, imageSrc } = this.props;\n\n    this._classNames = getClassNames(styles!, this.props);\n\n    return (\n      <div className={this._classNames.root}>\n        {imageSrc && (\n          <Image\n            width={width}\n            height={height}\n            imageFit={imageFit}\n            src={imageSrc}\n            role=\"presentation\"\n            alt=\"\"\n            onLoad={this._onImageLoad}\n          />\n        )}\n        {this.state.imageHasLoaded ? this._renderCornerIcon() : this._renderCenterIcon()}\n      </div>\n    );\n  }\n\n  private _onImageLoad = () => {\n    this.setState({ imageHasLoaded: true });\n  };\n\n  private _renderCenterIcon(): JSX.Element {\n    const { iconProps } = this.props;\n    return (\n      <div className={this._classNames.centeredIconWrapper}>\n        <Icon className={this._classNames.centeredIcon} {...iconProps} />\n      </div>\n    );\n  }\n\n  private _renderCornerIcon(): JSX.Element {\n    const { iconProps } = this.props;\n    return <Icon className={this._classNames.cornerIcon} {...iconProps} />;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}