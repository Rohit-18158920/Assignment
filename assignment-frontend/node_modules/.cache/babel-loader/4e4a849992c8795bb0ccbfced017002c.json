{"ast":null,"code":"var _a, _b;\n\nimport { __assign } from \"tslib\";\nimport { FontWeights, concatStyleSets, getFocusStyle, HighContrastSelector, getPlaceholderStyles, hiddenContentStyle, getInputFocusStyle, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nvar ComboBoxHeight = 32;\nvar ComboBoxLineHeight = 30;\nvar ComboBoxCaretDownWidth = 32;\nvar ComboBoxOptionHeight = 36;\nvar getDisabledStyles = memoizeFunction(function (theme) {\n  var _a;\n\n  var semanticColors = theme.semanticColors;\n  return {\n    backgroundColor: semanticColors.disabledBackground,\n    color: semanticColors.disabledText,\n    cursor: 'default',\n    selectors: (_a = {\n      ':after': {\n        borderColor: semanticColors.disabledBackground\n      }\n    }, _a[HighContrastSelector] = {\n      color: 'GrayText',\n      selectors: {\n        ':after': {\n          borderColor: 'GrayText'\n        }\n      }\n    }, _a)\n  };\n});\nvar listOptionHighContrastStyles = {\n  selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n    backgroundColor: 'Highlight',\n    borderColor: 'Highlight',\n    color: 'HighlightText'\n  }, getHighContrastNoAdjustStyle()), _a)\n};\nvar inputHighContrastStyles = {\n  selectors: (_b = {}, _b[HighContrastSelector] = __assign({\n    color: 'WindowText',\n    backgroundColor: 'Window'\n  }, getHighContrastNoAdjustStyle()), _b)\n};\nexport var getOptionStyles = memoizeFunction(function (theme, customStylesForAllOptions, customOptionStylesForCurrentOption, isPending, isHidden) {\n  var _a;\n\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var option = {\n    textHoveredColor: semanticColors.menuItemTextHovered,\n    textSelectedColor: palette.neutralDark,\n    textDisabledColor: semanticColors.disabledText,\n    backgroundHoveredColor: semanticColors.menuItemBackgroundHovered,\n    backgroundPressedColor: semanticColors.menuItemBackgroundPressed\n  };\n  var optionStyles = {\n    root: [theme.fonts.medium, {\n      backgroundColor: isPending ? option.backgroundHoveredColor : 'transparent',\n      boxSizing: 'border-box',\n      cursor: 'pointer',\n      display: isHidden ? 'none' : 'block',\n      width: '100%',\n      height: 'auto',\n      minHeight: ComboBoxOptionHeight,\n      lineHeight: '20px',\n      padding: '0 8px',\n      position: 'relative',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: 'transparent',\n      borderRadius: 0,\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      textAlign: 'left',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        border: 'none',\n        borderColor: 'Background'\n      }, _a['&.ms-Checkbox'] = {\n        display: 'flex',\n        alignItems: 'center'\n      }, _a['&.ms-Button--command:hover:active'] = {\n        backgroundColor: option.backgroundPressedColor\n      }, _a['.ms-Checkbox-label'] = {\n        width: '100%'\n      }, _a)\n    }],\n    rootHovered: {\n      backgroundColor: option.backgroundHoveredColor,\n      color: option.textHoveredColor\n    },\n    rootFocused: {\n      backgroundColor: option.backgroundHoveredColor\n    },\n    rootChecked: [{\n      backgroundColor: 'transparent',\n      color: option.textSelectedColor,\n      selectors: {\n        ':hover': [{\n          backgroundColor: option.backgroundHoveredColor\n        }, listOptionHighContrastStyles]\n      }\n    }, getFocusStyle(theme, {\n      inset: -1,\n      isFocusedOnly: false\n    }), listOptionHighContrastStyles],\n    rootDisabled: {\n      color: option.textDisabledColor,\n      cursor: 'default'\n    },\n    optionText: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      minWidth: '0px',\n      maxWidth: '100%',\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      display: 'inline-block'\n    },\n    optionTextWrapper: {\n      maxWidth: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n  return concatStyleSets(optionStyles, customStylesForAllOptions, customOptionStylesForCurrentOption);\n});\nexport var getCaretDownButtonStyles = memoizeFunction(function (theme, customStyles) {\n  var _a, _b;\n\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var caret = {\n    buttonTextColor: semanticColors.bodySubtext,\n    buttonTextHoveredCheckedColor: semanticColors.buttonTextChecked,\n    buttonBackgroundHoveredColor: semanticColors.listItemBackgroundHovered,\n    buttonBackgroundCheckedColor: semanticColors.listItemBackgroundChecked,\n    buttonBackgroundCheckedHoveredColor: semanticColors.listItemBackgroundCheckedHovered\n  };\n  var buttonHighContrastStyles = {\n    selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n      backgroundColor: 'Highlight',\n      borderColor: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), _a)\n  };\n  var styles = {\n    root: {\n      color: caret.buttonTextColor,\n      fontSize: fonts.small.fontSize,\n      position: 'absolute',\n      top: 0,\n      height: '100%',\n      lineHeight: ComboBoxLineHeight,\n      width: ComboBoxCaretDownWidth,\n      textAlign: 'center',\n      cursor: 'default',\n      selectors: (_b = {}, _b[HighContrastSelector] = __assign({\n        backgroundColor: 'ButtonFace',\n        borderColor: 'ButtonText',\n        color: 'ButtonText'\n      }, getHighContrastNoAdjustStyle()), _b)\n    },\n    icon: {\n      fontSize: fonts.small.fontSize\n    },\n    rootHovered: [{\n      backgroundColor: caret.buttonBackgroundHoveredColor,\n      color: caret.buttonTextHoveredCheckedColor,\n      cursor: 'pointer'\n    }, buttonHighContrastStyles],\n    rootPressed: [{\n      backgroundColor: caret.buttonBackgroundCheckedColor,\n      color: caret.buttonTextHoveredCheckedColor\n    }, buttonHighContrastStyles],\n    rootChecked: [{\n      backgroundColor: caret.buttonBackgroundCheckedColor,\n      color: caret.buttonTextHoveredCheckedColor\n    }, buttonHighContrastStyles],\n    rootCheckedHovered: [{\n      backgroundColor: caret.buttonBackgroundCheckedHoveredColor,\n      color: caret.buttonTextHoveredCheckedColor\n    }, buttonHighContrastStyles],\n    rootDisabled: [getDisabledStyles(theme), {\n      position: 'absolute'\n    }]\n  };\n  return concatStyleSets(styles, customStyles);\n});\nexport var getStyles = memoizeFunction(function (theme, customStyles, comboBoxOptionWidth) {\n  var _a, _b, _c, _d, _e, _f;\n\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts,\n      effects = theme.effects;\n  var root = {\n    textColor: semanticColors.inputText,\n    borderColor: semanticColors.inputBorder,\n    borderHoveredColor: semanticColors.inputBorderHovered,\n    borderPressedColor: semanticColors.inputFocusBorderAlt,\n    borderFocusedColor: semanticColors.inputFocusBorderAlt,\n    backgroundColor: semanticColors.inputBackground,\n    erroredColor: semanticColors.errorText\n  };\n  var option = {\n    headerTextColor: semanticColors.menuHeader,\n    dividerBorderColor: semanticColors.bodyDivider\n  }; // placeholder style variables\n\n  var placeholderHighContrastStyles = {\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      color: 'GrayText'\n    }, _a)\n  };\n  var placeholderStyles = [{\n    color: semanticColors.inputPlaceholderText\n  }, placeholderHighContrastStyles];\n  var placeholderStylesHovered = [{\n    color: semanticColors.inputTextHovered\n  }, placeholderHighContrastStyles];\n  var disabledPlaceholderStyles = [{\n    color: semanticColors.disabledText\n  }, placeholderHighContrastStyles];\n\n  var ComboBoxRootHighContrastFocused = __assign(__assign({\n    color: 'HighlightText',\n    backgroundColor: 'Window'\n  }, getHighContrastNoAdjustStyle()), {\n    selectors: {\n      ':after': {\n        borderColor: 'Highlight'\n      }\n    }\n  });\n\n  var focusBorderStyles = getInputFocusStyle(root.borderPressedColor, effects.roundedCorner2, 'border', 0);\n  var styles = {\n    container: {},\n    label: {},\n    labelDisabled: {},\n    root: [theme.fonts.medium, {\n      boxShadow: 'none',\n      marginLeft: '0',\n      paddingRight: ComboBoxCaretDownWidth,\n      paddingLeft: 9,\n      color: root.textColor,\n      position: 'relative',\n      outline: '0',\n      userSelect: 'none',\n      backgroundColor: root.backgroundColor,\n      cursor: 'text',\n      display: 'block',\n      height: ComboBoxHeight,\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      boxSizing: 'border-box',\n      selectors: {\n        '.ms-Label': {\n          display: 'inline-block',\n          marginBottom: '8px'\n        },\n        '&.is-open': {\n          selectors: (_b = {}, _b[HighContrastSelector] = ComboBoxRootHighContrastFocused, _b)\n        },\n        // setting border using pseudo-element here in order to\n        // prevent chevron button to overlap ComboBox border under certain resolutions\n        ':after': {\n          pointerEvents: 'none',\n          content: \"''\",\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          bottom: 0,\n          right: 0,\n          borderWidth: '1px',\n          borderStyle: 'solid',\n          borderColor: root.borderColor,\n          borderRadius: effects.roundedCorner2\n        }\n      }\n    }],\n    rootHovered: {\n      selectors: (_c = {\n        ':after': {\n          borderColor: root.borderHoveredColor\n        },\n        '.ms-ComboBox-Input': [{\n          color: semanticColors.inputTextHovered\n        }, getPlaceholderStyles(placeholderStylesHovered), inputHighContrastStyles]\n      }, _c[HighContrastSelector] = __assign(__assign({\n        color: 'HighlightText',\n        backgroundColor: 'Window'\n      }, getHighContrastNoAdjustStyle()), {\n        selectors: {\n          ':after': {\n            borderColor: 'Highlight'\n          }\n        }\n      }), _c)\n    },\n    rootPressed: [{\n      position: 'relative',\n      selectors: (_d = {}, _d[HighContrastSelector] = ComboBoxRootHighContrastFocused, _d)\n    }],\n    rootFocused: [{\n      selectors: (_e = {\n        '.ms-ComboBox-Input': [{\n          color: semanticColors.inputTextHovered\n        }, inputHighContrastStyles]\n      }, _e[HighContrastSelector] = ComboBoxRootHighContrastFocused, _e)\n    }, focusBorderStyles],\n    rootDisabled: getDisabledStyles(theme),\n    rootError: {\n      selectors: {\n        ':after': {\n          borderColor: root.erroredColor\n        },\n        ':hover:after': {\n          borderColor: semanticColors.inputBorderHovered\n        }\n      }\n    },\n    rootDisallowFreeForm: {},\n    input: [getPlaceholderStyles(placeholderStyles), {\n      backgroundColor: root.backgroundColor,\n      color: root.textColor,\n      boxSizing: 'border-box',\n      width: '100%',\n      height: '100%',\n      borderStyle: 'none',\n      outline: 'none',\n      font: 'inherit',\n      textOverflow: 'ellipsis',\n      padding: '0',\n      selectors: {\n        '::-ms-clear': {\n          display: 'none'\n        }\n      }\n    }, inputHighContrastStyles],\n    inputDisabled: [getDisabledStyles(theme), getPlaceholderStyles(disabledPlaceholderStyles)],\n    errorMessage: [theme.fonts.small, {\n      color: root.erroredColor,\n      marginTop: '5px'\n    }],\n    callout: {\n      boxShadow: effects.elevation8\n    },\n    optionsContainerWrapper: {\n      width: comboBoxOptionWidth\n    },\n    optionsContainer: {\n      display: 'block'\n    },\n    screenReaderText: hiddenContentStyle,\n    header: [fonts.medium, {\n      fontWeight: FontWeights.semibold,\n      color: option.headerTextColor,\n      backgroundColor: 'none',\n      borderStyle: 'none',\n      height: ComboBoxOptionHeight,\n      lineHeight: ComboBoxOptionHeight,\n      cursor: 'default',\n      padding: '0 8px',\n      userSelect: 'none',\n      textAlign: 'left',\n      selectors: (_f = {}, _f[HighContrastSelector] = __assign({\n        color: 'GrayText'\n      }, getHighContrastNoAdjustStyle()), _f)\n    }],\n    divider: {\n      height: 1,\n      backgroundColor: option.dividerBorderColor\n    }\n  };\n  return concatStyleSets(styles, customStyles);\n});","map":{"version":3,"sources":["components/ComboBox/ComboBox.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  FontWeights,\r\n  IRawStyle,\r\n  ITheme,\r\n  concatStyleSets,\r\n  getFocusStyle,\r\n  HighContrastSelector,\r\n  IStyle,\r\n  getPlaceholderStyles,\r\n  hiddenContentStyle,\r\n  getInputFocusStyle,\r\n  getHighContrastNoAdjustStyle,\r\n} from '../../Styling';\r\nimport { IComboBoxOptionStyles, IComboBoxStyles } from './ComboBox.types';\r\n\r\nimport { IButtonStyles } from '../../Button';\r\nimport { memoizeFunction } from '../../Utilities';\r\n\r\nconst ComboBoxHeight = 32;\r\nconst ComboBoxLineHeight = 30;\r\nconst ComboBoxCaretDownWidth = 32;\r\nconst ComboBoxOptionHeight = 36;\r\n\r\nconst getDisabledStyles = memoizeFunction(\r\n  (theme: ITheme): IRawStyle => {\r\n    const { semanticColors } = theme;\r\n\r\n    return {\r\n      backgroundColor: semanticColors.disabledBackground,\r\n      color: semanticColors.disabledText,\r\n      cursor: 'default',\r\n      selectors: {\r\n        ':after': {\r\n          borderColor: semanticColors.disabledBackground,\r\n        },\r\n        [HighContrastSelector]: {\r\n          color: 'GrayText',\r\n          selectors: {\r\n            ':after': {\r\n              borderColor: 'GrayText',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n);\r\n\r\nconst listOptionHighContrastStyles: IRawStyle = {\r\n  selectors: {\r\n    [HighContrastSelector]: {\r\n      backgroundColor: 'Highlight',\r\n      borderColor: 'Highlight',\r\n      color: 'HighlightText',\r\n      ...getHighContrastNoAdjustStyle(),\r\n    },\r\n  },\r\n};\r\n\r\nconst inputHighContrastStyles: IRawStyle = {\r\n  selectors: {\r\n    [HighContrastSelector]: {\r\n      color: 'WindowText',\r\n      backgroundColor: 'Window',\r\n      ...getHighContrastNoAdjustStyle(),\r\n    },\r\n  },\r\n};\r\n\r\nexport const getOptionStyles = memoizeFunction(\r\n  (\r\n    theme: ITheme,\r\n    customStylesForAllOptions?: Partial<IComboBoxOptionStyles>,\r\n    customOptionStylesForCurrentOption?: Partial<IComboBoxOptionStyles>,\r\n    isPending?: boolean,\r\n    isHidden?: boolean,\r\n  ): Partial<IComboBoxOptionStyles> => {\r\n    const { palette, semanticColors } = theme;\r\n\r\n    const option = {\r\n      textHoveredColor: semanticColors.menuItemTextHovered,\r\n      textSelectedColor: palette.neutralDark,\r\n      textDisabledColor: semanticColors.disabledText,\r\n      backgroundHoveredColor: semanticColors.menuItemBackgroundHovered,\r\n      backgroundPressedColor: semanticColors.menuItemBackgroundPressed,\r\n    };\r\n\r\n    const optionStyles: IComboBoxOptionStyles = {\r\n      root: [\r\n        theme.fonts.medium,\r\n        {\r\n          backgroundColor: isPending ? option.backgroundHoveredColor : 'transparent',\r\n          boxSizing: 'border-box',\r\n          cursor: 'pointer',\r\n          display: isHidden ? 'none' : 'block',\r\n          width: '100%',\r\n          height: 'auto',\r\n          minHeight: ComboBoxOptionHeight,\r\n          lineHeight: '20px',\r\n          padding: '0 8px',\r\n          position: 'relative',\r\n          borderWidth: '1px',\r\n          borderStyle: 'solid',\r\n          borderColor: 'transparent',\r\n          borderRadius: 0,\r\n          wordWrap: 'break-word',\r\n          overflowWrap: 'break-word',\r\n          textAlign: 'left',\r\n          selectors: {\r\n            [HighContrastSelector]: {\r\n              border: 'none',\r\n              borderColor: 'Background',\r\n            },\r\n            '&.ms-Checkbox': {\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            },\r\n            '&.ms-Button--command:hover:active': {\r\n              backgroundColor: option.backgroundPressedColor,\r\n            },\r\n            '.ms-Checkbox-label': {\r\n              width: '100%',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      rootHovered: {\r\n        backgroundColor: option.backgroundHoveredColor,\r\n        color: option.textHoveredColor,\r\n      },\r\n      rootFocused: {\r\n        backgroundColor: option.backgroundHoveredColor,\r\n      },\r\n      rootChecked: [\r\n        {\r\n          backgroundColor: 'transparent',\r\n          color: option.textSelectedColor,\r\n          selectors: {\r\n            ':hover': [\r\n              {\r\n                backgroundColor: option.backgroundHoveredColor,\r\n              },\r\n              listOptionHighContrastStyles,\r\n            ],\r\n          },\r\n        },\r\n        getFocusStyle(theme, { inset: -1, isFocusedOnly: false }),\r\n        listOptionHighContrastStyles,\r\n      ],\r\n      rootDisabled: {\r\n        color: option.textDisabledColor,\r\n        cursor: 'default',\r\n      },\r\n      optionText: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        minWidth: '0px',\r\n        maxWidth: '100%',\r\n        wordWrap: 'break-word',\r\n        overflowWrap: 'break-word',\r\n        display: 'inline-block',\r\n      },\r\n      optionTextWrapper: {\r\n        maxWidth: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      },\r\n    };\r\n\r\n    return concatStyleSets(optionStyles, customStylesForAllOptions, customOptionStylesForCurrentOption);\r\n  },\r\n);\r\n\r\nexport const getCaretDownButtonStyles = memoizeFunction(\r\n  (theme: ITheme, customStyles?: Partial<IButtonStyles>): IButtonStyles => {\r\n    const { semanticColors, fonts } = theme;\r\n\r\n    const caret = {\r\n      buttonTextColor: semanticColors.bodySubtext,\r\n      buttonTextHoveredCheckedColor: semanticColors.buttonTextChecked,\r\n      buttonBackgroundHoveredColor: semanticColors.listItemBackgroundHovered,\r\n      buttonBackgroundCheckedColor: semanticColors.listItemBackgroundChecked,\r\n      buttonBackgroundCheckedHoveredColor: semanticColors.listItemBackgroundCheckedHovered,\r\n    };\r\n\r\n    const buttonHighContrastStyles: IStyle = {\r\n      selectors: {\r\n        [HighContrastSelector]: {\r\n          backgroundColor: 'Highlight',\r\n          borderColor: 'Highlight',\r\n          color: 'HighlightText',\r\n          ...getHighContrastNoAdjustStyle(),\r\n        },\r\n      },\r\n    };\r\n\r\n    const styles: IButtonStyles = {\r\n      root: {\r\n        color: caret.buttonTextColor,\r\n        fontSize: fonts.small.fontSize,\r\n        position: 'absolute',\r\n        top: 0,\r\n        height: '100%',\r\n        lineHeight: ComboBoxLineHeight,\r\n        width: ComboBoxCaretDownWidth,\r\n        textAlign: 'center',\r\n        cursor: 'default',\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            backgroundColor: 'ButtonFace',\r\n            borderColor: 'ButtonText',\r\n            color: 'ButtonText',\r\n            ...getHighContrastNoAdjustStyle(),\r\n          },\r\n        },\r\n      },\r\n      icon: {\r\n        fontSize: fonts.small.fontSize,\r\n      },\r\n      rootHovered: [\r\n        {\r\n          backgroundColor: caret.buttonBackgroundHoveredColor,\r\n          color: caret.buttonTextHoveredCheckedColor,\r\n          cursor: 'pointer',\r\n        },\r\n        buttonHighContrastStyles,\r\n      ],\r\n      rootPressed: [\r\n        {\r\n          backgroundColor: caret.buttonBackgroundCheckedColor,\r\n          color: caret.buttonTextHoveredCheckedColor,\r\n        },\r\n        buttonHighContrastStyles,\r\n      ],\r\n      rootChecked: [\r\n        {\r\n          backgroundColor: caret.buttonBackgroundCheckedColor,\r\n          color: caret.buttonTextHoveredCheckedColor,\r\n        },\r\n        buttonHighContrastStyles,\r\n      ],\r\n      rootCheckedHovered: [\r\n        {\r\n          backgroundColor: caret.buttonBackgroundCheckedHoveredColor,\r\n          color: caret.buttonTextHoveredCheckedColor,\r\n        },\r\n        buttonHighContrastStyles,\r\n      ],\r\n      rootDisabled: [\r\n        getDisabledStyles(theme),\r\n        {\r\n          position: 'absolute',\r\n        },\r\n      ],\r\n    };\r\n    return concatStyleSets(styles, customStyles);\r\n  },\r\n);\r\n\r\nexport const getStyles = memoizeFunction(\r\n  (theme: ITheme, customStyles?: Partial<IComboBoxStyles>, comboBoxOptionWidth?: string): Partial<IComboBoxStyles> => {\r\n    const { semanticColors, fonts, effects } = theme;\r\n\r\n    const root = {\r\n      textColor: semanticColors.inputText,\r\n      borderColor: semanticColors.inputBorder,\r\n      borderHoveredColor: semanticColors.inputBorderHovered,\r\n      borderPressedColor: semanticColors.inputFocusBorderAlt,\r\n      borderFocusedColor: semanticColors.inputFocusBorderAlt,\r\n      backgroundColor: semanticColors.inputBackground,\r\n      erroredColor: semanticColors.errorText,\r\n    };\r\n\r\n    const option = {\r\n      headerTextColor: semanticColors.menuHeader,\r\n      dividerBorderColor: semanticColors.bodyDivider,\r\n    };\r\n\r\n    // placeholder style variables\r\n    const placeholderHighContrastStyles: IRawStyle = {\r\n      selectors: {\r\n        [HighContrastSelector]: {\r\n          color: 'GrayText',\r\n        },\r\n      },\r\n    };\r\n    const placeholderStyles: IStyle = [\r\n      {\r\n        color: semanticColors.inputPlaceholderText,\r\n      },\r\n      placeholderHighContrastStyles,\r\n    ];\r\n    const placeholderStylesHovered: IStyle = [\r\n      {\r\n        color: semanticColors.inputTextHovered,\r\n      },\r\n      placeholderHighContrastStyles,\r\n    ];\r\n    const disabledPlaceholderStyles: IStyle = [\r\n      {\r\n        color: semanticColors.disabledText,\r\n      },\r\n      placeholderHighContrastStyles,\r\n    ];\r\n\r\n    const ComboBoxRootHighContrastFocused = {\r\n      color: 'HighlightText',\r\n      backgroundColor: 'Window',\r\n      ...getHighContrastNoAdjustStyle(),\r\n      selectors: {\r\n        ':after': {\r\n          borderColor: 'Highlight',\r\n        },\r\n      },\r\n    };\r\n\r\n    const focusBorderStyles: IStyle = getInputFocusStyle(root.borderPressedColor, effects.roundedCorner2, 'border', 0);\r\n\r\n    const styles: IComboBoxStyles = {\r\n      container: {},\r\n      label: {},\r\n      labelDisabled: {},\r\n      root: [\r\n        theme.fonts.medium,\r\n        {\r\n          boxShadow: 'none',\r\n          marginLeft: '0',\r\n          paddingRight: ComboBoxCaretDownWidth,\r\n          paddingLeft: 9,\r\n          color: root.textColor,\r\n          position: 'relative',\r\n          outline: '0',\r\n          userSelect: 'none',\r\n          backgroundColor: root.backgroundColor,\r\n          cursor: 'text',\r\n          display: 'block',\r\n          height: ComboBoxHeight,\r\n          whiteSpace: 'nowrap',\r\n          textOverflow: 'ellipsis',\r\n          boxSizing: 'border-box', // Border-box matches Dropdown and TextField\r\n          selectors: {\r\n            '.ms-Label': {\r\n              display: 'inline-block',\r\n              marginBottom: '8px',\r\n            },\r\n            '&.is-open': {\r\n              selectors: {\r\n                [HighContrastSelector]: ComboBoxRootHighContrastFocused,\r\n              },\r\n            },\r\n            // setting border using pseudo-element here in order to\r\n            // prevent chevron button to overlap ComboBox border under certain resolutions\r\n            ':after': {\r\n              pointerEvents: 'none',\r\n              content: \"''\",\r\n              position: 'absolute',\r\n              left: 0,\r\n              top: 0,\r\n              bottom: 0,\r\n              right: 0,\r\n              borderWidth: '1px',\r\n              borderStyle: 'solid',\r\n              borderColor: root.borderColor,\r\n              borderRadius: effects.roundedCorner2,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n\r\n      rootHovered: {\r\n        selectors: {\r\n          ':after': {\r\n            borderColor: root.borderHoveredColor,\r\n          },\r\n          '.ms-ComboBox-Input': [\r\n            {\r\n              color: semanticColors.inputTextHovered,\r\n            },\r\n            getPlaceholderStyles(placeholderStylesHovered),\r\n            inputHighContrastStyles,\r\n          ],\r\n          [HighContrastSelector]: {\r\n            color: 'HighlightText',\r\n            backgroundColor: 'Window',\r\n            ...getHighContrastNoAdjustStyle(),\r\n            selectors: {\r\n              ':after': {\r\n                borderColor: 'Highlight',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n\r\n      rootPressed: [\r\n        {\r\n          position: 'relative',\r\n          selectors: {\r\n            [HighContrastSelector]: ComboBoxRootHighContrastFocused,\r\n          },\r\n        },\r\n      ],\r\n\r\n      rootFocused: [\r\n        {\r\n          selectors: {\r\n            '.ms-ComboBox-Input': [\r\n              {\r\n                color: semanticColors.inputTextHovered,\r\n              },\r\n              inputHighContrastStyles,\r\n            ],\r\n            [HighContrastSelector]: ComboBoxRootHighContrastFocused,\r\n          },\r\n        },\r\n        focusBorderStyles,\r\n      ],\r\n\r\n      rootDisabled: getDisabledStyles(theme),\r\n\r\n      rootError: {\r\n        selectors: {\r\n          ':after': {\r\n            borderColor: root.erroredColor,\r\n          },\r\n          ':hover:after': {\r\n            borderColor: semanticColors.inputBorderHovered,\r\n          },\r\n        },\r\n      },\r\n\r\n      rootDisallowFreeForm: {},\r\n\r\n      input: [\r\n        getPlaceholderStyles(placeholderStyles),\r\n        {\r\n          backgroundColor: root.backgroundColor,\r\n          color: root.textColor,\r\n          boxSizing: 'border-box',\r\n          width: '100%',\r\n          height: '100%',\r\n          borderStyle: 'none',\r\n          outline: 'none',\r\n          font: 'inherit',\r\n          textOverflow: 'ellipsis',\r\n          padding: '0',\r\n          selectors: {\r\n            '::-ms-clear': {\r\n              display: 'none',\r\n            },\r\n          },\r\n        },\r\n        inputHighContrastStyles,\r\n      ],\r\n\r\n      inputDisabled: [getDisabledStyles(theme), getPlaceholderStyles(disabledPlaceholderStyles)],\r\n      errorMessage: [\r\n        theme.fonts.small,\r\n        {\r\n          color: root.erroredColor,\r\n          marginTop: '5px',\r\n        },\r\n      ],\r\n\r\n      callout: {\r\n        boxShadow: effects.elevation8,\r\n      },\r\n\r\n      optionsContainerWrapper: {\r\n        width: comboBoxOptionWidth,\r\n      },\r\n\r\n      optionsContainer: {\r\n        display: 'block',\r\n      },\r\n      screenReaderText: hiddenContentStyle,\r\n\r\n      header: [\r\n        fonts.medium,\r\n        {\r\n          fontWeight: FontWeights.semibold,\r\n          color: option.headerTextColor,\r\n          backgroundColor: 'none',\r\n          borderStyle: 'none',\r\n          height: ComboBoxOptionHeight,\r\n          lineHeight: ComboBoxOptionHeight,\r\n          cursor: 'default',\r\n          padding: '0 8px',\r\n          userSelect: 'none',\r\n          textAlign: 'left',\r\n          selectors: {\r\n            [HighContrastSelector]: {\r\n              color: 'GrayText',\r\n              ...getHighContrastNoAdjustStyle(),\r\n            },\r\n          },\r\n        },\r\n      ],\r\n\r\n      divider: {\r\n        height: 1,\r\n        backgroundColor: option.dividerBorderColor,\r\n      },\r\n    };\r\n\r\n    return concatStyleSets(styles, customStyles);\r\n  },\r\n);\r\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}