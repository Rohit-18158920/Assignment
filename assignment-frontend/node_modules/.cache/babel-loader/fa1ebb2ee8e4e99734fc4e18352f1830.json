{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport * as stylesImport from './BaseFloatingPicker.scss';\nimport { Async, initializeComponentRef, css, KeyCodes } from '../../Utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\nvar styles = stylesImport;\n\nvar BaseFloatingPicker =\n/** @class */\nfunction (_super) {\n  __extends(BaseFloatingPicker, _super);\n\n  function BaseFloatingPicker(basePickerProps) {\n    var _this = _super.call(this, basePickerProps) || this;\n\n    _this.root = React.createRef();\n    _this.suggestionsControl = React.createRef();\n    _this.SuggestionsControlOfProperType = SuggestionsControl;\n    _this.isComponentMounted = false;\n\n    _this.onQueryStringChanged = function (queryString) {\n      if (queryString !== _this.state.queryString) {\n        _this.setState({\n          queryString: queryString\n        });\n\n        if (_this.props.onInputChanged) {\n          _this.props.onInputChanged(queryString);\n        }\n\n        _this.updateValue(queryString);\n      }\n    };\n\n    _this.hidePicker = function () {\n      var wasShownBeforeUpdate = _this.isSuggestionsShown;\n\n      _this.setState({\n        suggestionsVisible: false\n      });\n\n      if (_this.props.onSuggestionsHidden && wasShownBeforeUpdate) {\n        _this.props.onSuggestionsHidden();\n      }\n    };\n\n    _this.showPicker = function (updateValue) {\n      if (updateValue === void 0) {\n        updateValue = false;\n      }\n\n      var wasShownBeforeUpdate = _this.isSuggestionsShown;\n\n      _this.setState({\n        suggestionsVisible: true\n      }); // Update the suggestions if updateValue == true\n\n\n      var value = _this.props.inputElement ? _this.props.inputElement.value : '';\n\n      if (updateValue) {\n        _this.updateValue(value);\n      }\n\n      if (_this.props.onSuggestionsShown && !wasShownBeforeUpdate) {\n        _this.props.onSuggestionsShown();\n      }\n    };\n\n    _this.completeSuggestion = function () {\n      if (_this.suggestionsControl.current && _this.suggestionsControl.current.hasSuggestionSelected()) {\n        _this.onChange(_this.suggestionsControl.current.currentSuggestion.item);\n      }\n    };\n\n    _this.onSuggestionClick = function (ev, item, index) {\n      _this.onChange(item);\n\n      _this._updateSuggestionsVisible(false\n      /*shouldShow*/\n      );\n    };\n\n    _this.onSuggestionRemove = function (ev, item, index) {\n      if (_this.props.onRemoveSuggestion) {\n        _this.props.onRemoveSuggestion(item);\n      }\n\n      if (_this.suggestionsControl.current) {\n        _this.suggestionsControl.current.removeSuggestion(index);\n      }\n    };\n\n    _this.onKeyDown = function (ev) {\n      if (!_this.state.suggestionsVisible || _this.props.inputElement && !_this.props.inputElement.contains(ev.target)) {\n        return;\n      } // eslint-disable-next-line deprecation/deprecation\n\n\n      var keyCode = ev.which;\n\n      switch (keyCode) {\n        case KeyCodes.escape:\n          _this.hidePicker();\n\n          ev.preventDefault();\n          ev.stopPropagation();\n          break;\n\n        case KeyCodes.tab:\n        case KeyCodes.enter:\n          if (!ev.shiftKey && !ev.ctrlKey && _this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n          } else {\n            _this._onValidateInput();\n          }\n\n          break;\n\n        case KeyCodes.del:\n          if (_this.props.onRemoveSuggestion && _this.suggestionsControl.current && _this.suggestionsControl.current.hasSuggestionSelected && _this.suggestionsControl.current.currentSuggestion && ev.shiftKey) {\n            _this.props.onRemoveSuggestion(_this.suggestionsControl.current.currentSuggestion.item);\n\n            _this.suggestionsControl.current.removeSuggestion();\n\n            _this.forceUpdate();\n\n            ev.stopPropagation();\n          }\n\n          break;\n\n        case KeyCodes.up:\n          if (_this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            _this._updateActiveDescendant();\n          }\n\n          break;\n\n        case KeyCodes.down:\n          if (_this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            _this._updateActiveDescendant();\n          }\n\n          break;\n      }\n    };\n\n    _this._onValidateInput = function () {\n      if (_this.state.queryString && _this.props.onValidateInput && _this.props.createGenericItem) {\n        var itemToConvert = _this.props.createGenericItem(_this.state.queryString, _this.props.onValidateInput(_this.state.queryString));\n\n        var convertedItems = _this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\n\n        _this.onChange(convertedItems[0].item);\n      }\n    };\n\n    _this._async = new Async(_this);\n    initializeComponentRef(_this);\n    _this.suggestionStore = basePickerProps.suggestionsStore;\n    _this.state = {\n      queryString: '',\n      didBind: false\n    };\n    return _this;\n  }\n\n  Object.defineProperty(BaseFloatingPicker.prototype, \"inputText\", {\n    get: function () {\n      return this.state.queryString;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseFloatingPicker.prototype, \"suggestions\", {\n    get: function () {\n      return this.suggestionStore.suggestions;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseFloatingPicker.prototype.forceResolveSuggestion = function () {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.completeSuggestion();\n    } else {\n      this._onValidateInput();\n    }\n  };\n\n  Object.defineProperty(BaseFloatingPicker.prototype, \"currentSelectedSuggestionIndex\", {\n    get: function () {\n      return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(BaseFloatingPicker.prototype, \"isSuggestionsShown\", {\n    get: function () {\n      return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BaseFloatingPicker.prototype.componentDidMount = function () {\n    this._bindToInputElement();\n\n    this.isComponentMounted = true;\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  };\n\n  BaseFloatingPicker.prototype.componentDidUpdate = function () {\n    this._bindToInputElement();\n  };\n\n  BaseFloatingPicker.prototype.componentWillUnmount = function () {\n    this._unbindFromInputElement();\n\n    this.isComponentMounted = false;\n  };\n\n  BaseFloatingPicker.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    if (newProps.suggestionItems) {\n      this.updateSuggestions(newProps.suggestionItems);\n    }\n  };\n\n  BaseFloatingPicker.prototype.updateSuggestions = function (suggestions, forceUpdate) {\n    if (forceUpdate === void 0) {\n      forceUpdate = false;\n    }\n\n    this.suggestionStore.updateSuggestions(suggestions);\n\n    if (forceUpdate) {\n      this.forceUpdate();\n    }\n  };\n\n  BaseFloatingPicker.prototype.render = function () {\n    var className = this.props.className;\n    return React.createElement(\"div\", {\n      ref: this.root,\n      className: css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')\n    }, this.renderSuggestions());\n  };\n\n  BaseFloatingPicker.prototype.renderSuggestions = function () {\n    var TypedSuggestionsControl = this.SuggestionsControlOfProperType;\n    return this.state.suggestionsVisible ? React.createElement(Callout, __assign({\n      className: styles.callout,\n      isBeakVisible: false,\n      gapSpace: 5,\n      target: this.props.inputElement,\n      onDismiss: this.hidePicker,\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      directionalHintForRTL: DirectionalHint.bottomRightEdge,\n      calloutWidth: this.props.calloutWidth ? this.props.calloutWidth : 0\n    }, this.props.pickerCalloutProps), React.createElement(TypedSuggestionsControl, __assign({\n      onRenderSuggestion: this.props.onRenderSuggestionsItem,\n      onSuggestionClick: this.onSuggestionClick,\n      onSuggestionRemove: this.onSuggestionRemove,\n      suggestions: this.suggestionStore.getSuggestions(),\n      componentRef: this.suggestionsControl,\n      completeSuggestion: this.completeSuggestion,\n      shouldLoopSelection: false\n    }, this.props.pickerSuggestionsProps))) : null;\n  };\n\n  BaseFloatingPicker.prototype.onSelectionChange = function () {\n    this.forceUpdate();\n  };\n\n  BaseFloatingPicker.prototype.updateValue = function (updatedValue) {\n    if (updatedValue === '') {\n      this.updateSuggestionWithZeroState();\n    } else {\n      this._onResolveSuggestions(updatedValue);\n    }\n  };\n\n  BaseFloatingPicker.prototype.updateSuggestionWithZeroState = function () {\n    if (this.props.onZeroQuerySuggestion) {\n      var onEmptyInputFocus = this.props.onZeroQuerySuggestion;\n      var suggestions = onEmptyInputFocus(this.props.selectedItems);\n      this.updateSuggestionsList(suggestions);\n    } else {\n      this.hidePicker();\n    }\n  };\n\n  BaseFloatingPicker.prototype.updateSuggestionsList = function (suggestions) {\n    var _this = this;\n\n    var suggestionsArray = suggestions;\n    var suggestionsPromiseLike = suggestions; // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n    // If it is then resolve it asynchronously.\n\n    if (Array.isArray(suggestionsArray)) {\n      this.updateSuggestions(suggestionsArray, true\n      /*forceUpdate*/\n      );\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      var promise_1 = this.currentPromise = suggestionsPromiseLike;\n      promise_1.then(function (newSuggestions) {\n        // Only update if the next promise has not yet resolved and\n        // the floating picker is still mounted.\n        if (promise_1 === _this.currentPromise && _this.isComponentMounted) {\n          _this.updateSuggestions(newSuggestions, true\n          /*forceUpdate*/\n          );\n        }\n      });\n    }\n  };\n\n  BaseFloatingPicker.prototype.onChange = function (item) {\n    if (this.props.onChange) {\n      this.props.onChange(item);\n    }\n  };\n\n  BaseFloatingPicker.prototype._updateActiveDescendant = function () {\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\n      var selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\n\n      if (selectedElId) {\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId);\n      }\n    }\n  };\n\n  BaseFloatingPicker.prototype._onResolveSuggestions = function (updatedValue) {\n    var suggestions = this.props.onResolveSuggestions(updatedValue, this.props.selectedItems);\n\n    this._updateSuggestionsVisible(true\n    /*shouldShow*/\n    );\n\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions);\n    }\n  };\n\n  BaseFloatingPicker.prototype._updateSuggestionsVisible = function (shouldShow) {\n    if (shouldShow) {\n      this.showPicker();\n    } else {\n      this.hidePicker();\n    }\n  };\n\n  BaseFloatingPicker.prototype._bindToInputElement = function () {\n    if (this.props.inputElement && !this.state.didBind) {\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\n      this.setState({\n        didBind: true\n      });\n    }\n  };\n\n  BaseFloatingPicker.prototype._unbindFromInputElement = function () {\n    if (this.props.inputElement && this.state.didBind) {\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\n      this.setState({\n        didBind: false\n      });\n    }\n  };\n\n  return BaseFloatingPicker;\n}(React.Component);\n\nexport { BaseFloatingPicker };","map":{"version":3,"sources":["components/FloatingPicker/BaseFloatingPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as stylesImport from './BaseFloatingPicker.scss';\nimport { Async, initializeComponentRef, css, KeyCodes } from '../../Utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { IBaseFloatingPicker, IBaseFloatingPickerProps } from './BaseFloatingPicker.types';\nimport { ISuggestionModel } from '../../Pickers';\nimport { ISuggestionsControlProps } from './Suggestions/Suggestions.types';\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\nimport { SuggestionsStore } from './Suggestions/SuggestionsStore';\nconst styles: any = stylesImport;\n\nexport interface IBaseFloatingPickerState {\n  queryString: string;\n  suggestionsVisible?: boolean;\n  didBind: boolean;\n}\n\nexport class BaseFloatingPicker<T, P extends IBaseFloatingPickerProps<T>>\n  extends React.Component<P, IBaseFloatingPickerState>\n  implements IBaseFloatingPicker {\n  protected selection: Selection;\n\n  protected root = React.createRef<HTMLDivElement>();\n  protected suggestionStore: SuggestionsStore<T>;\n  protected suggestionsControl: React.RefObject<SuggestionsControl<T>> = React.createRef();\n  protected SuggestionsControlOfProperType: new (props: ISuggestionsControlProps<T>) => SuggestionsControl<\n    T\n  > = SuggestionsControl as new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T>;\n  protected currentPromise: PromiseLike<T[]>;\n  protected isComponentMounted: boolean = false;\n\n  private _async: Async;\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    this._async = new Async(this);\n    initializeComponentRef(this);\n\n    this.suggestionStore = basePickerProps.suggestionsStore;\n    this.state = {\n      queryString: '',\n      didBind: false,\n    };\n  }\n\n  public get inputText(): string {\n    return this.state.queryString;\n  }\n\n  public get suggestions(): any[] {\n    return this.suggestionStore.suggestions;\n  }\n\n  public forceResolveSuggestion(): void {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.completeSuggestion();\n    } else {\n      this._onValidateInput();\n    }\n  }\n\n  public get currentSelectedSuggestionIndex(): number {\n    return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\n  }\n\n  public get isSuggestionsShown(): boolean {\n    return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\n  }\n\n  public onQueryStringChanged = (queryString: string): void => {\n    if (queryString !== this.state.queryString) {\n      this.setState({\n        queryString: queryString,\n      });\n\n      if (this.props.onInputChanged) {\n        (this.props.onInputChanged as (filter: string) => void)(queryString);\n      }\n\n      this.updateValue(queryString);\n    }\n  };\n\n  public hidePicker = (): void => {\n    const wasShownBeforeUpdate = this.isSuggestionsShown;\n\n    this.setState({\n      suggestionsVisible: false,\n    });\n\n    if (this.props.onSuggestionsHidden && wasShownBeforeUpdate) {\n      this.props.onSuggestionsHidden();\n    }\n  };\n\n  public showPicker = (updateValue: boolean = false): void => {\n    const wasShownBeforeUpdate = this.isSuggestionsShown;\n    this.setState({\n      suggestionsVisible: true,\n    });\n\n    // Update the suggestions if updateValue == true\n    const value = this.props.inputElement ? this.props.inputElement.value : '';\n    if (updateValue) {\n      this.updateValue(value);\n    }\n\n    if (this.props.onSuggestionsShown && !wasShownBeforeUpdate) {\n      this.props.onSuggestionsShown();\n    }\n  };\n\n  public componentDidMount(): void {\n    this._bindToInputElement();\n    this.isComponentMounted = true;\n\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  }\n\n  public componentDidUpdate(): void {\n    this._bindToInputElement();\n  }\n\n  public componentWillUnmount(): void {\n    this._unbindFromInputElement();\n    this.isComponentMounted = false;\n  }\n\n  public UNSAFE_componentWillReceiveProps(newProps: IBaseFloatingPickerProps<T>): void {\n    if (newProps.suggestionItems) {\n      this.updateSuggestions(newProps.suggestionItems);\n    }\n  }\n\n  public completeSuggestion = (): void => {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.onChange(this.suggestionsControl.current.currentSuggestion!.item);\n    }\n  };\n\n  public updateSuggestions(suggestions: T[], forceUpdate: boolean = false): void {\n    this.suggestionStore.updateSuggestions(suggestions);\n\n    if (forceUpdate) {\n      this.forceUpdate();\n    }\n  }\n\n  public render(): JSX.Element {\n    const { className } = this.props;\n    return (\n      <div ref={this.root} className={css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')}>\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n\n  protected renderSuggestions(): JSX.Element | null {\n    const TypedSuggestionsControl = this.SuggestionsControlOfProperType;\n    return this.state.suggestionsVisible ? (\n      <Callout\n        className={styles.callout}\n        isBeakVisible={false}\n        gapSpace={5}\n        target={this.props.inputElement}\n        onDismiss={this.hidePicker}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        directionalHintForRTL={DirectionalHint.bottomRightEdge}\n        calloutWidth={this.props.calloutWidth ? this.props.calloutWidth : 0}\n        {...this.props.pickerCalloutProps}\n      >\n        <TypedSuggestionsControl\n          onRenderSuggestion={this.props.onRenderSuggestionsItem}\n          onSuggestionClick={this.onSuggestionClick}\n          onSuggestionRemove={this.onSuggestionRemove}\n          suggestions={this.suggestionStore.getSuggestions()}\n          componentRef={this.suggestionsControl}\n          completeSuggestion={this.completeSuggestion}\n          shouldLoopSelection={false}\n          {...this.props.pickerSuggestionsProps}\n        />\n      </Callout>\n    ) : null;\n  }\n\n  protected onSelectionChange(): void {\n    this.forceUpdate();\n  }\n\n  protected updateValue(updatedValue: string): void {\n    if (updatedValue === '') {\n      this.updateSuggestionWithZeroState();\n    } else {\n      this._onResolveSuggestions(updatedValue);\n    }\n  }\n\n  protected updateSuggestionWithZeroState(): void {\n    if (this.props.onZeroQuerySuggestion) {\n      const onEmptyInputFocus = this.props.onZeroQuerySuggestion as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\n      const suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.props.selectedItems);\n      this.updateSuggestionsList(suggestions);\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>): void {\n    const suggestionsArray: T[] = suggestions as T[];\n    const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\n\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n    // If it is then resolve it asynchronously.\n    if (Array.isArray(suggestionsArray)) {\n      this.updateSuggestions(suggestionsArray, true /*forceUpdate*/);\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      const promise: PromiseLike<T[]> = (this.currentPromise = suggestionsPromiseLike);\n      promise.then((newSuggestions: T[]) => {\n        // Only update if the next promise has not yet resolved and\n        // the floating picker is still mounted.\n        if (promise === this.currentPromise && this.isComponentMounted) {\n          this.updateSuggestions(newSuggestions, true /*forceUpdate*/);\n        }\n      });\n    }\n  }\n\n  protected onChange(item: T): void {\n    if (this.props.onChange) {\n      (this.props.onChange as (items: T) => void)(item);\n    }\n  }\n\n  protected onSuggestionClick = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\n    this.onChange(item);\n    this._updateSuggestionsVisible(false /*shouldShow*/);\n  };\n\n  protected onSuggestionRemove = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\n    if (this.props.onRemoveSuggestion) {\n      (this.props.onRemoveSuggestion as (item: T) => void)(item);\n    }\n\n    if (this.suggestionsControl.current) {\n      this.suggestionsControl.current.removeSuggestion(index);\n    }\n  };\n\n  protected onKeyDown = (ev: MouseEvent): void => {\n    if (\n      !this.state.suggestionsVisible ||\n      (this.props.inputElement && !(this.props.inputElement as HTMLElement).contains(ev.target as HTMLElement))\n    ) {\n      return;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    const keyCode = ev.which;\n    switch (keyCode) {\n      case KeyCodes.escape:\n        this.hidePicker();\n        ev.preventDefault();\n        ev.stopPropagation();\n        break;\n\n      case KeyCodes.tab:\n      case KeyCodes.enter:\n        if (\n          !ev.shiftKey &&\n          !ev.ctrlKey &&\n          this.suggestionsControl.current &&\n          this.suggestionsControl.current.handleKeyDown(keyCode)\n        ) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        } else {\n          this._onValidateInput();\n        }\n        break;\n\n      case KeyCodes.del:\n        if (\n          this.props.onRemoveSuggestion &&\n          this.suggestionsControl.current &&\n          this.suggestionsControl.current.hasSuggestionSelected &&\n          this.suggestionsControl.current.currentSuggestion &&\n          ev.shiftKey\n        ) {\n          (this.props.onRemoveSuggestion as (item: T) => void)(this.suggestionsControl.current.currentSuggestion!.item);\n\n          this.suggestionsControl.current.removeSuggestion();\n          this.forceUpdate();\n          ev.stopPropagation();\n        }\n        break;\n\n      case KeyCodes.up:\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._updateActiveDescendant();\n        }\n        break;\n\n      case KeyCodes.down:\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._updateActiveDescendant();\n        }\n        break;\n    }\n  };\n\n  private _updateActiveDescendant(): void {\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\n      const selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\n      if (selectedElId) {\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId as string);\n      }\n    }\n  }\n\n  private _onResolveSuggestions(updatedValue: string): void {\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(\n      updatedValue,\n      this.props.selectedItems,\n    );\n\n    this._updateSuggestionsVisible(true /*shouldShow*/);\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions);\n    }\n  }\n\n  private _onValidateInput = (): void => {\n    if (this.state.queryString && this.props.onValidateInput && this.props.createGenericItem) {\n      const itemToConvert: ISuggestionModel<T> = (this.props.createGenericItem as (\n        input: string,\n        isValid: boolean,\n      ) => ISuggestionModel<T>)(\n        this.state.queryString,\n        (this.props.onValidateInput as (input: string) => boolean)(this.state.queryString),\n      );\n      const convertedItems = this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\n      this.onChange(convertedItems[0].item);\n    }\n  };\n\n  private _updateSuggestionsVisible(shouldShow: boolean): void {\n    if (shouldShow) {\n      this.showPicker();\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  private _bindToInputElement(): void {\n    if (this.props.inputElement && !this.state.didBind) {\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\n      this.setState({ didBind: true });\n    }\n  }\n\n  private _unbindFromInputElement(): void {\n    if (this.props.inputElement && this.state.didBind) {\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\n      this.setState({ didBind: false });\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}