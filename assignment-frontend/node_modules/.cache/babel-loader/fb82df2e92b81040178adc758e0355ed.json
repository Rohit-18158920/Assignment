{"ast":null,"code":"import { __assign, __extends } from \"tslib\"; // Utilities\n\nimport * as React from 'react';\nimport { classNamesFunction, elementContains, focusFirstChild, getDocument, KeyCodes, shallowCompare, getRTL, warnDeprecations, EventGroup, Async, initializeComponentRef } from '../../Utilities';\nimport { RectangleEdge, getOppositeEdge } from '../../utilities/positioning'; // Component Dependencies\n\nimport { PositioningContainer } from './PositioningContainer/index';\nimport { Beak, BEAK_HEIGHT, BEAK_WIDTH } from './Beak/Beak';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { COACHMARK_HEIGHT, COACHMARK_WIDTH } from './Coachmark.styles';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nvar getClassNames = classNamesFunction();\nexport var COACHMARK_ATTRIBUTE_NAME = 'data-coachmarkid';\nvar COMPONENT_NAME = 'Coachmark';\n\nvar CoachmarkBase =\n/** @class */\nfunction (_super) {\n  __extends(CoachmarkBase, _super);\n\n  function CoachmarkBase(props) {\n    var _this = _super.call(this, props) || this;\n    /**\n     * The cached HTMLElement reference to the Entity Inner Host\n     * element.\n     */\n\n\n    _this._entityHost = React.createRef();\n    _this._entityInnerHostElement = React.createRef();\n    _this._translateAnimationContainer = React.createRef();\n    _this._ariaAlertContainer = React.createRef();\n    _this._childrenContainer = React.createRef();\n    _this._positioningContainer = React.createRef();\n\n    _this.dismiss = function (ev) {\n      var onDismiss = _this.props.onDismiss;\n\n      if (onDismiss) {\n        onDismiss(ev);\n      }\n    };\n\n    _this._onKeyDown = function (e) {\n      // Open coachmark if user presses ALT + C (arbitrary keypress for now)\n      if (e.altKey && e.which === KeyCodes.c || e.which === KeyCodes.enter && _this._translateAnimationContainer.current && _this._translateAnimationContainer.current.contains(e.target)) {\n        _this._onFocusHandler();\n      }\n    };\n\n    _this._onFocusHandler = function () {\n      if (_this.state.isCollapsed) {\n        _this._openCoachmark();\n      }\n    };\n\n    _this._onPositioned = function (positionData) {\n      _this._async.requestAnimationFrame(function () {\n        _this.setState({\n          targetAlignment: positionData.alignmentEdge,\n          targetPosition: positionData.targetEdge\n        });\n      });\n    };\n\n    _this._setBeakPosition = function () {\n      var beakLeft;\n      var beakTop;\n      var beakRight;\n      var beakBottom;\n      var transformOriginX;\n      var transformOriginY;\n      var targetAlignment = _this.state.targetAlignment;\n      var distanceAdjustment = '3px'; // Adjustment distance for Beak to shift towards Coachmark bubble.\n\n      switch (_this._beakDirection) {\n        // If Beak is pointing Up or Down\n        case RectangleEdge.top:\n        case RectangleEdge.bottom:\n          // If there is no target alignment, then beak is X-axis centered in callout\n          if (!targetAlignment) {\n            beakLeft = \"calc(50% - \" + BEAK_WIDTH / 2 + \"px)\";\n            transformOriginX = 'center';\n          } else {\n            // Beak is aligned to the left of target\n            if (targetAlignment === RectangleEdge.left) {\n              beakLeft = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n              transformOriginX = 'left';\n            } else {\n              // Beak is aligned to the right of target\n              beakRight = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n              transformOriginX = 'right';\n            }\n          }\n\n          if (_this._beakDirection === RectangleEdge.top) {\n            beakTop = distanceAdjustment;\n            transformOriginY = 'top';\n          } else {\n            beakBottom = distanceAdjustment;\n            transformOriginY = 'bottom';\n          }\n\n          break;\n        // If Beak is pointing Left or Right\n\n        case RectangleEdge.left:\n        case RectangleEdge.right:\n          // If there is no target alignment, then beak is Y-axis centered in callout\n          if (!targetAlignment) {\n            beakTop = \"calc(50% - \" + BEAK_WIDTH / 2 + \"px)\";\n            transformOriginY = \"center\";\n          } else {\n            // Beak is aligned to the top of target\n            if (targetAlignment === RectangleEdge.top) {\n              beakTop = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n              transformOriginY = \"top\";\n            } else {\n              // Beak is aligned to the bottom of target\n              beakBottom = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n              transformOriginY = \"bottom\";\n            }\n          }\n\n          if (_this._beakDirection === RectangleEdge.left) {\n            if (getRTL(_this.props.theme)) {\n              beakRight = distanceAdjustment;\n            } else {\n              beakLeft = distanceAdjustment;\n            }\n\n            transformOriginX = 'left';\n          } else {\n            if (getRTL(_this.props.theme)) {\n              beakLeft = distanceAdjustment;\n            } else {\n              beakRight = distanceAdjustment;\n            }\n\n            transformOriginX = 'right';\n          }\n\n          break;\n      }\n\n      _this.setState({\n        beakLeft: beakLeft,\n        beakRight: beakRight,\n        beakBottom: beakBottom,\n        beakTop: beakTop,\n        transformOrigin: transformOriginX + \" \" + transformOriginY\n      });\n    };\n\n    _this._openCoachmark = function () {\n      _this.setState({\n        isCollapsed: false\n      });\n\n      if (_this.props.onAnimationOpenStart) {\n        _this.props.onAnimationOpenStart();\n      }\n\n      _this._entityInnerHostElement.current && _this._entityInnerHostElement.current.addEventListener('transitionend', function () {\n        // Need setTimeout to trigger narrator\n        _this._async.setTimeout(function () {\n          if (_this._entityInnerHostElement.current) {\n            focusFirstChild(_this._entityInnerHostElement.current);\n          }\n        }, 1000);\n\n        if (_this.props.onAnimationOpenEnd) {\n          _this.props.onAnimationOpenEnd();\n        }\n      });\n    };\n\n    _this._async = new Async(_this);\n    _this._events = new EventGroup(_this);\n    initializeComponentRef(_this);\n    warnDeprecations(COMPONENT_NAME, props, {\n      teachingBubbleRef: undefined,\n      collapsed: 'isCollapsed',\n      beakWidth: undefined,\n      beakHeight: undefined,\n      width: undefined,\n      height: undefined\n    }); // Set defaults for state\n\n    _this.state = {\n      isCollapsed: props.isCollapsed,\n      isBeaconAnimating: true,\n      isMeasuring: true,\n      entityInnerHostRect: {\n        width: 0,\n        height: 0\n      },\n      isMouseInProximity: false,\n      isMeasured: false\n    };\n    return _this;\n  }\n\n  Object.defineProperty(CoachmarkBase.prototype, \"_beakDirection\", {\n    get: function () {\n      var targetPosition = this.state.targetPosition;\n\n      if (targetPosition === undefined) {\n        return RectangleEdge.bottom;\n      }\n\n      return getOppositeEdge(targetPosition);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CoachmarkBase.prototype.render = function () {\n    var _a = this.props,\n        beaconColorOne = _a.beaconColorOne,\n        beaconColorTwo = _a.beaconColorTwo,\n        children = _a.children,\n        target = _a.target,\n        color = _a.color,\n        positioningContainerProps = _a.positioningContainerProps,\n        ariaDescribedBy = _a.ariaDescribedBy,\n        ariaDescribedByText = _a.ariaDescribedByText,\n        ariaLabelledBy = _a.ariaLabelledBy,\n        ariaLabelledByText = _a.ariaLabelledByText,\n        ariaAlertText = _a.ariaAlertText,\n        delayBeforeCoachmarkAnimation = _a.delayBeforeCoachmarkAnimation,\n        styles = _a.styles,\n        theme = _a.theme,\n        className = _a.className,\n        persistentBeak = _a.persistentBeak;\n    var _b = this.state,\n        beakLeft = _b.beakLeft,\n        beakTop = _b.beakTop,\n        beakRight = _b.beakRight,\n        beakBottom = _b.beakBottom,\n        isCollapsed = _b.isCollapsed,\n        isBeaconAnimating = _b.isBeaconAnimating,\n        isMeasuring = _b.isMeasuring,\n        entityInnerHostRect = _b.entityInnerHostRect,\n        transformOrigin = _b.transformOrigin,\n        alertText = _b.alertText,\n        isMeasured = _b.isMeasured; // Defaulting the main background before passing it to the styles because it is used for `Beak` too.\n\n    var defaultColor = color;\n\n    if (!defaultColor && theme) {\n      defaultColor = theme.semanticColors.primaryButtonBackground;\n    }\n\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      beaconColorOne: beaconColorOne,\n      beaconColorTwo: beaconColorTwo,\n      className: className,\n      isCollapsed: isCollapsed,\n      isBeaconAnimating: isBeaconAnimating,\n      isMeasuring: isMeasuring,\n      color: defaultColor,\n      transformOrigin: transformOrigin,\n      isMeasured: isMeasured,\n      entityHostHeight: entityInnerHostRect.height + \"px\",\n      entityHostWidth: entityInnerHostRect.width + \"px\",\n      width: COACHMARK_WIDTH + \"px\",\n      height: COACHMARK_HEIGHT + \"px\",\n      delayBeforeCoachmarkAnimation: delayBeforeCoachmarkAnimation + \"ms\"\n    });\n    var finalHeight = isCollapsed ? COACHMARK_HEIGHT : entityInnerHostRect.height;\n    return React.createElement(PositioningContainer, __assign({\n      target: target,\n      offsetFromTarget: BEAK_HEIGHT,\n      componentRef: this._positioningContainer,\n      finalHeight: finalHeight,\n      onPositioned: this._onPositioned,\n      bounds: this._getBounds()\n    }, positioningContainerProps), React.createElement(\"div\", {\n      className: classNames.root\n    }, ariaAlertText && React.createElement(\"div\", {\n      className: classNames.ariaContainer,\n      role: \"alert\",\n      ref: this._ariaAlertContainer,\n      \"aria-hidden\": !isCollapsed\n    }, alertText), React.createElement(\"div\", {\n      className: classNames.pulsingBeacon\n    }), React.createElement(\"div\", {\n      className: classNames.translateAnimationContainer,\n      ref: this._translateAnimationContainer\n    }, React.createElement(\"div\", {\n      className: classNames.scaleAnimationLayer\n    }, React.createElement(\"div\", {\n      className: classNames.rotateAnimationLayer\n    }, this._positioningContainer.current && (isCollapsed || persistentBeak) && React.createElement(Beak, {\n      left: beakLeft,\n      top: beakTop,\n      right: beakRight,\n      bottom: beakBottom,\n      direction: this._beakDirection,\n      color: defaultColor\n    }), React.createElement(\"div\", {\n      className: classNames.entityHost,\n      ref: this._entityHost,\n      tabIndex: -1,\n      \"data-is-focusable\": true,\n      role: \"dialog\",\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-describedby\": ariaDescribedBy\n    }, isCollapsed && [ariaLabelledBy && React.createElement(\"p\", {\n      id: ariaLabelledBy,\n      key: 0,\n      className: classNames.ariaContainer\n    }, ariaLabelledByText), ariaDescribedBy && React.createElement(\"p\", {\n      id: ariaDescribedBy,\n      key: 1,\n      className: classNames.ariaContainer\n    }, ariaDescribedByText)], React.createElement(FocusTrapZone, {\n      isClickableOutsideFocusTrap: true,\n      forceFocusInsideTrap: false\n    }, React.createElement(\"div\", {\n      className: classNames.entityInnerHost,\n      ref: this._entityInnerHostElement\n    }, React.createElement(\"div\", {\n      className: classNames.childrenContainer,\n      ref: this._childrenContainer,\n      \"aria-hidden\": isCollapsed\n    }, children)))))))));\n  };\n\n  CoachmarkBase.prototype.UNSAFE_componentWillReceiveProps = function (newProps) {\n    if (this.props.isCollapsed && !newProps.isCollapsed) {\n      // The coachmark is about to open\n      this._openCoachmark();\n    }\n  };\n\n  CoachmarkBase.prototype.shouldComponentUpdate = function (newProps, newState) {\n    return !shallowCompare(newProps, this.props) || !shallowCompare(newState, this.state);\n  };\n\n  CoachmarkBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (prevState.targetAlignment !== this.state.targetAlignment || prevState.targetPosition !== this.state.targetPosition) {\n      this._setBeakPosition();\n    }\n\n    if (prevProps.preventDismissOnLostFocus !== this.props.preventDismissOnLostFocus) {\n      this._addListeners();\n    }\n  };\n\n  CoachmarkBase.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this._async.requestAnimationFrame(function () {\n      if (_this._entityInnerHostElement.current && _this.state.entityInnerHostRect.width + _this.state.entityInnerHostRect.width === 0) {\n        _this.setState({\n          isMeasuring: false,\n          entityInnerHostRect: {\n            width: _this._entityInnerHostElement.current.offsetWidth,\n            height: _this._entityInnerHostElement.current.offsetHeight\n          },\n          isMeasured: true\n        });\n\n        _this._setBeakPosition();\n\n        _this.forceUpdate();\n      }\n\n      _this._addListeners(); // We don't want to the user to immediately trigger the Coachmark when it's opened\n\n\n      _this._async.setTimeout(function () {\n        _this._addProximityHandler(_this.props.mouseProximityOffset);\n      }, _this.props.delayBeforeMouseOpen); // Need to add setTimeout to have narrator read change in alert container\n\n\n      if (_this.props.ariaAlertText) {\n        _this._async.setTimeout(function () {\n          if (_this.props.ariaAlertText && _this._ariaAlertContainer.current) {\n            _this.setState({\n              alertText: _this.props.ariaAlertText\n            });\n          }\n        }, 0);\n      }\n\n      if (!_this.props.preventFocusOnMount) {\n        _this._async.setTimeout(function () {\n          if (_this._entityHost.current) {\n            _this._entityHost.current.focus();\n          }\n        }, 1000);\n      }\n    });\n  };\n\n  CoachmarkBase.prototype.componentWillUnmount = function () {\n    this._async.dispose();\n\n    this._events.dispose();\n  };\n\n  CoachmarkBase.prototype._addListeners = function () {\n    var preventDismissOnLostFocus = this.props.preventDismissOnLostFocus;\n    var currentDoc = getDocument();\n\n    this._events.off();\n\n    if (currentDoc) {\n      this._events.on(currentDoc, 'keydown', this._onKeyDown, true);\n\n      if (!preventDismissOnLostFocus) {\n        this._events.on(currentDoc, 'click', this._dismissOnLostFocus, true);\n\n        this._events.on(currentDoc, 'focus', this._dismissOnLostFocus, true);\n      }\n    }\n  };\n\n  CoachmarkBase.prototype._dismissOnLostFocus = function (ev) {\n    var clickTarget = ev.target;\n    var clickedOutsideCallout = this._translateAnimationContainer.current && !elementContains(this._translateAnimationContainer.current, clickTarget);\n    var target = this.props.target;\n\n    if (clickedOutsideCallout && clickTarget !== target && !elementContains(target, clickTarget)) {\n      this.dismiss(ev);\n    }\n  };\n\n  CoachmarkBase.prototype._getBounds = function () {\n    var _a = this.props,\n        isPositionForced = _a.isPositionForced,\n        positioningContainerProps = _a.positioningContainerProps;\n\n    if (isPositionForced) {\n      // If directionalHint direction is the top or bottom auto edge, then we want to set the left/right bounds\n      // to the window x-axis to have auto positioning work correctly.\n      if (positioningContainerProps && (positioningContainerProps.directionalHint === DirectionalHint.topAutoEdge || positioningContainerProps.directionalHint === DirectionalHint.bottomAutoEdge)) {\n        return {\n          left: 0,\n          top: -Infinity,\n          bottom: Infinity,\n          right: window.innerWidth,\n          width: window.innerWidth,\n          height: Infinity\n        };\n      } else {\n        return {\n          left: -Infinity,\n          top: -Infinity,\n          bottom: Infinity,\n          right: Infinity,\n          width: Infinity,\n          height: Infinity\n        };\n      }\n    } else {\n      return undefined;\n    }\n  };\n\n  CoachmarkBase.prototype._addProximityHandler = function (mouseProximityOffset) {\n    var _this = this;\n\n    if (mouseProximityOffset === void 0) {\n      mouseProximityOffset = 0;\n    }\n    /**\n     * An array of cached ids returned when setTimeout runs during\n     * the window resize event trigger.\n     */\n\n\n    var timeoutIds = []; // Take the initial measure out of the initial render to prevent\n    // an unnecessary render.\n\n    this._async.setTimeout(function () {\n      _this._setTargetElementRect(); // When the window resizes we want to async\n      // get the bounding client rectangle.\n      // Every time the event is triggered we want to\n      // setTimeout and then clear any previous instances\n      // of setTimeout.\n\n\n      _this._events.on(window, 'resize', function () {\n        timeoutIds.forEach(function (value) {\n          clearInterval(value);\n        });\n        timeoutIds.push(_this._async.setTimeout(function () {\n          _this._setTargetElementRect();\n        }, 100));\n      });\n    }, 10); // Every time the document's mouse move is triggered\n    // we want to check if inside of an element and\n    // set the state with the result.\n\n\n    this._events.on(document, 'mousemove', function (e) {\n      if (_this.state.isCollapsed) {\n        var mouseY = e.clientY;\n        var mouseX = e.clientX;\n\n        _this._setTargetElementRect();\n\n        var isMouseInProximity = _this._isInsideElement(mouseX, mouseY, mouseProximityOffset);\n\n        if (isMouseInProximity !== _this.state.isMouseInProximity) {\n          _this._openCoachmark();\n        }\n      }\n\n      if (_this.props.onMouseMove) {\n        _this.props.onMouseMove(e);\n      }\n    });\n  };\n\n  CoachmarkBase.prototype._setTargetElementRect = function () {\n    if (this._translateAnimationContainer && this._translateAnimationContainer.current) {\n      this._targetElementRect = this._translateAnimationContainer.current.getBoundingClientRect();\n    }\n  };\n\n  CoachmarkBase.prototype._isInsideElement = function (mouseX, mouseY, mouseProximityOffset) {\n    if (mouseProximityOffset === void 0) {\n      mouseProximityOffset = 0;\n    }\n\n    return mouseX > this._targetElementRect.left - mouseProximityOffset && mouseX < this._targetElementRect.left + this._targetElementRect.width + mouseProximityOffset && mouseY > this._targetElementRect.top - mouseProximityOffset && mouseY < this._targetElementRect.top + this._targetElementRect.height + mouseProximityOffset;\n  };\n\n  CoachmarkBase.defaultProps = {\n    isCollapsed: true,\n    mouseProximityOffset: 10,\n    delayBeforeMouseOpen: 3600,\n    delayBeforeCoachmarkAnimation: 0,\n    isPositionForced: true,\n    positioningContainerProps: {\n      directionalHint: DirectionalHint.bottomAutoEdge\n    }\n  };\n  return CoachmarkBase;\n}(React.Component);\n\nexport { CoachmarkBase };","map":{"version":3,"sources":["components/Coachmark/Coachmark.base.tsx"],"names":[],"mappings":"6CAAA;;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SACE,kBADF,EAEE,eAFF,EAGE,eAHF,EAIE,WAJF,EAME,QANF,EAOE,cAPF,EAQE,MARF,EASE,gBATF,EAUE,UAVF,EAWE,KAXF,EAYE,sBAZF,QAaO,iBAbP;AAcA,SAA0B,aAA1B,EAAyC,eAAzC,QAAgE,6BAAhE,C,CAEA;;AACA,SAAS,oBAAT,QAA4D,8BAA5D;AACA,SAAS,IAAT,EAAe,WAAf,EAA4B,UAA5B,QAA8C,aAA9C;AACA,SAAS,eAAT,QAAgC,8BAAhC;AAIA,SAAS,gBAAT,EAA2B,eAA3B,QAAkD,oBAAlD;AACA,SAAS,aAAT,QAA8B,qBAA9B;AAEA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;AAEA,OAAO,IAAM,wBAAwB,GAAG,kBAAjC;AAqFP,IAAM,cAAc,GAAG,WAAvB;;AAEA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAgCjC,WAAA,aAAA,CAAY,KAAZ,EAAkC;AAAlC,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;AAjBA;;;AAGG;;;AACK,IAAA,KAAA,CAAA,WAAA,GAAc,KAAK,CAAC,SAAN,EAAd;AACA,IAAA,KAAA,CAAA,uBAAA,GAA0B,KAAK,CAAC,SAAN,EAA1B;AACA,IAAA,KAAA,CAAA,4BAAA,GAA+B,KAAK,CAAC,SAAN,EAA/B;AACA,IAAA,KAAA,CAAA,mBAAA,GAAsB,KAAK,CAAC,SAAN,EAAtB;AACA,IAAA,KAAA,CAAA,kBAAA,GAAqB,KAAK,CAAC,SAAN,EAArB;AACA,IAAA,KAAA,CAAA,qBAAA,GAAwB,KAAK,CAAC,SAAN,EAAxB;;AAiQD,IAAA,KAAA,CAAA,OAAA,GAAU,UAAC,EAAD,EAA8E;AACrF,UAAA,SAAA,GAAA,KAAA,CAAA,KAAA,CAAA,SAAA;;AAER,UAAI,SAAJ,EAAe;AACb,QAAA,SAAS,CAAC,EAAD,CAAT;AACD;AACF,KANM;;AAoCC,IAAA,KAAA,CAAA,UAAA,GAAa,UAAC,CAAD,EAAO;AAC1B;AACA,UACG,CAAC,CAAC,MAAF,IAAY,CAAC,CAAC,KAAF,KAAY,QAAQ,CAAC,CAAlC,IACC,CAAC,CAAC,KAAF,KAAY,QAAQ,CAAC,KAArB,IACC,KAAI,CAAC,4BAAL,CAAkC,OADnC,IAEC,KAAI,CAAC,4BAAL,CAAkC,OAAlC,CAA0C,QAA1C,CAAmD,CAAC,CAAC,MAArD,CAJJ,EAKE;AACA,QAAA,KAAI,CAAC,eAAL;AACD;AACF,KAVO;;AAYA,IAAA,KAAA,CAAA,eAAA,GAAkB,YAAA;AACxB,UAAI,KAAI,CAAC,KAAL,CAAW,WAAf,EAA4B;AAC1B,QAAA,KAAI,CAAC,cAAL;AACD;AACF,KAJO;;AAMA,IAAA,KAAA,CAAA,aAAA,GAAgB,UAAC,YAAD,EAA8B;AACpD,MAAA,KAAI,CAAC,MAAL,CAAY,qBAAZ,CAAkC,YAAA;AAChC,QAAA,KAAI,CAAC,QAAL,CAAc;AACZ,UAAA,eAAe,EAAE,YAAY,CAAC,aADlB;AAEZ,UAAA,cAAc,EAAE,YAAY,CAAC;AAFjB,SAAd;AAID,OALD;AAMD,KAPO;;AA0CA,IAAA,KAAA,CAAA,gBAAA,GAAmB,YAAA;AACzB,UAAI,QAAJ;AACA,UAAI,OAAJ;AACA,UAAI,SAAJ;AACA,UAAI,UAAJ;AACA,UAAI,gBAAJ;AACA,UAAI,gBAAJ;AAEQ,UAAA,eAAA,GAAA,KAAA,CAAA,KAAA,CAAA,eAAA;AACR,UAAM,kBAAkB,GAAG,KAA3B,CATyB,CASS;;AAElC,cAAQ,KAAI,CAAC,cAAb;AACE;AACA,aAAK,aAAa,CAAC,GAAnB;AACA,aAAK,aAAa,CAAC,MAAnB;AACE;AACA,cAAI,CAAC,eAAL,EAAsB;AACpB,YAAA,QAAQ,GAAG,gBAAc,UAAU,GAAG,CAA3B,GAA4B,KAAvC;AACA,YAAA,gBAAgB,GAAG,QAAnB;AACD,WAHD,MAGO;AACL;AACA,gBAAI,eAAe,KAAK,aAAa,CAAC,IAAtC,EAA4C;AAC1C,cAAA,QAAQ,GAAM,eAAe,GAAG,CAAlB,GAAsB,UAAU,GAAG,CAAnC,GAAoC,IAAlD;AACA,cAAA,gBAAgB,GAAG,MAAnB;AACD,aAHD,MAGO;AACL;AACA,cAAA,SAAS,GAAM,eAAe,GAAG,CAAlB,GAAsB,UAAU,GAAG,CAAnC,GAAoC,IAAnD;AACA,cAAA,gBAAgB,GAAG,OAAnB;AACD;AACF;;AAED,cAAI,KAAI,CAAC,cAAL,KAAwB,aAAa,CAAC,GAA1C,EAA+C;AAC7C,YAAA,OAAO,GAAG,kBAAV;AACA,YAAA,gBAAgB,GAAG,KAAnB;AACD,WAHD,MAGO;AACL,YAAA,UAAU,GAAG,kBAAb;AACA,YAAA,gBAAgB,GAAG,QAAnB;AACD;;AACD;AACF;;AACA,aAAK,aAAa,CAAC,IAAnB;AACA,aAAK,aAAa,CAAC,KAAnB;AACE;AACA,cAAI,CAAC,eAAL,EAAsB;AACpB,YAAA,OAAO,GAAG,gBAAc,UAAU,GAAG,CAA3B,GAA4B,KAAtC;AACA,YAAA,gBAAgB,GAAG,QAAnB;AACD,WAHD,MAGO;AACL;AACA,gBAAI,eAAe,KAAK,aAAa,CAAC,GAAtC,EAA2C;AACzC,cAAA,OAAO,GAAM,eAAe,GAAG,CAAlB,GAAsB,UAAU,GAAG,CAAnC,GAAoC,IAAjD;AACA,cAAA,gBAAgB,GAAG,KAAnB;AACD,aAHD,MAGO;AACL;AACA,cAAA,UAAU,GAAM,eAAe,GAAG,CAAlB,GAAsB,UAAU,GAAG,CAAnC,GAAoC,IAApD;AACA,cAAA,gBAAgB,GAAG,QAAnB;AACD;AACF;;AAED,cAAI,KAAI,CAAC,cAAL,KAAwB,aAAa,CAAC,IAA1C,EAAgD;AAC9C,gBAAI,MAAM,CAAC,KAAI,CAAC,KAAL,CAAW,KAAZ,CAAV,EAA8B;AAC5B,cAAA,SAAS,GAAG,kBAAZ;AACD,aAFD,MAEO;AACL,cAAA,QAAQ,GAAG,kBAAX;AACD;;AACD,YAAA,gBAAgB,GAAG,MAAnB;AACD,WAPD,MAOO;AACL,gBAAI,MAAM,CAAC,KAAI,CAAC,KAAL,CAAW,KAAZ,CAAV,EAA8B;AAC5B,cAAA,QAAQ,GAAG,kBAAX;AACD,aAFD,MAEO;AACL,cAAA,SAAS,GAAG,kBAAZ;AACD;;AACD,YAAA,gBAAgB,GAAG,OAAnB;AACD;;AACD;AA9DJ;;AAiEA,MAAA,KAAI,CAAC,QAAL,CAAc;AACZ,QAAA,QAAQ,EAAE,QADE;AAEZ,QAAA,SAAS,EAAE,SAFC;AAGZ,QAAA,UAAU,EAAE,UAHA;AAIZ,QAAA,OAAO,EAAE,OAJG;AAKZ,QAAA,eAAe,EAAK,gBAAgB,GAAA,GAAhB,GAAoB;AAL5B,OAAd;AAOD,KAnFO;;AAqFA,IAAA,KAAA,CAAA,cAAA,GAAiB,YAAA;AACvB,MAAA,KAAI,CAAC,QAAL,CAAc;AACZ,QAAA,WAAW,EAAE;AADD,OAAd;;AAIA,UAAI,KAAI,CAAC,KAAL,CAAW,oBAAf,EAAqC;AACnC,QAAA,KAAI,CAAC,KAAL,CAAW,oBAAX;AACD;;AAED,MAAA,KAAI,CAAC,uBAAL,CAA6B,OAA7B,IACE,KAAI,CAAC,uBAAL,CAA6B,OAA7B,CAAqC,gBAArC,CAAsD,eAAtD,EAAuE,YAAA;AACrE;AACA,QAAA,KAAI,CAAC,MAAL,CAAY,UAAZ,CAAuB,YAAA;AACrB,cAAI,KAAI,CAAC,uBAAL,CAA6B,OAAjC,EAA0C;AACxC,YAAA,eAAe,CAAC,KAAI,CAAC,uBAAL,CAA6B,OAA9B,CAAf;AACD;AACF,SAJD,EAIG,IAJH;;AAMA,YAAI,KAAI,CAAC,KAAL,CAAW,kBAAf,EAAmC;AACjC,UAAA,KAAI,CAAC,KAAL,CAAW,kBAAX;AACD;AACF,OAXD,CADF;AAaD,KAtBO;;AA3aN,IAAA,KAAI,CAAC,MAAL,GAAc,IAAI,KAAJ,CAAU,KAAV,CAAd;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,IAAI,UAAJ,CAAe,KAAf,CAAf;AACA,IAAA,sBAAsB,CAAC,KAAD,CAAtB;AAEA,IAAA,gBAAgB,CAAC,cAAD,EAAiB,KAAjB,EAAwB;AACtC,MAAA,iBAAiB,EAAE,SADmB;AAEtC,MAAA,SAAS,EAAE,aAF2B;AAGtC,MAAA,SAAS,EAAE,SAH2B;AAItC,MAAA,UAAU,EAAE,SAJ0B;AAKtC,MAAA,KAAK,EAAE,SAL+B;AAMtC,MAAA,MAAM,EAAE;AAN8B,KAAxB,CAAhB,CAPgC,CAgBhC;;AACA,IAAA,KAAI,CAAC,KAAL,GAAa;AACX,MAAA,WAAW,EAAE,KAAK,CAAC,WADR;AAEX,MAAA,iBAAiB,EAAE,IAFR;AAGX,MAAA,WAAW,EAAE,IAHF;AAIX,MAAA,mBAAmB,EAAE;AACnB,QAAA,KAAK,EAAE,CADY;AAEnB,QAAA,MAAM,EAAE;AAFW,OAJV;AAQX,MAAA,kBAAkB,EAAE,KART;AASX,MAAA,UAAU,EAAE;AATD,KAAb;;AAWD;;AAED,EAAA,MAAA,CAAA,cAAA,CAAY,aAAA,CAAA,SAAZ,EAAY,gBAAZ,EAA0B;SAA1B,YAAA;AACU,UAAA,cAAA,GAAA,KAAA,KAAA,CAAA,cAAA;;AACR,UAAI,cAAc,KAAK,SAAvB,EAAkC;AAChC,eAAO,aAAa,CAAC,MAArB;AACD;;AAED,aAAO,eAAe,CAAC,cAAD,CAAtB;AACD,KAPyB;oBAAA;;AAAA,GAA1B;;AASO,EAAA,aAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QACJ,cAAA,GAAA,EAAA,CAAA,cADI;AAAA,QAEJ,cAAA,GAAA,EAAA,CAAA,cAFI;AAAA,QAGJ,QAAA,GAAA,EAAA,CAAA,QAHI;AAAA,QAIJ,MAAA,GAAA,EAAA,CAAA,MAJI;AAAA,QAKJ,KAAA,GAAA,EAAA,CAAA,KALI;AAAA,QAMJ,yBAAA,GAAA,EAAA,CAAA,yBANI;AAAA,QAOJ,eAAA,GAAA,EAAA,CAAA,eAPI;AAAA,QAQJ,mBAAA,GAAA,EAAA,CAAA,mBARI;AAAA,QASJ,cAAA,GAAA,EAAA,CAAA,cATI;AAAA,QAUJ,kBAAA,GAAA,EAAA,CAAA,kBAVI;AAAA,QAWJ,aAAA,GAAA,EAAA,CAAA,aAXI;AAAA,QAYJ,6BAAA,GAAA,EAAA,CAAA,6BAZI;AAAA,QAaJ,MAAA,GAAA,EAAA,CAAA,MAbI;AAAA,QAcJ,KAAA,GAAA,EAAA,CAAA,KAdI;AAAA,QAeJ,SAAA,GAAA,EAAA,CAAA,SAfI;AAAA,QAgBJ,cAAA,GAAA,EAAA,CAAA,cAhBI;AAmBA,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QACJ,QAAA,GAAA,EAAA,CAAA,QADI;AAAA,QAEJ,OAAA,GAAA,EAAA,CAAA,OAFI;AAAA,QAGJ,SAAA,GAAA,EAAA,CAAA,SAHI;AAAA,QAIJ,UAAA,GAAA,EAAA,CAAA,UAJI;AAAA,QAKJ,WAAA,GAAA,EAAA,CAAA,WALI;AAAA,QAMJ,iBAAA,GAAA,EAAA,CAAA,iBANI;AAAA,QAOJ,WAAA,GAAA,EAAA,CAAA,WAPI;AAAA,QAQJ,mBAAA,GAAA,EAAA,CAAA,mBARI;AAAA,QASJ,eAAA,GAAA,EAAA,CAAA,eATI;AAAA,QAUJ,SAAA,GAAA,EAAA,CAAA,SAVI;AAAA,QAWJ,UAAA,GAAA,EAAA,CAAA,UAXI,CApBR,CAkCE;;AACA,QAAI,YAAY,GAAG,KAAnB;;AACA,QAAI,CAAC,YAAD,IAAiB,KAArB,EAA4B;AAC1B,MAAA,YAAY,GAAG,KAAK,CAAC,cAAN,CAAqB,uBAApC;AACD;;AAED,QAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;AACvC,MAAA,KAAK,EAAA,KADkC;AAEvC,MAAA,cAAc,EAAA,cAFyB;AAGvC,MAAA,cAAc,EAAA,cAHyB;AAIvC,MAAA,SAAS,EAAA,SAJ8B;AAKvC,MAAA,WAAW,EAAA,WAL4B;AAMvC,MAAA,iBAAiB,EAAA,iBANsB;AAOvC,MAAA,WAAW,EAAA,WAP4B;AAQvC,MAAA,KAAK,EAAE,YARgC;AASvC,MAAA,eAAe,EAAA,eATwB;AAUvC,MAAA,UAAU,EAAA,UAV6B;AAWvC,MAAA,gBAAgB,EAAK,mBAAmB,CAAC,MAApB,GAA0B,IAXR;AAYvC,MAAA,eAAe,EAAK,mBAAmB,CAAC,KAApB,GAAyB,IAZN;AAavC,MAAA,KAAK,EAAK,eAAe,GAAA,IAbc;AAcvC,MAAA,MAAM,EAAK,gBAAgB,GAAA,IAdY;AAevC,MAAA,6BAA6B,EAAK,6BAA6B,GAAA;AAfxB,KAAT,CAAhC;AAkBA,QAAM,WAAW,GAAW,WAAW,GAAG,gBAAH,GAAsB,mBAAmB,CAAC,MAAjF;AAEA,WACE,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB,QAAA,CAAA;AACnB,MAAA,MAAM,EAAE,MADW;AAEnB,MAAA,gBAAgB,EAAE,WAFC;AAGnB,MAAA,YAAY,EAAE,KAAK,qBAHA;AAInB,MAAA,WAAW,EAAE,WAJM;AAKnB,MAAA,YAAY,EAAE,KAAK,aALA;AAMnB,MAAA,MAAM,EAAE,KAAK,UAAL;AANW,KAAA,EAOf,yBAPe,CAArB,EASE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC;AAA3B,KAAA,EACG,aAAa,IACZ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,SAAS,EAAE,UAAU,CAAC,aADxB;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,GAAG,EAAE,KAAK,mBAHZ;AAG+B,qBAChB,CAAC;AAJhB,KAAA,EAMG,SANH,CAFJ,EAWE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC;AAA3B,KAAA,CAXF,EAYE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC,2BAA3B;AAAwD,MAAA,GAAG,EAAE,KAAK;AAAlE,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC;AAA3B,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC;AAA3B,KAAA,EACG,KAAK,qBAAL,CAA2B,OAA3B,KAAuC,WAAW,IAAI,cAAtD,KACC,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AACH,MAAA,IAAI,EAAE,QADH;AAEH,MAAA,GAAG,EAAE,OAFF;AAGH,MAAA,KAAK,EAAE,SAHJ;AAIH,MAAA,MAAM,EAAE,UAJL;AAKH,MAAA,SAAS,EAAE,KAAK,cALb;AAMH,MAAA,KAAK,EAAE;AANJ,KAAL,CAFJ,EAWE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,SAAS,EAAE,UAAU,CAAC,UADxB;AAEE,MAAA,GAAG,EAAE,KAAK,WAFZ;AAGE,MAAA,QAAQ,EAAE,CAAC,CAHb;AAGc,2BACO,IAJrB;AAKE,MAAA,IAAI,EAAC,QALP;AAKe,yBACI,cANnB;AAMiC,0BACb;AAPpB,KAAA,EASG,WAAW,IAAI,CACd,cAAc,IACZ,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,MAAA,EAAE,EAAE,cAAP;AAAuB,MAAA,GAAG,EAAE,CAA5B;AAA+B,MAAA,SAAS,EAAE,UAAU,CAAC;AAArD,KAAA,EACG,kBADH,CAFY,EAMd,eAAe,IACb,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,MAAA,EAAE,EAAE,eAAP;AAAwB,MAAA,GAAG,EAAE,CAA7B;AAAgC,MAAA,SAAS,EAAE,UAAU,CAAC;AAAtD,KAAA,EACG,mBADH,CAPY,CATlB,EAqBE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAC,MAAA,2BAA2B,EAAE,IAA9B;AAAoC,MAAA,oBAAoB,EAAE;AAA1D,KAAd,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC,eAA3B;AAA4C,MAAA,GAAG,EAAE,KAAK;AAAtD,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,SAAS,EAAE,UAAU,CAAC,iBADxB;AAEE,MAAA,GAAG,EAAE,KAAK,kBAFZ;AAE8B,qBACf;AAHf,KAAA,EAKG,QALH,CADF,CADF,CArBF,CAXF,CADF,CADF,CAZF,CATF,CADF;AA0ED,GAtIM;;AAwIA,EAAA,aAAA,CAAA,SAAA,CAAA,gCAAA,GAAP,UAAwC,QAAxC,EAAiE;AAC/D,QAAI,KAAK,KAAL,CAAW,WAAX,IAA0B,CAAC,QAAQ,CAAC,WAAxC,EAAqD;AACnD;AACA,WAAK,cAAL;AACD;AACF,GALM;;AAOA,EAAA,aAAA,CAAA,SAAA,CAAA,qBAAA,GAAP,UAA6B,QAA7B,EAAwD,QAAxD,EAAiF;AAC/E,WAAO,CAAC,cAAc,CAAC,QAAD,EAAW,KAAK,KAAhB,CAAf,IAAyC,CAAC,cAAc,CAAC,QAAD,EAAW,KAAK,KAAhB,CAA/D;AACD,GAFM;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,kBAAA,GAAP,UAA0B,SAA1B,EAAsD,SAAtD,EAAgF;AAC9E,QACE,SAAS,CAAC,eAAV,KAA8B,KAAK,KAAL,CAAW,eAAzC,IACA,SAAS,CAAC,cAAV,KAA6B,KAAK,KAAL,CAAW,cAF1C,EAGE;AACA,WAAK,gBAAL;AACD;;AACD,QAAI,SAAS,CAAC,yBAAV,KAAwC,KAAK,KAAL,CAAW,yBAAvD,EAAkF;AAChF,WAAK,aAAL;AACD;AACF,GAVM;;AAYA,EAAA,aAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,MAAL,CAAY,qBAAZ,CAAkC,YAAA;AAChC,UACE,KAAI,CAAC,uBAAL,CAA6B,OAA7B,IACA,KAAI,CAAC,KAAL,CAAW,mBAAX,CAA+B,KAA/B,GAAuC,KAAI,CAAC,KAAL,CAAW,mBAAX,CAA+B,KAAtE,KAAgF,CAFlF,EAGE;AACA,QAAA,KAAI,CAAC,QAAL,CAAc;AACZ,UAAA,WAAW,EAAE,KADD;AAEZ,UAAA,mBAAmB,EAAE;AACnB,YAAA,KAAK,EAAE,KAAI,CAAC,uBAAL,CAA6B,OAA7B,CAAqC,WADzB;AAEnB,YAAA,MAAM,EAAE,KAAI,CAAC,uBAAL,CAA6B,OAA7B,CAAqC;AAF1B,WAFT;AAMZ,UAAA,UAAU,EAAE;AANA,SAAd;;AAQA,QAAA,KAAI,CAAC,gBAAL;;AACA,QAAA,KAAI,CAAC,WAAL;AACD;;AAED,MAAA,KAAI,CAAC,aAAL,GAjBgC,CAmBhC;;;AACA,MAAA,KAAI,CAAC,MAAL,CAAY,UAAZ,CAAuB,YAAA;AACrB,QAAA,KAAI,CAAC,oBAAL,CAA0B,KAAI,CAAC,KAAL,CAAW,oBAArC;AACD,OAFD,EAEG,KAAI,CAAC,KAAL,CAAW,oBAFd,EApBgC,CAwBhC;;;AACA,UAAI,KAAI,CAAC,KAAL,CAAW,aAAf,EAA8B;AAC5B,QAAA,KAAI,CAAC,MAAL,CAAY,UAAZ,CAAuB,YAAA;AACrB,cAAI,KAAI,CAAC,KAAL,CAAW,aAAX,IAA4B,KAAI,CAAC,mBAAL,CAAyB,OAAzD,EAAkE;AAChE,YAAA,KAAI,CAAC,QAAL,CAAc;AACZ,cAAA,SAAS,EAAE,KAAI,CAAC,KAAL,CAAW;AADV,aAAd;AAGD;AACF,SAND,EAMG,CANH;AAOD;;AAED,UAAI,CAAC,KAAI,CAAC,KAAL,CAAW,mBAAhB,EAAqC;AACnC,QAAA,KAAI,CAAC,MAAL,CAAY,UAAZ,CAAuB,YAAA;AACrB,cAAI,KAAI,CAAC,WAAL,CAAiB,OAArB,EAA8B;AAC5B,YAAA,KAAI,CAAC,WAAL,CAAiB,OAAjB,CAAyB,KAAzB;AACD;AACF,SAJD,EAIG,IAJH;AAKD;AACF,KA1CD;AA2CD,GA5CM;;AA8CA,EAAA,aAAA,CAAA,SAAA,CAAA,oBAAA,GAAP,YAAA;AACE,SAAK,MAAL,CAAY,OAAZ;;AACA,SAAK,OAAL,CAAa,OAAb;AACD,GAHM;;AAaC,EAAA,aAAA,CAAA,SAAA,CAAA,aAAA,GAAR,YAAA;AACU,QAAA,yBAAA,GAAA,KAAA,KAAA,CAAA,yBAAA;AACR,QAAM,UAAU,GAAa,WAAW,EAAxC;;AAEA,SAAK,OAAL,CAAa,GAAb;;AAEA,QAAI,UAAJ,EAAgB;AACd,WAAK,OAAL,CAAa,EAAb,CAAgB,UAAhB,EAA4B,SAA5B,EAAuC,KAAK,UAA5C,EAAwD,IAAxD;;AAEA,UAAI,CAAC,yBAAL,EAAgC;AAC9B,aAAK,OAAL,CAAa,EAAb,CAAgB,UAAhB,EAA4B,OAA5B,EAAqC,KAAK,mBAA1C,EAA+D,IAA/D;;AACA,aAAK,OAAL,CAAa,EAAb,CAAgB,UAAhB,EAA4B,OAA5B,EAAqC,KAAK,mBAA1C,EAA+D,IAA/D;AACD;AACF;AACF,GAdO;;AAgBA,EAAA,aAAA,CAAA,SAAA,CAAA,mBAAA,GAAR,UAA4B,EAA5B,EAAqC;AACnC,QAAM,WAAW,GAAG,EAAE,CAAC,MAAvB;AACA,QAAM,qBAAqB,GACzB,KAAK,4BAAL,CAAkC,OAAlC,IACA,CAAC,eAAe,CAAC,KAAK,4BAAL,CAAkC,OAAnC,EAA4C,WAA5C,CAFlB;AAGQ,QAAA,MAAA,GAAA,KAAA,KAAA,CAAA,MAAA;;AAER,QAAI,qBAAqB,IAAI,WAAW,KAAK,MAAzC,IAAmD,CAAC,eAAe,CAAC,MAAD,EAAwB,WAAxB,CAAvE,EAA6G;AAC3G,WAAK,OAAL,CAAa,EAAb;AACD;AACF,GAVO;;AAuCA,EAAA,aAAA,CAAA,SAAA,CAAA,UAAA,GAAR,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,gBAAA,GAAA,EAAA,CAAA,gBAAF;AAAA,QAAoB,yBAAA,GAAA,EAAA,CAAA,yBAApB;;AACN,QAAI,gBAAJ,EAAsB;AACpB;AACA;AACA,UACE,yBAAyB,KACxB,yBAAyB,CAAC,eAA1B,KAA8C,eAAe,CAAC,WAA9D,IACC,yBAAyB,CAAC,eAA1B,KAA8C,eAAe,CAAC,cAFvC,CAD3B,EAIE;AACA,eAAO;AACL,UAAA,IAAI,EAAE,CADD;AAEL,UAAA,GAAG,EAAE,CAAC,QAFD;AAGL,UAAA,MAAM,EAAE,QAHH;AAIL,UAAA,KAAK,EAAE,MAAM,CAAC,UAJT;AAKL,UAAA,KAAK,EAAE,MAAM,CAAC,UALT;AAML,UAAA,MAAM,EAAE;AANH,SAAP;AAQD,OAbD,MAaO;AACL,eAAO;AACL,UAAA,IAAI,EAAE,CAAC,QADF;AAEL,UAAA,GAAG,EAAE,CAAC,QAFD;AAGL,UAAA,MAAM,EAAE,QAHH;AAIL,UAAA,KAAK,EAAE,QAJF;AAKL,UAAA,KAAK,EAAE,QALF;AAML,UAAA,MAAM,EAAE;AANH,SAAP;AAQD;AACF,KA1BD,MA0BO;AACL,aAAO,SAAP;AACD;AACF,GA/BO;;AA8IA,EAAA,aAAA,CAAA,SAAA,CAAA,oBAAA,GAAR,UAA6B,oBAA7B,EAA6D;AAA7D,QAAA,KAAA,GAAA,IAAA;;AAA6B,QAAA,oBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,oBAAA,GAAA,CAAA;AAAgC;AAC3D;;;AAGG;;;AACH,QAAM,UAAU,GAAa,EAA7B,CAL2D,CAO3D;AACA;;AACA,SAAK,MAAL,CAAY,UAAZ,CAAuB,YAAA;AACrB,MAAA,KAAI,CAAC,qBAAL,GADqB,CAGrB;AACA;AACA;AACA;AACA;;;AACA,MAAA,KAAI,CAAC,OAAL,CAAa,EAAb,CAAgB,MAAhB,EAAwB,QAAxB,EAAkC,YAAA;AAChC,QAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,KAAD,EAAc;AAC/B,UAAA,aAAa,CAAC,KAAD,CAAb;AACD,SAFD;AAIA,QAAA,UAAU,CAAC,IAAX,CACE,KAAI,CAAC,MAAL,CAAY,UAAZ,CAAuB,YAAA;AACrB,UAAA,KAAI,CAAC,qBAAL;AACD,SAFD,EAEG,GAFH,CADF;AAKD,OAVD;AAWD,KAnBD,EAmBG,EAnBH,EAT2D,CA8B3D;AACA;AACA;;;AACA,SAAK,OAAL,CAAa,EAAb,CAAgB,QAAhB,EAA0B,WAA1B,EAAuC,UAAC,CAAD,EAAc;AACnD,UAAI,KAAI,CAAC,KAAL,CAAW,WAAf,EAA4B;AAC1B,YAAM,MAAM,GAAG,CAAC,CAAC,OAAjB;AACA,YAAM,MAAM,GAAG,CAAC,CAAC,OAAjB;;AACA,QAAA,KAAI,CAAC,qBAAL;;AACA,YAAM,kBAAkB,GAAG,KAAI,CAAC,gBAAL,CAAsB,MAAtB,EAA8B,MAA9B,EAAsC,oBAAtC,CAA3B;;AAEA,YAAI,kBAAkB,KAAK,KAAI,CAAC,KAAL,CAAW,kBAAtC,EAA0D;AACxD,UAAA,KAAI,CAAC,cAAL;AACD;AACF;;AAED,UAAI,KAAI,CAAC,KAAL,CAAW,WAAf,EAA4B;AAC1B,QAAA,KAAI,CAAC,KAAL,CAAW,WAAX,CAAuB,CAAvB;AACD;AACF,KAfD;AAgBD,GAjDO;;AAmDA,EAAA,aAAA,CAAA,SAAA,CAAA,qBAAA,GAAR,YAAA;AACE,QAAI,KAAK,4BAAL,IAAqC,KAAK,4BAAL,CAAkC,OAA3E,EAAoF;AAClF,WAAK,kBAAL,GAA0B,KAAK,4BAAL,CAAmC,OAAnC,CAA4C,qBAA5C,EAA1B;AACD;AACF,GAJO;;AAMA,EAAA,aAAA,CAAA,SAAA,CAAA,gBAAA,GAAR,UAAyB,MAAzB,EAAyC,MAAzC,EAAyD,oBAAzD,EAAyF;AAAhC,QAAA,oBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,oBAAA,GAAA,CAAA;AAAgC;;AACvF,WACE,MAAM,GAAG,KAAK,kBAAL,CAAwB,IAAxB,GAA+B,oBAAxC,IACA,MAAM,GAAG,KAAK,kBAAL,CAAwB,IAAxB,GAA+B,KAAK,kBAAL,CAAwB,KAAvD,GAA+D,oBADxE,IAEA,MAAM,GAAG,KAAK,kBAAL,CAAwB,GAAxB,GAA8B,oBAFvC,IAGA,MAAM,GAAG,KAAK,kBAAL,CAAwB,GAAxB,GAA8B,KAAK,kBAAL,CAAwB,MAAtD,GAA+D,oBAJ1E;AAMD,GAPO;;AA9hBM,EAAA,aAAA,CAAA,YAAA,GAAyC;AACrD,IAAA,WAAW,EAAE,IADwC;AAErD,IAAA,oBAAoB,EAAE,EAF+B;AAGrD,IAAA,oBAAoB,EAAE,IAH+B;AAIrD,IAAA,6BAA6B,EAAE,CAJsB;AAKrD,IAAA,gBAAgB,EAAE,IALmC;AAMrD,IAAA,yBAAyB,EAAE;AACzB,MAAA,eAAe,EAAE,eAAe,CAAC;AADR;AAN0B,GAAzC;AAsiBhB,SAAA,aAAA;AAAC,CAviBD,CAAmC,KAAK,CAAC,SAAzC,CAAA;;SAAa,a","sourcesContent":["// Utilities\nimport * as React from 'react';\nimport {\n  classNamesFunction,\n  elementContains,\n  focusFirstChild,\n  getDocument,\n  IRectangle,\n  KeyCodes,\n  shallowCompare,\n  getRTL,\n  warnDeprecations,\n  EventGroup,\n  Async,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { IPositionedData, RectangleEdge, getOppositeEdge } from '../../utilities/positioning';\n\n// Component Dependencies\nimport { PositioningContainer, IPositioningContainer } from './PositioningContainer/index';\nimport { Beak, BEAK_HEIGHT, BEAK_WIDTH } from './Beak/Beak';\nimport { DirectionalHint } from '../../common/DirectionalHint';\n\n// Coachmark\nimport { ICoachmark, ICoachmarkProps, ICoachmarkStyles, ICoachmarkStyleProps } from './Coachmark.types';\nimport { COACHMARK_HEIGHT, COACHMARK_WIDTH } from './Coachmark.styles';\nimport { FocusTrapZone } from '../../FocusTrapZone';\n\nconst getClassNames = classNamesFunction<ICoachmarkStyleProps, ICoachmarkStyles>();\n\nexport const COACHMARK_ATTRIBUTE_NAME = 'data-coachmarkid';\n\n/**\n * An interface for the cached dimensions of entity inner host.\n */\nexport interface IEntityRect {\n  width: number;\n  height: number;\n}\n\nexport interface ICoachmarkState {\n  /**\n   * Is the Coachmark currently collapsed into\n   * a tear drop shape\n   */\n  isCollapsed: boolean;\n\n  /**\n   * Enables/Disables the beacon that radiates\n   * from the center of the coachmark.\n   */\n  isBeaconAnimating: boolean;\n\n  /**\n   * Is the teaching bubble currently retreiving the\n   * original dimensions of the hosted entity.\n   */\n  isMeasuring: boolean;\n\n  /**\n   * Is the Coachmark done measuring the hosted entity\n   */\n  isMeasured: boolean;\n\n  /**\n   * Cached width and height of _entityInnerHostElement\n   */\n  entityInnerHostRect: IEntityRect;\n\n  /**\n   * Is the mouse in proximity of the default target element\n   */\n  isMouseInProximity: boolean;\n\n  /**\n   * The left position of the beak\n   */\n  beakLeft?: string;\n\n  /**\n   * The right position of the beak\n   */\n  beakTop?: string;\n\n  /**\n   * The right position of the beak\n   */\n  beakRight?: string;\n\n  /**\n   * The bottom position of the beak\n   */\n  beakBottom?: string;\n\n  /**\n   * Alignment edge of callout in relation to target\n   */\n  targetAlignment?: RectangleEdge;\n\n  /**\n   * Position of Coachmark/TeachingBubble in relation to target\n   */\n  targetPosition?: RectangleEdge;\n\n  /**\n   * Transform origin of teaching bubble callout\n   */\n  transformOrigin?: string;\n\n  /**\n   * ARIA alert text to read aloud with Narrator once the Coachmark is mounted\n   */\n  alertText?: string;\n}\n\nconst COMPONENT_NAME = 'Coachmark';\n\nexport class CoachmarkBase extends React.Component<ICoachmarkProps, ICoachmarkState> implements ICoachmark {\n  public static defaultProps: Partial<ICoachmarkProps> = {\n    isCollapsed: true,\n    mouseProximityOffset: 10,\n    delayBeforeMouseOpen: 3600, // The approximate time the coachmark shows up\n    delayBeforeCoachmarkAnimation: 0,\n    isPositionForced: true,\n    positioningContainerProps: {\n      directionalHint: DirectionalHint.bottomAutoEdge,\n    },\n  };\n\n  private _async: Async;\n  private _events: EventGroup;\n\n  /**\n   * The cached HTMLElement reference to the Entity Inner Host\n   * element.\n   */\n  private _entityHost = React.createRef<HTMLDivElement>();\n  private _entityInnerHostElement = React.createRef<HTMLDivElement>();\n  private _translateAnimationContainer = React.createRef<HTMLDivElement>();\n  private _ariaAlertContainer = React.createRef<HTMLDivElement>();\n  private _childrenContainer = React.createRef<HTMLDivElement>();\n  private _positioningContainer = React.createRef<IPositioningContainer>();\n\n  /**\n   * The target element the mouse would be in\n   * proximity to\n   */\n  private _targetElementRect: ClientRect;\n\n  constructor(props: ICoachmarkProps) {\n    super(props);\n\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n    initializeComponentRef(this);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      teachingBubbleRef: undefined,\n      collapsed: 'isCollapsed',\n      beakWidth: undefined,\n      beakHeight: undefined,\n      width: undefined,\n      height: undefined,\n    });\n\n    // Set defaults for state\n    this.state = {\n      isCollapsed: props.isCollapsed!,\n      isBeaconAnimating: true,\n      isMeasuring: true,\n      entityInnerHostRect: {\n        width: 0,\n        height: 0,\n      },\n      isMouseInProximity: false,\n      isMeasured: false,\n    };\n  }\n\n  private get _beakDirection(): RectangleEdge {\n    const { targetPosition } = this.state;\n    if (targetPosition === undefined) {\n      return RectangleEdge.bottom;\n    }\n\n    return getOppositeEdge(targetPosition);\n  }\n\n  public render(): JSX.Element {\n    const {\n      beaconColorOne,\n      beaconColorTwo,\n      children,\n      target,\n      color,\n      positioningContainerProps,\n      ariaDescribedBy,\n      ariaDescribedByText,\n      ariaLabelledBy,\n      ariaLabelledByText,\n      ariaAlertText,\n      delayBeforeCoachmarkAnimation,\n      styles,\n      theme,\n      className,\n      persistentBeak,\n    } = this.props;\n\n    const {\n      beakLeft,\n      beakTop,\n      beakRight,\n      beakBottom,\n      isCollapsed,\n      isBeaconAnimating,\n      isMeasuring,\n      entityInnerHostRect,\n      transformOrigin,\n      alertText,\n      isMeasured,\n    } = this.state;\n\n    // Defaulting the main background before passing it to the styles because it is used for `Beak` too.\n    let defaultColor = color;\n    if (!defaultColor && theme) {\n      defaultColor = theme.semanticColors.primaryButtonBackground;\n    }\n\n    const classNames = getClassNames(styles, {\n      theme,\n      beaconColorOne,\n      beaconColorTwo,\n      className,\n      isCollapsed,\n      isBeaconAnimating,\n      isMeasuring,\n      color: defaultColor,\n      transformOrigin,\n      isMeasured,\n      entityHostHeight: `${entityInnerHostRect.height}px`,\n      entityHostWidth: `${entityInnerHostRect.width}px`,\n      width: `${COACHMARK_WIDTH}px`,\n      height: `${COACHMARK_HEIGHT}px`,\n      delayBeforeCoachmarkAnimation: `${delayBeforeCoachmarkAnimation}ms`,\n    });\n\n    const finalHeight: number = isCollapsed ? COACHMARK_HEIGHT : entityInnerHostRect.height;\n\n    return (\n      <PositioningContainer\n        target={target}\n        offsetFromTarget={BEAK_HEIGHT}\n        componentRef={this._positioningContainer}\n        finalHeight={finalHeight}\n        onPositioned={this._onPositioned}\n        bounds={this._getBounds()}\n        {...positioningContainerProps}\n      >\n        <div className={classNames.root}>\n          {ariaAlertText && (\n            <div\n              className={classNames.ariaContainer}\n              role=\"alert\"\n              ref={this._ariaAlertContainer}\n              aria-hidden={!isCollapsed}\n            >\n              {alertText}\n            </div>\n          )}\n          <div className={classNames.pulsingBeacon} />\n          <div className={classNames.translateAnimationContainer} ref={this._translateAnimationContainer}>\n            <div className={classNames.scaleAnimationLayer}>\n              <div className={classNames.rotateAnimationLayer}>\n                {this._positioningContainer.current && (isCollapsed || persistentBeak) && (\n                  <Beak\n                    left={beakLeft}\n                    top={beakTop}\n                    right={beakRight}\n                    bottom={beakBottom}\n                    direction={this._beakDirection}\n                    color={defaultColor}\n                  />\n                )}\n                <div\n                  className={classNames.entityHost}\n                  ref={this._entityHost}\n                  tabIndex={-1}\n                  data-is-focusable={true}\n                  role=\"dialog\"\n                  aria-labelledby={ariaLabelledBy}\n                  aria-describedby={ariaDescribedBy}\n                >\n                  {isCollapsed && [\n                    ariaLabelledBy && (\n                      <p id={ariaLabelledBy} key={0} className={classNames.ariaContainer}>\n                        {ariaLabelledByText}\n                      </p>\n                    ),\n                    ariaDescribedBy && (\n                      <p id={ariaDescribedBy} key={1} className={classNames.ariaContainer}>\n                        {ariaDescribedByText}\n                      </p>\n                    ),\n                  ]}\n                  <FocusTrapZone isClickableOutsideFocusTrap={true} forceFocusInsideTrap={false}>\n                    <div className={classNames.entityInnerHost} ref={this._entityInnerHostElement}>\n                      <div\n                        className={classNames.childrenContainer}\n                        ref={this._childrenContainer}\n                        aria-hidden={isCollapsed}\n                      >\n                        {children}\n                      </div>\n                    </div>\n                  </FocusTrapZone>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PositioningContainer>\n    );\n  }\n\n  public UNSAFE_componentWillReceiveProps(newProps: ICoachmarkProps): void {\n    if (this.props.isCollapsed && !newProps.isCollapsed) {\n      // The coachmark is about to open\n      this._openCoachmark();\n    }\n  }\n\n  public shouldComponentUpdate(newProps: ICoachmarkProps, newState: ICoachmarkState): boolean {\n    return !shallowCompare(newProps, this.props) || !shallowCompare(newState, this.state);\n  }\n\n  public componentDidUpdate(prevProps: ICoachmarkProps, prevState: ICoachmarkState): void {\n    if (\n      prevState.targetAlignment !== this.state.targetAlignment ||\n      prevState.targetPosition !== this.state.targetPosition\n    ) {\n      this._setBeakPosition();\n    }\n    if (prevProps.preventDismissOnLostFocus !== this.props.preventDismissOnLostFocus) {\n      this._addListeners();\n    }\n  }\n\n  public componentDidMount(): void {\n    this._async.requestAnimationFrame((): void => {\n      if (\n        this._entityInnerHostElement.current &&\n        this.state.entityInnerHostRect.width + this.state.entityInnerHostRect.width === 0\n      ) {\n        this.setState({\n          isMeasuring: false,\n          entityInnerHostRect: {\n            width: this._entityInnerHostElement.current.offsetWidth,\n            height: this._entityInnerHostElement.current.offsetHeight,\n          },\n          isMeasured: true,\n        });\n        this._setBeakPosition();\n        this.forceUpdate();\n      }\n\n      this._addListeners();\n\n      // We don't want to the user to immediately trigger the Coachmark when it's opened\n      this._async.setTimeout(() => {\n        this._addProximityHandler(this.props.mouseProximityOffset);\n      }, this.props.delayBeforeMouseOpen!);\n\n      // Need to add setTimeout to have narrator read change in alert container\n      if (this.props.ariaAlertText) {\n        this._async.setTimeout(() => {\n          if (this.props.ariaAlertText && this._ariaAlertContainer.current) {\n            this.setState({\n              alertText: this.props.ariaAlertText,\n            });\n          }\n        }, 0);\n      }\n\n      if (!this.props.preventFocusOnMount) {\n        this._async.setTimeout(() => {\n          if (this._entityHost.current) {\n            this._entityHost.current.focus();\n          }\n        }, 1000);\n      }\n    });\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public dismiss = (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const { onDismiss } = this.props;\n\n    if (onDismiss) {\n      onDismiss(ev);\n    }\n  };\n\n  private _addListeners(): void {\n    const { preventDismissOnLostFocus } = this.props;\n    const currentDoc: Document = getDocument()!;\n\n    this._events.off();\n\n    if (currentDoc) {\n      this._events.on(currentDoc, 'keydown', this._onKeyDown, true);\n\n      if (!preventDismissOnLostFocus) {\n        this._events.on(currentDoc, 'click', this._dismissOnLostFocus, true);\n        this._events.on(currentDoc, 'focus', this._dismissOnLostFocus, true);\n      }\n    }\n  }\n\n  private _dismissOnLostFocus(ev: Event) {\n    const clickTarget = ev.target as HTMLElement;\n    const clickedOutsideCallout =\n      this._translateAnimationContainer.current &&\n      !elementContains(this._translateAnimationContainer.current, clickTarget);\n    const { target } = this.props;\n\n    if (clickedOutsideCallout && clickTarget !== target && !elementContains(target as HTMLElement, clickTarget)) {\n      this.dismiss(ev);\n    }\n  }\n\n  private _onKeyDown = (e: any): void => {\n    // Open coachmark if user presses ALT + C (arbitrary keypress for now)\n    if (\n      (e.altKey && e.which === KeyCodes.c) ||\n      (e.which === KeyCodes.enter &&\n        this._translateAnimationContainer.current &&\n        this._translateAnimationContainer.current.contains(e.target))\n    ) {\n      this._onFocusHandler();\n    }\n  };\n\n  private _onFocusHandler = (): void => {\n    if (this.state.isCollapsed) {\n      this._openCoachmark();\n    }\n  };\n\n  private _onPositioned = (positionData: IPositionedData): void => {\n    this._async.requestAnimationFrame((): void => {\n      this.setState({\n        targetAlignment: positionData.alignmentEdge,\n        targetPosition: positionData.targetEdge,\n      });\n    });\n  };\n\n  private _getBounds(): IRectangle | undefined {\n    const { isPositionForced, positioningContainerProps } = this.props;\n    if (isPositionForced) {\n      // If directionalHint direction is the top or bottom auto edge, then we want to set the left/right bounds\n      // to the window x-axis to have auto positioning work correctly.\n      if (\n        positioningContainerProps &&\n        (positioningContainerProps.directionalHint === DirectionalHint.topAutoEdge ||\n          positioningContainerProps.directionalHint === DirectionalHint.bottomAutoEdge)\n      ) {\n        return {\n          left: 0,\n          top: -Infinity,\n          bottom: Infinity,\n          right: window.innerWidth,\n          width: window.innerWidth,\n          height: Infinity,\n        };\n      } else {\n        return {\n          left: -Infinity,\n          top: -Infinity,\n          bottom: Infinity,\n          right: Infinity,\n          width: Infinity,\n          height: Infinity,\n        };\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  private _setBeakPosition = (): void => {\n    let beakLeft;\n    let beakTop;\n    let beakRight;\n    let beakBottom;\n    let transformOriginX;\n    let transformOriginY;\n\n    const { targetAlignment } = this.state;\n    const distanceAdjustment = '3px'; // Adjustment distance for Beak to shift towards Coachmark bubble.\n\n    switch (this._beakDirection) {\n      // If Beak is pointing Up or Down\n      case RectangleEdge.top:\n      case RectangleEdge.bottom:\n        // If there is no target alignment, then beak is X-axis centered in callout\n        if (!targetAlignment) {\n          beakLeft = `calc(50% - ${BEAK_WIDTH / 2}px)`;\n          transformOriginX = 'center';\n        } else {\n          // Beak is aligned to the left of target\n          if (targetAlignment === RectangleEdge.left) {\n            beakLeft = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginX = 'left';\n          } else {\n            // Beak is aligned to the right of target\n            beakRight = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginX = 'right';\n          }\n        }\n\n        if (this._beakDirection === RectangleEdge.top) {\n          beakTop = distanceAdjustment;\n          transformOriginY = 'top';\n        } else {\n          beakBottom = distanceAdjustment;\n          transformOriginY = 'bottom';\n        }\n        break;\n      // If Beak is pointing Left or Right\n      case RectangleEdge.left:\n      case RectangleEdge.right:\n        // If there is no target alignment, then beak is Y-axis centered in callout\n        if (!targetAlignment) {\n          beakTop = `calc(50% - ${BEAK_WIDTH / 2}px)`;\n          transformOriginY = `center`;\n        } else {\n          // Beak is aligned to the top of target\n          if (targetAlignment === RectangleEdge.top) {\n            beakTop = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginY = `top`;\n          } else {\n            // Beak is aligned to the bottom of target\n            beakBottom = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginY = `bottom`;\n          }\n        }\n\n        if (this._beakDirection === RectangleEdge.left) {\n          if (getRTL(this.props.theme)) {\n            beakRight = distanceAdjustment;\n          } else {\n            beakLeft = distanceAdjustment;\n          }\n          transformOriginX = 'left';\n        } else {\n          if (getRTL(this.props.theme)) {\n            beakLeft = distanceAdjustment;\n          } else {\n            beakRight = distanceAdjustment;\n          }\n          transformOriginX = 'right';\n        }\n        break;\n    }\n\n    this.setState({\n      beakLeft: beakLeft,\n      beakRight: beakRight,\n      beakBottom: beakBottom,\n      beakTop: beakTop,\n      transformOrigin: `${transformOriginX} ${transformOriginY}`,\n    });\n  };\n\n  private _openCoachmark = (): void => {\n    this.setState({\n      isCollapsed: false,\n    });\n\n    if (this.props.onAnimationOpenStart) {\n      this.props.onAnimationOpenStart();\n    }\n\n    this._entityInnerHostElement.current &&\n      this._entityInnerHostElement.current.addEventListener('transitionend', (): void => {\n        // Need setTimeout to trigger narrator\n        this._async.setTimeout(() => {\n          if (this._entityInnerHostElement.current) {\n            focusFirstChild(this._entityInnerHostElement.current);\n          }\n        }, 1000);\n\n        if (this.props.onAnimationOpenEnd) {\n          this.props.onAnimationOpenEnd();\n        }\n      });\n  };\n\n  private _addProximityHandler(mouseProximityOffset: number = 0): void {\n    /**\n     * An array of cached ids returned when setTimeout runs during\n     * the window resize event trigger.\n     */\n    const timeoutIds: number[] = [];\n\n    // Take the initial measure out of the initial render to prevent\n    // an unnecessary render.\n    this._async.setTimeout(() => {\n      this._setTargetElementRect();\n\n      // When the window resizes we want to async\n      // get the bounding client rectangle.\n      // Every time the event is triggered we want to\n      // setTimeout and then clear any previous instances\n      // of setTimeout.\n      this._events.on(window, 'resize', (): void => {\n        timeoutIds.forEach((value: number): void => {\n          clearInterval(value);\n        });\n\n        timeoutIds.push(\n          this._async.setTimeout((): void => {\n            this._setTargetElementRect();\n          }, 100),\n        );\n      });\n    }, 10);\n\n    // Every time the document's mouse move is triggered\n    // we want to check if inside of an element and\n    // set the state with the result.\n    this._events.on(document, 'mousemove', (e: MouseEvent) => {\n      if (this.state.isCollapsed) {\n        const mouseY = e.clientY;\n        const mouseX = e.clientX;\n        this._setTargetElementRect();\n        const isMouseInProximity = this._isInsideElement(mouseX, mouseY, mouseProximityOffset);\n\n        if (isMouseInProximity !== this.state.isMouseInProximity) {\n          this._openCoachmark();\n        }\n      }\n\n      if (this.props.onMouseMove) {\n        this.props.onMouseMove(e);\n      }\n    });\n  }\n\n  private _setTargetElementRect(): void {\n    if (this._translateAnimationContainer && this._translateAnimationContainer.current) {\n      this._targetElementRect = this._translateAnimationContainer!.current!.getBoundingClientRect();\n    }\n  }\n\n  private _isInsideElement(mouseX: number, mouseY: number, mouseProximityOffset: number = 0): boolean {\n    return (\n      mouseX > this._targetElementRect.left - mouseProximityOffset &&\n      mouseX < this._targetElementRect.left + this._targetElementRect.width + mouseProximityOffset &&\n      mouseY > this._targetElementRect.top - mouseProximityOffset &&\n      mouseY < this._targetElementRect.top + this._targetElementRect.height + mouseProximityOffset\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}