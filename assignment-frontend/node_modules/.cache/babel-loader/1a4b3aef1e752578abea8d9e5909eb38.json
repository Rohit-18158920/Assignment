{"ast":null,"code":"var _a, _b, _c, _d, _e;\n\nimport { __assign } from \"tslib\";\nimport { PanelType } from './Panel.types';\nimport { AnimationClassNames, AnimationVariables, getGlobalClassNames, HighContrastSelector, ScreenWidthMinMedium, ScreenWidthMinLarge, ScreenWidthMinXLarge, ScreenWidthMinXXLarge, ScreenWidthMinUhfMobile, IconFontSizes } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft'\n};\nvar panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940\n};\nvar panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176\n}; // Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\n\nvar smallPanelSelectors = (_a = {}, _a[\"@media (min-width: \" + ScreenWidthMinMedium + \"px)\"] = {\n  width: panelWidth.sm\n}, _a);\nvar mediumPanelSelectors = (_b = {}, _b[\"@media (min-width: \" + ScreenWidthMinLarge + \"px)\"] = {\n  width: panelWidth.md1\n}, _b[\"@media (min-width: \" + ScreenWidthMinXLarge + \"px)\"] = {\n  width: panelWidth.md2\n}, _b);\nvar largePanelSelectors = (_c = {}, _c[\"@media (min-width: \" + ScreenWidthMinUhfMobile + \"px)\"] = {\n  left: panelMargin.md,\n  width: panelWidth.auto\n}, _c[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.lg\n}, _c);\nvar largeFixedPanelSelectors = (_d = {}, _d[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.auto,\n  width: panelWidth.lg\n}, _d);\nvar extraLargePanelSelectors = (_e = {}, _e[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.xl\n}, _e); // Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\n\nvar getPanelBreakpoints = function (type) {\n  var selectors; // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = __assign({}, smallPanelSelectors);\n      break;\n\n    case PanelType.medium:\n      selectors = __assign(__assign({}, smallPanelSelectors), mediumPanelSelectors);\n      break;\n\n    case PanelType.large:\n      selectors = __assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors);\n      break;\n\n    case PanelType.largeFixed:\n      selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), largeFixedPanelSelectors);\n      break;\n\n    case PanelType.extraLarge:\n      selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), extraLargePanelSelectors);\n      break;\n\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nvar commandBarHeight = '44px';\nvar sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px'\n};\nexport var getStyles = function (props) {\n  var _a;\n\n  var className = props.className,\n      focusTrapZoneClassName = props.focusTrapZoneClassName,\n      hasCloseButton = props.hasCloseButton,\n      headerClassName = props.headerClassName,\n      isAnimating = props.isAnimating,\n      isFooterSticky = props.isFooterSticky,\n      isFooterAtBottom = props.isFooterAtBottom,\n      isOnRightSide = props.isOnRightSide,\n      isOpen = props.isOpen,\n      isHiddenOnDismiss = props.isHiddenOnDismiss,\n      hasCustomNavigation = props.hasCustomNavigation,\n      theme = props.theme,\n      _b = props.type,\n      type = _b === void 0 ? PanelType.smallFixedFar : _b;\n  var effects = theme.effects,\n      fonts = theme.fonts,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n  return {\n    root: [classNames.root, theme.fonts.medium, isOpen && classNames.isOpen, hasCloseButton && classNames.hasCloseButton, {\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }, isCustomPanel && isOnRightSide && classNames.custom, isCustomPanel && !isOnRightSide && classNames.customNear, className],\n    overlay: [{\n      pointerEvents: 'auto',\n      cursor: 'pointer'\n    }, isOpen && isAnimating && AnimationClassNames.fadeIn100, !isOpen && isAnimating && AnimationClassNames.fadeOut100],\n    hiddenPanel: [!isOpen && !isAnimating && isHiddenOnDismiss && {\n      visibility: 'hidden'\n    }],\n    main: [classNames.main, {\n      backgroundColor: semanticColors.bodyBackground,\n      boxShadow: effects.elevation64,\n      pointerEvents: 'auto',\n      position: 'absolute',\n      display: 'flex',\n      flexDirection: 'column',\n      overflowX: 'hidden',\n      overflowY: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      bottom: 0,\n      top: 0,\n      // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n      left: panelMargin.auto,\n      right: panelMargin.none,\n      width: panelWidth.full,\n      selectors: __assign((_a = {}, _a[HighContrastSelector] = {\n        borderLeft: \"3px solid \" + semanticColors.variantBorder,\n        borderRight: \"3px solid \" + semanticColors.variantBorder\n      }, _a), getPanelBreakpoints(type))\n    }, type === PanelType.smallFluid && {\n      left: panelMargin.none\n    }, type === PanelType.smallFixedNear && {\n      left: panelMargin.none,\n      right: panelMargin.auto,\n      width: panelWidth.xs\n    }, type === PanelType.customNear && {\n      right: 'auto',\n      left: 0\n    }, isCustomPanel && {\n      maxWidth: '100vw'\n    }, isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40, isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40, !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40, !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40, focusTrapZoneClassName],\n    commands: [classNames.commands, {\n      marginTop: 18\n    }, hasCustomNavigation && {\n      marginTop: 'inherit'\n    }],\n    navigation: [classNames.navigation, {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }, hasCustomNavigation && {\n      height: commandBarHeight\n    }],\n    contentInner: [classNames.contentInner, {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      overflowY: 'hidden'\n    }],\n    header: [classNames.header, sharedPaddingStyles, {\n      alignSelf: 'flex-start'\n    }, hasCloseButton && !hasCustomNavigation && {\n      flexGrow: 1\n    }, hasCustomNavigation && {\n      // Ensure that title doesn't shrink if screen is too small\n      flexShrink: 0\n    }],\n    headerText: [classNames.headerText, fonts.xLarge, {\n      color: semanticColors.bodyText,\n      lineHeight: '27px',\n      overflowWrap: 'break-word',\n      wordWrap: 'break-word',\n      wordBreak: 'break-word',\n      hyphens: 'auto'\n    }, headerClassName],\n    scrollableContent: [classNames.scrollableContent, {\n      overflowY: 'auto'\n    }, isFooterAtBottom && {\n      flexGrow: 1\n    }],\n    content: [classNames.content, sharedPaddingStyles, {\n      paddingBottom: 20\n    }],\n    footer: [classNames.footer, {\n      // Ensure that footer doesn't shrink if screen is too small\n      flexShrink: 0,\n      borderTop: '1px solid transparent',\n      transition: \"opacity \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction2\n    }, isFooterSticky && {\n      background: semanticColors.bodyBackground,\n      borderTopColor: semanticColors.variantBorder\n    }],\n    footerInner: [classNames.footerInner, sharedPaddingStyles, {\n      paddingBottom: 16,\n      paddingTop: 16\n    }],\n    subComponentStyles: {\n      closeButton: {\n        root: [classNames.closeButton, {\n          marginRight: 14,\n          color: theme.palette.neutralSecondary,\n          fontSize: IconFontSizes.large\n        }, hasCustomNavigation && {\n          marginRight: 0,\n          height: 'auto',\n          width: '44px'\n        }],\n        rootHovered: {\n          color: theme.palette.neutralPrimary\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["components/Panel/Panel.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IPanelStyleProps, IPanelStyles, PanelType } from './Panel.types';\nimport {\n  AnimationClassNames,\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  ScreenWidthMinMedium,\n  ScreenWidthMinLarge,\n  ScreenWidthMinXLarge,\n  ScreenWidthMinXXLarge,\n  ScreenWidthMinUhfMobile,\n  IStyle,\n  IconFontSizes,\n} from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft',\n};\n\nconst panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940,\n};\n\nconst panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176,\n};\n\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nconst smallPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinMedium}px)`]: {\n    width: panelWidth.sm,\n  },\n};\n\nconst mediumPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinLarge}px)`]: {\n    width: panelWidth.md1,\n  },\n  [`@media (min-width: ${ScreenWidthMinXLarge}px)`]: {\n    width: panelWidth.md2,\n  },\n};\n\nconst largePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinUhfMobile}px)`]: {\n    left: panelMargin.md,\n    width: panelWidth.auto,\n  },\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.lg,\n  },\n};\n\nconst largeFixedPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.auto,\n    width: panelWidth.lg,\n  },\n};\n\nconst extraLargePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.xl,\n  },\n};\n\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nconst getPanelBreakpoints = (type: PanelType): { [x: string]: IStyle } | undefined => {\n  let selectors;\n\n  // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = {\n        ...smallPanelSelectors,\n      };\n      break;\n    case PanelType.medium:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n      };\n      break;\n    case PanelType.large:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n      };\n      break;\n    case PanelType.largeFixed:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...largeFixedPanelSelectors,\n      };\n      break;\n    case PanelType.extraLarge:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...extraLargePanelSelectors,\n      };\n      break;\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nconst commandBarHeight = '44px';\n\nconst sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px',\n};\n\nexport const getStyles = (props: IPanelStyleProps): IPanelStyles => {\n  const {\n    className,\n    focusTrapZoneClassName,\n    hasCloseButton,\n    headerClassName,\n    isAnimating,\n    isFooterSticky,\n    isFooterAtBottom,\n    isOnRightSide,\n    isOpen,\n    isHiddenOnDismiss,\n    hasCustomNavigation,\n    theme,\n    type = PanelType.smallFixedFar,\n  } = props;\n  const { effects, fonts, semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  const isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isOpen && classNames.isOpen,\n      hasCloseButton && classNames.hasCloseButton,\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      },\n      isCustomPanel && isOnRightSide && classNames.custom,\n      isCustomPanel && !isOnRightSide && classNames.customNear,\n      className,\n    ],\n    overlay: [\n      {\n        pointerEvents: 'auto',\n        cursor: 'pointer',\n      },\n      isOpen && isAnimating && AnimationClassNames.fadeIn100,\n      !isOpen && isAnimating && AnimationClassNames.fadeOut100,\n    ],\n    hiddenPanel: [\n      !isOpen &&\n        !isAnimating &&\n        isHiddenOnDismiss && {\n          visibility: 'hidden',\n        },\n    ],\n    main: [\n      classNames.main,\n      {\n        backgroundColor: semanticColors.bodyBackground,\n        boxShadow: effects.elevation64,\n        pointerEvents: 'auto',\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        bottom: 0,\n        top: 0,\n        // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n        left: panelMargin.auto,\n        right: panelMargin.none,\n        width: panelWidth.full,\n        selectors: {\n          [HighContrastSelector]: {\n            borderLeft: `3px solid ${semanticColors.variantBorder}`,\n            borderRight: `3px solid ${semanticColors.variantBorder}`,\n          },\n          ...getPanelBreakpoints(type),\n        },\n      },\n      type === PanelType.smallFluid && {\n        left: panelMargin.none,\n      },\n      type === PanelType.smallFixedNear && {\n        left: panelMargin.none,\n        right: panelMargin.auto,\n        width: panelWidth.xs,\n      },\n      type === PanelType.customNear && {\n        right: 'auto',\n        left: 0,\n      },\n      isCustomPanel && {\n        maxWidth: '100vw',\n      },\n      isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\n      isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\n      !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\n      !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\n      focusTrapZoneClassName,\n    ],\n    commands: [\n      classNames.commands,\n      {\n        marginTop: 18,\n      },\n      hasCustomNavigation && {\n        marginTop: 'inherit',\n      },\n    ],\n    navigation: [\n      classNames.navigation,\n      {\n        display: 'flex',\n        justifyContent: 'flex-end',\n      },\n      hasCustomNavigation && {\n        height: commandBarHeight,\n      },\n    ],\n    contentInner: [\n      classNames.contentInner,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        overflowY: 'hidden',\n      },\n    ],\n    header: [\n      classNames.header,\n      sharedPaddingStyles,\n      {\n        alignSelf: 'flex-start',\n      },\n      hasCloseButton &&\n        !hasCustomNavigation && {\n          flexGrow: 1,\n        },\n      hasCustomNavigation && {\n        // Ensure that title doesn't shrink if screen is too small\n        flexShrink: 0,\n      },\n    ],\n    headerText: [\n      classNames.headerText,\n      fonts.xLarge,\n      {\n        color: semanticColors.bodyText,\n        lineHeight: '27px',\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        wordBreak: 'break-word',\n        hyphens: 'auto',\n      },\n      headerClassName,\n    ],\n    scrollableContent: [\n      classNames.scrollableContent,\n      {\n        overflowY: 'auto',\n      },\n      isFooterAtBottom && {\n        flexGrow: 1,\n      },\n    ],\n    content: [\n      classNames.content,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 20,\n      },\n    ],\n    footer: [\n      classNames.footer,\n      {\n        // Ensure that footer doesn't shrink if screen is too small\n        flexShrink: 0,\n        borderTop: '1px solid transparent',\n        transition: `opacity ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction2}`,\n      },\n      isFooterSticky && {\n        background: semanticColors.bodyBackground,\n        borderTopColor: semanticColors.variantBorder,\n      },\n    ],\n    footerInner: [\n      classNames.footerInner,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 16,\n        paddingTop: 16,\n      },\n    ],\n    subComponentStyles: {\n      closeButton: {\n        root: [\n          classNames.closeButton,\n          {\n            marginRight: 14,\n            color: theme.palette.neutralSecondary,\n            fontSize: IconFontSizes.large,\n          },\n          hasCustomNavigation && {\n            marginRight: 0,\n            height: 'auto',\n            width: '44px',\n          },\n        ],\n        rootHovered: {\n          color: theme.palette.neutralPrimary,\n        },\n      },\n    },\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}