{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\n\nvar renderItemIcon = function (props) {\n  var item = props.item,\n      hasIcons = props.hasIcons,\n      classNames = props.classNames;\n  var iconProps = item.iconProps;\n\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props);\n  }\n\n  return React.createElement(Icon, __assign({}, iconProps, {\n    className: classNames.icon\n  }));\n};\n\nvar renderCheckMarkIcon = function (_a) {\n  var onCheckmarkClick = _a.onCheckmarkClick,\n      item = _a.item,\n      classNames = _a.classNames;\n  var isItemChecked = getIsChecked(item);\n\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    var onClick = function (e) {\n      return onCheckmarkClick(item, e);\n    };\n\n    return React.createElement(Icon, {\n      iconName: item.canCheck !== false && isItemChecked ? 'CheckMark' : '',\n      className: classNames.checkmarkIcon,\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: onClick\n    });\n  }\n\n  return null;\n};\n\nvar renderItemName = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n  /* eslint-disable deprecation/deprecation */\n\n  if (item.text || item.name) {\n    return React.createElement(\"span\", {\n      className: classNames.label\n    }, item.text || item.name);\n  }\n  /* eslint-enable deprecation/deprecation */\n\n\n  return null;\n};\n\nvar renderSecondaryText = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n\n  if (item.secondaryText) {\n    return React.createElement(\"span\", {\n      className: classNames.secondaryText\n    }, item.secondaryText);\n  }\n\n  return null;\n};\n\nvar renderSubMenuIcon = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames,\n      theme = _a.theme;\n\n  if (hasSubmenu(item)) {\n    return React.createElement(Icon, __assign({\n      iconName: getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'\n    }, item.submenuIconProps, {\n      className: classNames.subMenuIcon\n    }));\n  }\n\n  return null;\n};\n\nvar ContextualMenuItemBase =\n/** @class */\nfunction (_super) {\n  __extends(ContextualMenuItemBase, _super);\n\n  function ContextualMenuItemBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.openSubMenu = function () {\n      var _a = _this.props,\n          item = _a.item,\n          openSubMenu = _a.openSubMenu,\n          getSubmenuTarget = _a.getSubmenuTarget;\n\n      if (getSubmenuTarget) {\n        var submenuTarget = getSubmenuTarget();\n\n        if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n          openSubMenu(item, submenuTarget);\n        }\n      }\n    };\n\n    _this.dismissSubMenu = function () {\n      var _a = _this.props,\n          item = _a.item,\n          dismissSubMenu = _a.dismissSubMenu;\n\n      if (hasSubmenu(item) && dismissSubMenu) {\n        dismissSubMenu();\n      }\n    };\n\n    _this.dismissMenu = function (dismissAll) {\n      var dismissMenu = _this.props.dismissMenu;\n\n      if (dismissMenu) {\n        dismissMenu(undefined\n        /* ev */\n        , dismissAll);\n      }\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  ContextualMenuItemBase.prototype.render = function () {\n    var _a = this.props,\n        item = _a.item,\n        classNames = _a.classNames;\n    var renderContent = item.onRenderContent || this._renderLayout;\n    return React.createElement(\"div\", {\n      className: item.split ? classNames.linkContentMenu : classNames.linkContent\n    }, renderContent(this.props, {\n      renderCheckMarkIcon: renderCheckMarkIcon,\n      renderItemIcon: renderItemIcon,\n      renderItemName: renderItemName,\n      renderSecondaryText: renderSecondaryText,\n      renderSubMenuIcon: renderSubMenuIcon\n    }));\n  };\n\n  ContextualMenuItemBase.prototype._renderLayout = function (props, defaultRenders) {\n    return React.createElement(React.Fragment, null, defaultRenders.renderCheckMarkIcon(props), defaultRenders.renderItemIcon(props), defaultRenders.renderItemName(props), defaultRenders.renderSecondaryText(props), defaultRenders.renderSubMenuIcon(props));\n  };\n\n  return ContextualMenuItemBase;\n}(React.Component);\n\nexport { ContextualMenuItemBase };","map":{"version":3,"sources":["components/ContextualMenu/ContextualMenuItem.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { IContextualMenuItemProps, IContextualMenuItemRenderFunctions } from './ContextualMenuItem.types';\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons, classNames } = props;\n\n  const { iconProps } = item;\n\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props);\n  }\n\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return (\n      <Icon\n        iconName={item.canCheck !== false && isItemChecked ? 'CheckMark' : ''}\n        className={classNames.checkmarkIcon}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n      />\n    );\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  /* eslint-disable deprecation/deprecation */\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  /* eslint-enable deprecation/deprecation */\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames, theme }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return (\n      <Icon\n        iconName={getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'}\n        {...item.submenuIconProps}\n        className={classNames.subMenuIcon}\n      />\n    );\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends React.Component<IContextualMenuItemProps, {}> {\n  constructor(props: IContextualMenuItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render() {\n    const { item, classNames } = this.props;\n    const renderContent = item.onRenderContent || this._renderLayout;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderContent(this.props, {\n          renderCheckMarkIcon,\n          renderItemIcon,\n          renderItemName,\n          renderSecondaryText,\n          renderSubMenuIcon,\n        })}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n\n  private _renderLayout(props: IContextualMenuItemProps, defaultRenders: IContextualMenuItemRenderFunctions) {\n    return (\n      <>\n        {defaultRenders.renderCheckMarkIcon(props)}\n        {defaultRenders.renderItemIcon(props)}\n        {defaultRenders.renderItemName(props)}\n        {defaultRenders.renderSecondaryText(props)}\n        {defaultRenders.renderSubMenuIcon(props)}\n      </>\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}