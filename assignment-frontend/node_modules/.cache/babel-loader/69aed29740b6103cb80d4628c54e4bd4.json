{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '../../Utilities';\nimport { notifyHostChanged } from './Layer.notification';\n\nvar LayerHost =\n/** @class */\nfunction (_super) {\n  __extends(LayerHost, _super);\n\n  function LayerHost() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LayerHost.prototype.shouldComponentUpdate = function () {\n    return false;\n  };\n\n  LayerHost.prototype.componentDidMount = function () {\n    notifyHostChanged(this.props.id);\n  };\n\n  LayerHost.prototype.componentWillUnmount = function () {\n    notifyHostChanged(this.props.id);\n  };\n\n  LayerHost.prototype.render = function () {\n    return React.createElement(\"div\", __assign({}, this.props, {\n      className: css('ms-LayerHost', this.props.className)\n    }));\n  };\n\n  return LayerHost;\n}(React.Component);\n\nexport { LayerHost };","map":{"version":3,"sources":["components/Layer/LayerHost.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,iBAApB;AAEA,SAAS,iBAAT,QAAkC,sBAAlC;;AAEA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAA/B,WAAA,SAAA,GAAA;;AAgBC;;AAfQ,EAAA,SAAA,CAAA,SAAA,CAAA,qBAAA,GAAP,YAAA;AACE,WAAO,KAAP;AACD,GAFM;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;AACE,IAAA,iBAAiB,CAAC,KAAK,KAAL,CAAW,EAAZ,CAAjB;AACD,GAFM;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,oBAAA,GAAP,YAAA;AACE,IAAA,iBAAiB,CAAC,KAAK,KAAL,CAAW,EAAZ,CAAjB;AACD,GAFM;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAS,KAAK,KAAd,EAAmB;AAAE,MAAA,SAAS,EAAE,GAAG,CAAC,cAAD,EAAiB,KAAK,KAAL,CAAW,SAA5B;AAAhB,KAAnB,CAAA,CAAP;AACD,GAFM;;AAGT,SAAA,SAAA;AAAC,CAhBD,CAA+B,KAAK,CAAC,SAArC,CAAA","sourcesContent":["import * as React from 'react';\nimport { css } from '../../Utilities';\nimport { ILayerHostProps } from './LayerHost.types';\nimport { notifyHostChanged } from './Layer.notification';\n\nexport class LayerHost extends React.Component<ILayerHostProps> {\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentDidMount(): void {\n    notifyHostChanged(this.props.id!);\n  }\n\n  public componentWillUnmount(): void {\n    notifyHostChanged(this.props.id!);\n  }\n\n  public render(): JSX.Element {\n    return <div {...this.props} className={css('ms-LayerHost', this.props.className)} />;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}