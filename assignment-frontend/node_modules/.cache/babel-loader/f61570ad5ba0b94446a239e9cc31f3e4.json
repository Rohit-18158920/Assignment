{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked'\n};\nvar labelWrapperLineHeight = 15;\nvar labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\n\nvar iconSize = 32;\nvar choiceFieldSize = 20;\nvar choiceFieldTransitionDuration = '200ms';\nvar choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nvar radioButtonSpacing = 3;\nvar radioButtonInnerSize = 5;\n\nfunction getChoiceGroupFocusStyle(focusBorderColor, hasIconOrImage) {\n  var _a, _b;\n\n  return ['is-inFocus', {\n    selectors: (_a = {}, _a[\".\" + IsFocusVisibleClassName + \" &\"] = {\n      position: 'relative',\n      outline: 'transparent',\n      selectors: {\n        '::-moz-focus-inner': {\n          border: 0\n        },\n        ':after': {\n          content: '\"\"',\n          top: -2,\n          right: -2,\n          bottom: -2,\n          left: -2,\n          pointerEvents: 'none',\n          border: \"1px solid \" + focusBorderColor,\n          position: 'absolute',\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            borderColor: 'WindowText',\n            borderWidth: hasIconOrImage ? 1 : 2\n          }, _b)\n        }\n      }\n    }, _a)\n  }];\n}\n\nfunction getImageWrapperStyle(isSelectedImageWrapper, className, checked) {\n  return [className, {\n    paddingBottom: 2,\n    transitionProperty: 'opacity',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: 'ease',\n    selectors: {\n      '.ms-Image': {\n        display: 'inline-block',\n        borderStyle: 'none'\n      }\n    }\n  }, (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && ['is-hidden', {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    opacity: 0\n  }]];\n}\n\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e;\n\n  var theme = props.theme,\n      hasIcon = props.hasIcon,\n      hasImage = props.hasImage,\n      checked = props.checked,\n      disabled = props.disabled,\n      imageIsLarge = props.imageIsLarge,\n      focused = props.focused,\n      imageSize = props.imageSize;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme); // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n\n  var circleBorderColor = palette.neutralPrimary;\n  var circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  var circleCheckedBorderColor = semanticColors.inputBackgroundChecked; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n\n  var circleCheckedHoveredBorderColor = palette.themeDark;\n  var circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  var circleBackgroundColor = semanticColors.bodyBackground;\n  var dotUncheckedHoveredColor = palette.neutralSecondary;\n  var dotCheckedColor = semanticColors.inputBackgroundChecked; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n\n  var dotCheckedHoveredColor = palette.themeDark;\n  var dotDisabledColor = semanticColors.disabledBodySubtext; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n\n  var labelHoverFocusColor = palette.neutralDark;\n  var focusBorderColor = semanticColors.focusBorder;\n  var iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n\n  var iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  var iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  var iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n  var fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor\n      },\n      ':after': [!hasIcon && !hasImage && !checked && {\n        content: '\"\"',\n        transitionProperty: 'background-color',\n        left: 5,\n        top: 5,\n        width: 10,\n        height: 10,\n        backgroundColor: dotUncheckedHoveredColor\n      }, checked && {\n        borderColor: dotCheckedHoveredColor\n      }]\n    }\n  };\n  var enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor\n      }\n    }\n  };\n  var circleAreaProperties = [{\n    content: '\"\"',\n    display: 'inline-block',\n    backgroundColor: circleBackgroundColor,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: circleBorderColor,\n    width: choiceFieldSize,\n    height: choiceFieldSize,\n    fontWeight: 'normal',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    boxSizing: 'border-box',\n    transitionProperty: 'border-color',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: choiceFieldTransitionTiming,\n    borderRadius: '50%'\n  }, disabled && {\n    borderColor: circleDisabledBorderColor,\n    selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n      borderColor: 'GrayText',\n      background: 'Window'\n    }, getHighContrastNoAdjustStyle()), _a)\n  }, checked && {\n    borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n    selectors: (_b = {}, _b[HighContrastSelector] = {\n      borderColor: 'Highlight',\n      background: 'Window',\n      forcedColorAdjust: 'none'\n    }, _b)\n  }, (hasIcon || hasImage) && {\n    top: radioButtonSpacing,\n    right: radioButtonSpacing,\n    left: 'auto',\n    opacity: checked ? 1 : 0\n  }];\n  var dotAreaProperties = [{\n    content: '\"\"',\n    width: 0,\n    height: 0,\n    borderRadius: '50%',\n    position: 'absolute',\n    left: choiceFieldSize / 2,\n    right: 0,\n    transitionProperty: 'border-width',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: choiceFieldTransitionTiming,\n    boxSizing: 'border-box'\n  }, checked && {\n    borderWidth: 5,\n    borderStyle: 'solid',\n    borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n    left: 5,\n    top: 5,\n    width: 10,\n    height: 10,\n    selectors: (_c = {}, _c[HighContrastSelector] = {\n      borderColor: 'Highlight',\n      forcedColorAdjust: 'none'\n    }, _c)\n  }, checked && (hasIcon || hasImage) && {\n    top: radioButtonSpacing + radioButtonInnerSize,\n    right: radioButtonSpacing + radioButtonInnerSize,\n    left: 'auto'\n  }];\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      display: 'flex',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      color: semanticColors.bodyText,\n      minHeight: 26,\n      border: 'none',\n      position: 'relative',\n      marginTop: 8,\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          display: 'inline-block'\n        }\n      }\n    }, !hasIcon && !hasImage && {\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          paddingLeft: '26px'\n        }\n      }\n    }, hasImage && 'ms-ChoiceField--image', hasIcon && 'ms-ChoiceField--icon', (hasIcon || hasImage) && {\n      display: 'inline-flex',\n      fontSize: 0,\n      margin: '0 4px 4px 0',\n      paddingLeft: 0,\n      backgroundColor: iconOrImageChoiceBackgroundColor,\n      height: '100%'\n    }],\n    choiceFieldWrapper: [classNames.choiceFieldWrapper, focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage)],\n    // The hidden input\n    input: [classNames.input, {\n      position: 'absolute',\n      opacity: 0,\n      top: 0,\n      right: 0,\n      width: '100%',\n      height: '100%',\n      margin: 0\n    }, disabled && 'is-disabled'],\n    field: [classNames.field, checked && classNames.checked, {\n      display: 'inline-block',\n      cursor: 'pointer',\n      marginTop: 0,\n      position: 'relative',\n      verticalAlign: 'top',\n      userSelect: 'none',\n      minHeight: 20,\n      selectors: {\n        ':hover': !disabled && fieldHoverOrFocusProperties,\n        ':focus': !disabled && fieldHoverOrFocusProperties,\n        // The circle\n        ':before': circleAreaProperties,\n        // The dot\n        ':after': dotAreaProperties\n      }\n    }, hasIcon && 'ms-ChoiceField--icon', hasImage && 'ms-ChoiceField-field--image', (hasIcon || hasImage) && {\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      paddingTop: 22,\n      margin: 0,\n      textAlign: 'center',\n      transitionProperty: 'all',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      border: '1px solid transparent',\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column'\n    }, checked && {\n      borderColor: iconOrImageChoiceBorderCheckedColor\n    }, (hasIcon || hasImage) && !disabled && {\n      selectors: {\n        ':hover': enabledFieldWithImageHoverOrFocusProperties,\n        ':focus': enabledFieldWithImageHoverOrFocusProperties\n      }\n    }, disabled && {\n      cursor: 'default',\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          color: semanticColors.disabledBodyText,\n          selectors: (_d = {}, _d[HighContrastSelector] = __assign({\n            color: 'GrayText'\n          }, getHighContrastNoAdjustStyle()), _d)\n        }\n      }\n    }, checked && disabled && {\n      borderColor: iconOrImageChoiceBackgroundColor\n    }],\n    innerField: [classNames.innerField, hasImage && {\n      // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n      height: imageSize.height,\n      width: imageSize.width\n    }, (hasIcon || hasImage) && {\n      position: 'relative',\n      display: 'inline-block',\n      paddingLeft: 30,\n      paddingRight: 30\n    }, (hasIcon || hasImage) && imageIsLarge && {\n      paddingLeft: 24,\n      paddingRight: 24\n    }, (hasIcon || hasImage) && disabled && {\n      opacity: 0.25,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        color: 'GrayText',\n        opacity: 1\n      }, _e)\n    }],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [classNames.iconWrapper, {\n      fontSize: iconSize,\n      lineHeight: iconSize,\n      height: iconSize\n    }],\n    labelWrapper: [classNames.labelWrapper, fonts.medium, (hasIcon || hasImage) && {\n      display: 'block',\n      position: 'relative',\n      margin: '4px 8px 2px 8px',\n      height: labelWrapperHeight,\n      lineHeight: labelWrapperLineHeight,\n      // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n      maxWidth: imageSize.width * 2,\n      overflow: 'hidden',\n      whiteSpace: 'pre-wrap'\n    }]\n  };\n};","map":{"version":3,"sources":["components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { HighContrastSelector, IStyle, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nimport { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles } from './ChoiceGroupOption.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked',\n};\n\nconst labelWrapperLineHeight = 15;\nconst labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\nconst iconSize = 32;\nconst choiceFieldSize = 20;\nconst choiceFieldTransitionDuration = '200ms';\nconst choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nconst radioButtonSpacing = 3;\nconst radioButtonInnerSize = 5;\n\nfunction getChoiceGroupFocusStyle(focusBorderColor: string, hasIconOrImage?: boolean): IStyle {\n  return [\n    'is-inFocus',\n    {\n      selectors: {\n        [`.${IsFocusVisibleClassName} &`]: {\n          position: 'relative',\n          outline: 'transparent',\n          selectors: {\n            '::-moz-focus-inner': {\n              border: 0,\n            },\n            ':after': {\n              content: '\"\"',\n              top: -2,\n              right: -2,\n              bottom: -2,\n              left: -2,\n              pointerEvents: 'none',\n              border: `1px solid ${focusBorderColor}`,\n              position: 'absolute',\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'WindowText',\n                  borderWidth: hasIconOrImage ? 1 : 2,\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  ];\n}\n\nfunction getImageWrapperStyle(isSelectedImageWrapper: boolean, className?: string, checked?: boolean): IStyle {\n  return [\n    className,\n    {\n      paddingBottom: 2,\n      transitionProperty: 'opacity',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      selectors: {\n        '.ms-Image': {\n          display: 'inline-block',\n          borderStyle: 'none',\n        },\n      },\n    },\n    (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && [\n      'is-hidden',\n      {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        opacity: 0,\n      },\n    ],\n  ];\n}\n\nexport const getStyles = (props: IChoiceGroupOptionStyleProps): IChoiceGroupOptionStyles => {\n  const { theme, hasIcon, hasImage, checked, disabled, imageIsLarge, focused, imageSize } = props;\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n  const circleBorderColor = palette.neutralPrimary;\n  const circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  const circleCheckedBorderColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const circleCheckedHoveredBorderColor = palette.themeDark;\n  const circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  const circleBackgroundColor = semanticColors.bodyBackground;\n  const dotUncheckedHoveredColor = palette.neutralSecondary;\n  const dotCheckedColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const dotCheckedHoveredColor = palette.themeDark;\n  const dotDisabledColor = semanticColors.disabledBodySubtext;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n  const labelHoverFocusColor = palette.neutralDark;\n  const focusBorderColor = semanticColors.focusBorder;\n  const iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  const iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  const iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n\n  const fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor,\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n      ':after': [\n        !hasIcon &&\n          !hasImage &&\n          !checked && {\n            content: '\"\"',\n            transitionProperty: 'background-color',\n            left: 5,\n            top: 5,\n            width: 10,\n            height: 10,\n            backgroundColor: dotUncheckedHoveredColor,\n          },\n        checked && {\n          borderColor: dotCheckedHoveredColor,\n        },\n      ],\n    },\n  };\n\n  const enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n    },\n  };\n\n  const circleAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      display: 'inline-block',\n      backgroundColor: circleBackgroundColor,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: circleBorderColor,\n      width: choiceFieldSize,\n      height: choiceFieldSize,\n      fontWeight: 'normal',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      boxSizing: 'border-box',\n      transitionProperty: 'border-color',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      borderRadius: '50%',\n    },\n    disabled && {\n      borderColor: circleDisabledBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'GrayText',\n          background: 'Window',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n    checked && {\n      borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          background: 'Window',\n          forcedColorAdjust: 'none',\n        },\n      },\n    },\n    (hasIcon || hasImage) && {\n      top: radioButtonSpacing,\n      right: radioButtonSpacing,\n      left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      opacity: checked ? 1 : 0,\n    },\n  ];\n\n  const dotAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      width: 0,\n      height: 0,\n      borderRadius: '50%',\n      position: 'absolute',\n      left: choiceFieldSize / 2,\n      right: 0,\n      transitionProperty: 'border-width',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      boxSizing: 'border-box',\n    },\n    checked && {\n      borderWidth: 5,\n      borderStyle: 'solid',\n      borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n      left: 5,\n      top: 5,\n      width: 10,\n      height: 10,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          forcedColorAdjust: 'none',\n        },\n      },\n    },\n    checked &&\n      (hasIcon || hasImage) && {\n        top: radioButtonSpacing + radioButtonInnerSize,\n        right: radioButtonSpacing + radioButtonInnerSize,\n        left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        display: 'flex',\n        alignItems: 'center',\n        boxSizing: 'border-box',\n        color: semanticColors.bodyText,\n        minHeight: 26,\n        border: 'none',\n        position: 'relative',\n        marginTop: 8,\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            display: 'inline-block',\n          },\n        },\n      },\n      !hasIcon &&\n        !hasImage && {\n          selectors: {\n            '.ms-ChoiceFieldLabel': {\n              paddingLeft: '26px',\n            },\n          },\n        },\n      hasImage && 'ms-ChoiceField--image',\n      hasIcon && 'ms-ChoiceField--icon',\n      (hasIcon || hasImage) && {\n        display: 'inline-flex',\n        fontSize: 0,\n        margin: '0 4px 4px 0',\n        paddingLeft: 0,\n        backgroundColor: iconOrImageChoiceBackgroundColor,\n        height: '100%',\n      },\n    ],\n    choiceFieldWrapper: [\n      classNames.choiceFieldWrapper,\n      focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage),\n    ],\n    // The hidden input\n    input: [\n      classNames.input,\n      {\n        position: 'absolute',\n        opacity: 0,\n        top: 0,\n        right: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n      },\n      disabled && 'is-disabled',\n    ],\n    field: [\n      classNames.field,\n      checked && classNames.checked,\n      {\n        display: 'inline-block',\n        cursor: 'pointer',\n        marginTop: 0,\n        position: 'relative',\n        verticalAlign: 'top',\n        userSelect: 'none',\n        minHeight: 20,\n        selectors: {\n          ':hover': !disabled && fieldHoverOrFocusProperties,\n          ':focus': !disabled && fieldHoverOrFocusProperties,\n\n          // The circle\n          ':before': circleAreaProperties,\n\n          // The dot\n          ':after': dotAreaProperties,\n        },\n      },\n      hasIcon && 'ms-ChoiceField--icon',\n      hasImage && 'ms-ChoiceField-field--image',\n      (hasIcon || hasImage) && {\n        boxSizing: 'content-box',\n        cursor: 'pointer',\n        paddingTop: 22,\n        margin: 0,\n        textAlign: 'center',\n        transitionProperty: 'all',\n        transitionDuration: choiceFieldTransitionDuration,\n        transitionTimingFunction: 'ease',\n        border: '1px solid transparent',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      checked && {\n        borderColor: iconOrImageChoiceBorderCheckedColor,\n      },\n      (hasIcon || hasImage) &&\n        !disabled && {\n          selectors: {\n            ':hover': enabledFieldWithImageHoverOrFocusProperties,\n            ':focus': enabledFieldWithImageHoverOrFocusProperties,\n          },\n        },\n      disabled && {\n        cursor: 'default',\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            color: semanticColors.disabledBodyText,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n                ...getHighContrastNoAdjustStyle(),\n              },\n            },\n          },\n        },\n      },\n      checked &&\n        disabled && {\n          borderColor: iconOrImageChoiceBackgroundColor,\n        },\n    ],\n    innerField: [\n      classNames.innerField,\n      hasImage && {\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        height: imageSize!.height,\n        width: imageSize!.width,\n      },\n      (hasIcon || hasImage) && {\n        position: 'relative',\n        display: 'inline-block',\n        paddingLeft: 30,\n        paddingRight: 30,\n      },\n      (hasIcon || hasImage) &&\n        imageIsLarge && {\n          paddingLeft: 24,\n          paddingRight: 24,\n        },\n      (hasIcon || hasImage) &&\n        disabled && {\n          opacity: 0.25,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'GrayText',\n              opacity: 1,\n            },\n          },\n        },\n    ],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [\n      classNames.iconWrapper,\n      {\n        fontSize: iconSize,\n        lineHeight: iconSize,\n        height: iconSize,\n      },\n    ],\n    labelWrapper: [\n      classNames.labelWrapper,\n      fonts.medium,\n      (hasIcon || hasImage) && {\n        display: 'block',\n        position: 'relative',\n        margin: '4px 8px 2px 8px',\n        height: labelWrapperHeight,\n        lineHeight: labelWrapperLineHeight,\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        maxWidth: imageSize!.width * 2,\n        overflow: 'hidden',\n        whiteSpace: 'pre-wrap',\n      },\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}