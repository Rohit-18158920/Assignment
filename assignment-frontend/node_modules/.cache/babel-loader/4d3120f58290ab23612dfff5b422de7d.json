{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getFocusStyle, getGlobalClassNames, hiddenContentStyle, FontWeights } from '../../Styling';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { getCellStyles } from './DetailsHeader.styles';\nvar GlobalClassNames = {\n  isActionable: 'is-actionable',\n  cellIsCheck: 'ms-DetailsHeader-cellIsCheck',\n  collapseButton: 'ms-DetailsHeader-collapseButton',\n  isCollapsed: 'is-collapsed',\n  isAllSelected: 'is-allSelected',\n  isSelectAllHidden: 'is-selectAllHidden',\n  isResizingColumn: 'is-resizingColumn',\n  isEmpty: 'is-empty',\n  isIconVisible: 'is-icon-visible',\n  cellSizer: 'ms-DetailsHeader-cellSizer',\n  isResizing: 'is-resizing',\n  dropHintCircleStyle: 'ms-DetailsHeader-dropHintCircleStyle',\n  dropHintLineStyle: 'ms-DetailsHeader-dropHintLineStyle',\n  cellTitle: 'ms-DetailsHeader-cellTitle',\n  cellName: 'ms-DetailsHeader-cellName',\n  filterChevron: 'ms-DetailsHeader-filterChevron',\n  gripperBarVerticalStyle: 'ms-DetailsColumn-gripperBar',\n  nearIcon: 'ms-DetailsColumn-nearIcon'\n};\nexport var getStyles = function (props) {\n  var _a;\n\n  var theme = props.theme,\n      headerClassName = props.headerClassName,\n      iconClassName = props.iconClassName,\n      isActionable = props.isActionable,\n      isEmpty = props.isEmpty,\n      isIconVisible = props.isIconVisible,\n      isPadded = props.isPadded,\n      isIconOnly = props.isIconOnly,\n      _b = props.cellStyleProps,\n      cellStyleProps = _b === void 0 ? DEFAULT_CELL_STYLE_PROPS : _b,\n      transitionDurationDrag = props.transitionDurationDrag,\n      transitionDurationDrop = props.transitionDurationDrop;\n  var semanticColors = theme.semanticColors,\n      palette = theme.palette,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var colors = {\n    iconForegroundColor: semanticColors.bodySubtext,\n    headerForegroundColor: semanticColors.bodyText,\n    headerBackgroundColor: semanticColors.bodyBackground,\n    dropdownChevronForegroundColor: palette.neutralSecondary,\n    resizerColor: palette.neutralTertiaryAlt\n  };\n  var nearIconStyle = {\n    color: colors.iconForegroundColor,\n    opacity: 1,\n    paddingLeft: 8\n  };\n  var borderWhileDragging = {\n    outline: \"1px solid \" + palette.themePrimary\n  };\n  var borderAfterDragOrDrop = {\n    outlineColor: 'transparent'\n  };\n  return {\n    root: [getCellStyles(props), fonts.small, isActionable && [classNames.isActionable, {\n      selectors: {\n        ':hover': {\n          color: semanticColors.bodyText,\n          background: semanticColors.listHeaderBackgroundHovered\n        },\n        ':active': {\n          background: semanticColors.listHeaderBackgroundPressed\n        }\n      }\n    }], isEmpty && [classNames.isEmpty, {\n      textOverflow: 'clip'\n    }], isIconVisible && classNames.isIconVisible, isPadded && {\n      paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding\n    }, {\n      selectors: {\n        ':hover i[data-icon-name=\"GripperBarVertical\"]': {\n          display: 'block'\n        }\n      }\n    }, headerClassName],\n    gripperBarVerticalStyle: {\n      display: 'none',\n      position: 'absolute',\n      textAlign: 'left',\n      color: palette.neutralTertiary,\n      left: 1\n    },\n    nearIcon: [classNames.nearIcon, nearIconStyle],\n    sortIcon: [nearIconStyle, {\n      paddingLeft: 4,\n      position: 'relative',\n      top: 1\n    }],\n    iconClassName: [{\n      color: colors.iconForegroundColor,\n      opacity: 1\n    }, iconClassName],\n    filterChevron: [classNames.filterChevron, {\n      color: colors.dropdownChevronForegroundColor,\n      paddingLeft: 6,\n      verticalAlign: 'middle',\n      fontSize: fonts.small.fontSize\n    }],\n    cellTitle: [classNames.cellTitle, getFocusStyle(theme), __assign({\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      boxSizing: 'border-box',\n      overflow: 'hidden',\n      padding: \"0 \" + cellStyleProps.cellRightPadding + \"px 0 \" + cellStyleProps.cellLeftPadding + \"px\"\n    }, isIconOnly ? {\n      alignContent: 'flex-end',\n      maxHeight: '100%',\n      flexWrap: 'wrap-reverse'\n    } : {})],\n    cellName: [classNames.cellName, {\n      flex: '0 1 auto',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      fontWeight: FontWeights.semibold,\n      fontSize: fonts.medium.fontSize\n    }, isIconOnly && {\n      selectors: (_a = {}, _a[\".\" + classNames.nearIcon] = {\n        paddingLeft: 0\n      }, _a)\n    }],\n    cellTooltip: {\n      display: 'block',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    },\n    accessibleLabel: hiddenContentStyle,\n    borderWhileDragging: borderWhileDragging,\n    noBorderWhileDragging: [borderAfterDragOrDrop, {\n      transition: \"outline \" + transitionDurationDrag + \"ms ease\"\n    }],\n    borderAfterDropping: borderWhileDragging,\n    noBorderAfterDropping: [borderAfterDragOrDrop, {\n      transition: \"outline  \" + transitionDurationDrop + \"ms ease\"\n    }]\n  };\n};","map":{"version":3,"sources":["components/DetailsList/DetailsColumn.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IDetailsColumnStyleProps, IDetailsColumnStyles } from './DetailsColumn.types';\nimport { getFocusStyle, getGlobalClassNames, hiddenContentStyle, IStyle, FontWeights } from '../../Styling';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { getCellStyles } from './DetailsHeader.styles';\n\nconst GlobalClassNames = {\n  isActionable: 'is-actionable',\n  cellIsCheck: 'ms-DetailsHeader-cellIsCheck',\n  collapseButton: 'ms-DetailsHeader-collapseButton',\n  isCollapsed: 'is-collapsed',\n  isAllSelected: 'is-allSelected',\n  isSelectAllHidden: 'is-selectAllHidden',\n  isResizingColumn: 'is-resizingColumn',\n  isEmpty: 'is-empty',\n  isIconVisible: 'is-icon-visible',\n  cellSizer: 'ms-DetailsHeader-cellSizer',\n  isResizing: 'is-resizing',\n  dropHintCircleStyle: 'ms-DetailsHeader-dropHintCircleStyle',\n  dropHintLineStyle: 'ms-DetailsHeader-dropHintLineStyle',\n  cellTitle: 'ms-DetailsHeader-cellTitle',\n  cellName: 'ms-DetailsHeader-cellName',\n  filterChevron: 'ms-DetailsHeader-filterChevron',\n  gripperBarVerticalStyle: 'ms-DetailsColumn-gripperBar',\n  nearIcon: 'ms-DetailsColumn-nearIcon',\n};\n\nexport const getStyles = (props: IDetailsColumnStyleProps): IDetailsColumnStyles => {\n  const {\n    theme,\n    headerClassName,\n    iconClassName,\n    isActionable,\n    isEmpty,\n    isIconVisible,\n    isPadded,\n    isIconOnly,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    transitionDurationDrag,\n    transitionDurationDrop,\n  } = props;\n\n  const { semanticColors, palette, fonts } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const colors = {\n    iconForegroundColor: semanticColors.bodySubtext,\n    headerForegroundColor: semanticColors.bodyText,\n    headerBackgroundColor: semanticColors.bodyBackground,\n    dropdownChevronForegroundColor: palette.neutralSecondary,\n    resizerColor: palette.neutralTertiaryAlt,\n  };\n\n  const nearIconStyle: IStyle = {\n    color: colors.iconForegroundColor,\n    opacity: 1,\n    paddingLeft: 8,\n  };\n\n  const borderWhileDragging: IStyle = {\n    outline: `1px solid ${palette.themePrimary}`,\n  };\n\n  const borderAfterDragOrDrop: IStyle = {\n    outlineColor: 'transparent',\n  };\n\n  return {\n    root: [\n      getCellStyles(props),\n      fonts.small,\n      isActionable && [\n        classNames.isActionable,\n        {\n          selectors: {\n            ':hover': {\n              color: semanticColors.bodyText,\n              background: semanticColors.listHeaderBackgroundHovered,\n            },\n            ':active': {\n              background: semanticColors.listHeaderBackgroundPressed,\n            },\n          },\n        },\n      ],\n      isEmpty && [\n        classNames.isEmpty,\n        {\n          textOverflow: 'clip',\n        },\n      ],\n      isIconVisible && classNames.isIconVisible,\n      isPadded && {\n        paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding,\n      },\n      {\n        selectors: {\n          ':hover i[data-icon-name=\"GripperBarVertical\"]': {\n            display: 'block',\n          },\n        },\n      },\n      headerClassName,\n    ],\n\n    gripperBarVerticalStyle: {\n      display: 'none',\n      position: 'absolute',\n      textAlign: 'left',\n      color: palette.neutralTertiary,\n      left: 1,\n    },\n\n    nearIcon: [classNames.nearIcon, nearIconStyle],\n\n    sortIcon: [\n      nearIconStyle,\n      {\n        paddingLeft: 4,\n        position: 'relative',\n        top: 1,\n      },\n    ],\n\n    iconClassName: [\n      {\n        color: colors.iconForegroundColor,\n        opacity: 1,\n      },\n      iconClassName,\n    ],\n\n    filterChevron: [\n      classNames.filterChevron,\n      {\n        color: colors.dropdownChevronForegroundColor,\n        paddingLeft: 6,\n        verticalAlign: 'middle',\n        fontSize: fonts.small.fontSize,\n      },\n    ],\n\n    cellTitle: [\n      classNames.cellTitle,\n      getFocusStyle(theme),\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'stretch',\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        padding: `0 ${cellStyleProps.cellRightPadding}px 0 ${cellStyleProps.cellLeftPadding}px`,\n        ...(isIconOnly\n          ? {\n              alignContent: 'flex-end',\n              maxHeight: '100%',\n              flexWrap: 'wrap-reverse',\n            }\n          : {}),\n      },\n    ],\n\n    cellName: [\n      classNames.cellName,\n      {\n        flex: '0 1 auto',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontWeight: FontWeights.semibold,\n        fontSize: fonts.medium.fontSize,\n      },\n      isIconOnly && {\n        selectors: {\n          [`.${classNames.nearIcon}`]: {\n            paddingLeft: 0,\n          },\n        },\n      },\n    ],\n\n    cellTooltip: {\n      display: 'block',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n    },\n\n    accessibleLabel: hiddenContentStyle,\n\n    borderWhileDragging: borderWhileDragging,\n\n    noBorderWhileDragging: [borderAfterDragOrDrop, { transition: `outline ${transitionDurationDrag}ms ease` }],\n\n    borderAfterDropping: borderWhileDragging,\n\n    noBorderAfterDropping: [borderAfterDragOrDrop, { transition: `outline  ${transitionDurationDrop}ms ease` }],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}