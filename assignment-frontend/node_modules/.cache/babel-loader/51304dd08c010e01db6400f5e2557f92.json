{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { IconButton } from '../../Button';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory DocumentCard}\n */\n\nvar DocumentCardActionsBase =\n/** @class */\nfunction (_super) {\n  __extends(DocumentCardActionsBase, _super);\n\n  function DocumentCardActionsBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  DocumentCardActionsBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        actions = _a.actions,\n        views = _a.views,\n        styles = _a.styles,\n        theme = _a.theme,\n        className = _a.className;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className\n    });\n    return React.createElement(\"div\", {\n      className: this._classNames.root\n    }, actions && actions.map(function (action, index) {\n      return React.createElement(\"div\", {\n        className: _this._classNames.action,\n        key: index\n      }, React.createElement(IconButton, __assign({}, action)));\n    }), views > 0 && React.createElement(\"div\", {\n      className: this._classNames.views\n    }, React.createElement(Icon, {\n      iconName: \"View\",\n      className: this._classNames.viewsIcon\n    }), views));\n  };\n\n  return DocumentCardActionsBase;\n}(React.Component);\n\nexport { DocumentCardActionsBase };","map":{"version":3,"sources":["components/DocumentCard/DocumentCardActions.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,kBAAT,EAA6B,sBAA7B,QAA2D,iBAA3D;AACA,SAAS,IAAT,QAAqB,YAArB;AAMA,SAAS,UAAT,QAA2B,cAA3B;AAGA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;AAEA;;AAEG;;AACH,IAAA,uBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,SAAA,CAAA,uBAAA,EAAA,MAAA,CAAA;;AAG3C,WAAA,uBAAA,CAAY,KAAZ,EAA4C;AAA5C,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;AAGE,IAAA,sBAAsB,CAAC,KAAD,CAAtB;;AACD;;AAEM,EAAA,uBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,OAAA,GAAA,EAAA,CAAA,OAAF;AAAA,QAAW,KAAA,GAAA,EAAA,CAAA,KAAX;AAAA,QAAkB,MAAA,GAAA,EAAA,CAAA,MAAlB;AAAA,QAA0B,KAAA,GAAA,EAAA,CAAA,KAA1B;AAAA,QAAiC,SAAA,GAAA,EAAA,CAAA,SAAjC;AAEN,SAAK,WAAL,GAAmB,aAAa,CAAC,MAAD,EAAU;AACxC,MAAA,KAAK,EAAE,KADiC;AAExC,MAAA,SAAS,EAAA;AAF+B,KAAV,CAAhC;AAKA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,KAAK,WAAL,CAAiB;AAAjC,KAAA,EACG,OAAO,IACN,OAAO,CAAC,GAAR,CAAY,UAAC,MAAD,EAAS,KAAT,EAAc;AACxB,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,KAAI,CAAC,WAAL,CAAiB,MAAjC;AAAyC,QAAA,GAAG,EAAE;AAA9C,OAAA,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,QAAA,CAAA,EAAA,EAAK,MAAL,CAAX,CADF,CADF;AAKD,KAND,CAFJ,EAUG,KAAM,GAAG,CAAT,IACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,KAAK,WAAL,CAAiB;AAAjC,KAAA,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,MAAA,QAAQ,EAAC,MAAV;AAAiB,MAAA,SAAS,EAAE,KAAK,WAAL,CAAiB;AAA7C,KAAL,CADF,EAEG,KAFH,CAXJ,CADF;AAmBD,GA3BM;;AA4BT,SAAA,uBAAA;AAAC,CArCD,CAA6C,KAAK,CAAC,SAAnD,CAAA","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport {\n  IDocumentCardActionsProps,\n  IDocumentCardActionsStyleProps,\n  IDocumentCardActionsStyles,\n} from './DocumentCardActions.types';\nimport { IconButton } from '../../Button';\nimport { IProcessedStyleSet } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDocumentCardActionsStyleProps, IDocumentCardActionsStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardActionsBase extends React.Component<IDocumentCardActionsProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardActionsStyles>;\n\n  constructor(props: IDocumentCardActionsProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { actions, views, styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    return (\n      <div className={this._classNames.root}>\n        {actions &&\n          actions.map((action, index) => {\n            return (\n              <div className={this._classNames.action} key={index}>\n                <IconButton {...action} />\n              </div>\n            );\n          })}\n\n        {views! > 0 && (\n          <div className={this._classNames.views}>\n            <Icon iconName=\"View\" className={this._classNames.viewsIcon} />\n            {views}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}