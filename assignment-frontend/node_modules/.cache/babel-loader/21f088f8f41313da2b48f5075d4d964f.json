{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { memoizeFunction } from '../../Utilities';\nvar COMMAND_BAR_HEIGHT = 44;\nexport var getStyles = function (props) {\n  var className = props.className,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors;\n  return {\n    root: [theme.fonts.medium, 'ms-CommandBar', {\n      display: 'flex',\n      backgroundColor: semanticColors.bodyBackground,\n      padding: '0 14px 0 24px',\n      height: COMMAND_BAR_HEIGHT\n    }, className],\n    primarySet: ['ms-CommandBar-primaryCommand', {\n      flexGrow: '1',\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    secondarySet: ['ms-CommandBar-secondaryCommand', {\n      flexShrink: '0',\n      display: 'flex',\n      alignItems: 'stretch'\n    }]\n  };\n};\nexport var getCommandButtonStyles = memoizeFunction(function (customStyles) {\n  var rootStyles = {\n    height: '100%'\n  };\n  var labelStyles = {\n    whiteSpace: 'nowrap'\n  };\n\n  var _a = customStyles || {},\n      root = _a.root,\n      label = _a.label,\n      restCustomStyles = __rest(_a, [\"root\", \"label\"]);\n\n  return __assign(__assign({}, restCustomStyles), {\n    root: root ? [rootStyles, root] : rootStyles,\n    label: label ? [labelStyles, label] : labelStyles\n  });\n});","map":{"version":3,"sources":["components/CommandBar/CommandBar.styles.ts"],"names":[],"mappings":";AAEA,SAAS,eAAT,QAAgC,iBAAhC;AAGA,IAAM,kBAAkB,GAAG,EAA3B;AAEA,OAAO,IAAM,SAAS,GAAG,UAAC,KAAD,EAA6B;AAC5C,MAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AAAA,MAAW,KAAA,GAAA,KAAA,CAAA,KAAX;AACA,MAAA,cAAA,GAAA,KAAA,CAAA,cAAA;AAER,SAAO;AACL,IAAA,IAAI,EAAE,CACJ,KAAK,CAAC,KAAN,CAAY,MADR,EAEJ,eAFI,EAGJ;AACE,MAAA,OAAO,EAAE,MADX;AAEE,MAAA,eAAe,EAAE,cAAc,CAAC,cAFlC;AAGE,MAAA,OAAO,EAAE,eAHX;AAIE,MAAA,MAAM,EAAE;AAJV,KAHI,EASJ,SATI,CADD;AAYL,IAAA,UAAU,EAAE,CACV,8BADU,EAEV;AACE,MAAA,QAAQ,EAAE,GADZ;AAEE,MAAA,OAAO,EAAE,MAFX;AAGE,MAAA,UAAU,EAAE;AAHd,KAFU,CAZP;AAoBL,IAAA,YAAY,EAAE,CACZ,gCADY,EAEZ;AACE,MAAA,UAAU,EAAE,GADd;AAEE,MAAA,OAAO,EAAE,MAFX;AAGE,MAAA,UAAU,EAAE;AAHd,KAFY;AApBT,GAAP;AA6BD,CAjCM;AAmCP,OAAO,IAAM,sBAAsB,GAAG,eAAe,CACnD,UAAC,YAAD,EAAwC;AACtC,MAAM,UAAU,GAAW;AACzB,IAAA,MAAM,EAAE;AADiB,GAA3B;AAGA,MAAM,WAAW,GAAW;AAC1B,IAAA,UAAU,EAAE;AADc,GAA5B;;AAIA,MAAM,EAAA,GAAA,YAAA,IAAA,EAAN;AAAA,MAAQ,IAAA,GAAA,EAAA,CAAA,IAAR;AAAA,MAAc,KAAA,GAAA,EAAA,CAAA,KAAd;AAAA,MAAqB,gBAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CAAA,CAArB;;AAEA,SAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,gBADL,CAAA,EACqB;AACnB,IAAA,IAAI,EAAE,IAAI,GAAG,CAAC,UAAD,EAAa,IAAb,CAAH,GAAwB,UADf;AAEnB,IAAA,KAAK,EAAE,KAAK,GAAG,CAAC,WAAD,EAAc,KAAd,CAAH,GAA0B;AAFnB,GADrB,CAAA;AAKD,CAhBkD,CAA9C","sourcesContent":["import { ICommandBarStyleProps, ICommandBarStyles } from './CommandBar.types';\nimport { IButtonStyles } from '../Button/Button.types';\nimport { memoizeFunction } from '../../Utilities';\nimport { IStyle } from '../../Styling';\n\nconst COMMAND_BAR_HEIGHT = 44;\n\nexport const getStyles = (props: ICommandBarStyleProps): ICommandBarStyles => {\n  const { className, theme } = props;\n  const { semanticColors } = theme;\n\n  return {\n    root: [\n      theme.fonts.medium,\n      'ms-CommandBar',\n      {\n        display: 'flex',\n        backgroundColor: semanticColors.bodyBackground,\n        padding: '0 14px 0 24px',\n        height: COMMAND_BAR_HEIGHT,\n      },\n      className,\n    ],\n    primarySet: [\n      'ms-CommandBar-primaryCommand',\n      {\n        flexGrow: '1',\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n    secondarySet: [\n      'ms-CommandBar-secondaryCommand',\n      {\n        flexShrink: '0',\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n  };\n};\n\nexport const getCommandButtonStyles = memoizeFunction(\n  (customStyles: IButtonStyles | undefined): IButtonStyles => {\n    const rootStyles: IStyle = {\n      height: '100%',\n    };\n    const labelStyles: IStyle = {\n      whiteSpace: 'nowrap',\n    };\n\n    const { root, label, ...restCustomStyles } = customStyles || {};\n\n    return {\n      ...restCustomStyles,\n      root: root ? [rootStyles, root] : rootStyles,\n      label: label ? [labelStyles, label] : labelStyles,\n    };\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}