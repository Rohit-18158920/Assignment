{"ast":null,"code":"import { MAX_COLOR_ALPHA } from './consts';\nimport { rgb2hsv } from './rgb2hsv';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n/** Converts an RGBA color to a color object (alpha defaults to 100). */\n\nexport function getColorFromRGBA(rgba) {\n  var _a = rgba.a,\n      a = _a === void 0 ? MAX_COLOR_ALPHA : _a,\n      b = rgba.b,\n      g = rgba.g,\n      r = rgba.r;\n\n  var _b = rgb2hsv(r, g, b),\n      h = _b.h,\n      s = _b.s,\n      v = _b.v;\n\n  var hex = rgb2hex(r, g, b);\n\n  var str = _rgbaOrHexString(r, g, b, a, hex);\n\n  var t = MAX_COLOR_ALPHA - a;\n  return {\n    a: a,\n    b: b,\n    g: g,\n    h: h,\n    hex: hex,\n    r: r,\n    s: s,\n    str: str,\n    v: v,\n    t: t\n  };\n}","map":{"version":3,"sources":["utilities/color/getColorFromRGBA.ts"],"names":[],"mappings":"AACA,SAAS,eAAT,QAAgC,UAAhC;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAEA;;AACA,OAAM,SAAU,gBAAV,CAA2B,IAA3B,EAAqC;AACjC,MAAA,EAAA,GAAA,IAAA,CAAA,CAAA;AAAA,MAAA,CAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,eAAA,GAAA,EAAA;AAAA,MAAqB,CAAA,GAAA,IAAA,CAAA,CAArB;AAAA,MAAwB,CAAA,GAAA,IAAA,CAAA,CAAxB;AAAA,MAA2B,CAAA,GAAA,IAAA,CAAA,CAA3B;;AACF,MAAA,EAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AAAA,MAAE,CAAA,GAAA,EAAA,CAAA,CAAF;AAAA,MAAK,CAAA,GAAA,EAAA,CAAA,CAAL;AAAA,MAAQ,CAAA,GAAA,EAAA,CAAA,CAAR;;AACN,MAAM,GAAG,GAAG,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnB;;AACA,MAAM,GAAG,GAAG,gBAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,GAAb,CAA5B;;AACA,MAAM,CAAC,GAAG,eAAe,GAAG,CAA5B;AAEA,SAAO;AAAE,IAAA,CAAC,EAAA,CAAH;AAAK,IAAA,CAAC,EAAA,CAAN;AAAQ,IAAA,CAAC,EAAA,CAAT;AAAW,IAAA,CAAC,EAAA,CAAZ;AAAc,IAAA,GAAG,EAAA,GAAjB;AAAmB,IAAA,CAAC,EAAA,CAApB;AAAsB,IAAA,CAAC,EAAA,CAAvB;AAAyB,IAAA,GAAG,EAAA,GAA5B;AAA8B,IAAA,CAAC,EAAA,CAA/B;AAAiC,IAAA,CAAC,EAAA;AAAlC,GAAP;AACD","sourcesContent":["import { IRGB, IColor } from './interfaces';\nimport { MAX_COLOR_ALPHA } from './consts';\nimport { rgb2hsv } from './rgb2hsv';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n\n/** Converts an RGBA color to a color object (alpha defaults to 100). */\nexport function getColorFromRGBA(rgba: IRGB): IColor {\n  const { a = MAX_COLOR_ALPHA, b, g, r } = rgba;\n  const { h, s, v } = rgb2hsv(r, g, b);\n  const hex = rgb2hex(r, g, b);\n  const str = _rgbaOrHexString(r, g, b, a, hex);\n  const t = MAX_COLOR_ALPHA - a;\n\n  return { a, b, g, h, hex, r, s, str, v, t };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}