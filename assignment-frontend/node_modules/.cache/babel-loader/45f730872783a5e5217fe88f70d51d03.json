{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warnDeprecations, classNamesFunction, divProperties, memoizeFunction, getInitials, getNativeProps, getRTL } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\nvar getClassNames = classNamesFunction({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\nvar getInitialsStyles = memoizeFunction(function (className, initialsColor, initialsTextColor, text, primaryText, showUnknownPersonaCoin) {\n  return mergeStyles(className, !showUnknownPersonaCoin && {\n    backgroundColor: getPersonaInitialsColor({\n      text: text,\n      initialsColor: initialsColor,\n      primaryText: primaryText\n    }),\n    color: initialsTextColor\n  });\n});\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\n\nvar PersonaCoinBase =\n/** @class */\nfunction (_super) {\n  __extends(PersonaCoinBase, _super);\n\n  function PersonaCoinBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onRenderCoin = function (props) {\n      var _a = _this.props,\n          coinSize = _a.coinSize,\n          styles = _a.styles,\n          imageUrl = _a.imageUrl,\n          imageAlt = _a.imageAlt,\n          imageShouldFadeIn = _a.imageShouldFadeIn,\n          imageShouldStartVisible = _a.imageShouldStartVisible,\n          theme = _a.theme,\n          showUnknownPersonaCoin = _a.showUnknownPersonaCoin; // Render the Image component only if an image URL is provided\n\n      if (!imageUrl) {\n        return null;\n      }\n\n      var size = _this.props.size;\n      var classNames = getClassNames(styles, {\n        theme: theme,\n        size: size,\n        showUnknownPersonaCoin: showUnknownPersonaCoin\n      });\n      var dimension = coinSize || sizeToPixels[size];\n      return React.createElement(Image, {\n        className: classNames.image,\n        imageFit: ImageFit.cover,\n        src: imageUrl,\n        width: dimension,\n        height: dimension,\n        alt: imageAlt,\n        shouldFadeIn: imageShouldFadeIn,\n        shouldStartVisible: imageShouldStartVisible,\n        onLoadingStateChange: _this._onPhotoLoadingStateChange\n      });\n    };\n\n    _this._onRenderInitials = function (props) {\n      var imageInitials = props.imageInitials;\n      var allowPhoneInitials = props.allowPhoneInitials,\n          showUnknownPersonaCoin = props.showUnknownPersonaCoin;\n\n      if (showUnknownPersonaCoin) {\n        return React.createElement(Icon, {\n          iconName: \"Help\"\n        });\n      }\n\n      var isRTL = getRTL(_this.props.theme);\n      imageInitials = imageInitials || getInitials(_this._getText(), isRTL, allowPhoneInitials);\n      return imageInitials !== '' ? React.createElement(\"span\", null, imageInitials) : React.createElement(Icon, {\n        iconName: \"Contact\"\n      });\n    };\n\n    _this._onPhotoLoadingStateChange = function (loadState) {\n      _this.setState({\n        isImageLoaded: loadState === ImageLoadState.loaded,\n        isImageError: loadState === ImageLoadState.error\n      });\n\n      _this.props.onPhotoLoadingStateChange && _this.props.onPhotoLoadingStateChange(loadState);\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('PersonaCoin', props, {\n        primaryText: 'text'\n      });\n    }\n\n    _this.state = {\n      isImageLoaded: false,\n      isImageError: false\n    };\n    return _this;\n  }\n\n  PersonaCoinBase.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    if (nextProps.imageUrl !== this.props.imageUrl) {\n      this.setState({\n        isImageLoaded: false,\n        isImageError: false\n      });\n    }\n  };\n\n  PersonaCoinBase.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        coinProps = _a.coinProps,\n        showUnknownPersonaCoin = _a.showUnknownPersonaCoin,\n        coinSize = _a.coinSize,\n        styles = _a.styles,\n        imageUrl = _a.imageUrl,\n        initialsColor = _a.initialsColor,\n        initialsTextColor = _a.initialsTextColor,\n        isOutOfOffice = _a.isOutOfOffice,\n\n    /* eslint-disable deprecation/deprecation */\n    _b = _a.onRenderCoin,\n\n    /* eslint-disable deprecation/deprecation */\n    onRenderCoin = _b === void 0 ? this._onRenderCoin : _b,\n        _c = _a.onRenderPersonaCoin,\n        onRenderPersonaCoin = _c === void 0 ? onRenderCoin : _c,\n\n    /* eslint-enable deprecation/deprecation */\n    _d = _a.onRenderInitials,\n\n    /* eslint-enable deprecation/deprecation */\n    onRenderInitials = _d === void 0 ? this._onRenderInitials : _d,\n        presence = _a.presence,\n        presenceTitle = _a.presenceTitle,\n        presenceColors = _a.presenceColors,\n        // eslint-disable-next-line deprecation/deprecation\n    primaryText = _a.primaryText,\n        showInitialsUntilImageLoads = _a.showInitialsUntilImageLoads,\n        text = _a.text,\n        theme = _a.theme;\n    var size = this.props.size;\n    var divProps = getNativeProps(this.props, divProperties);\n    var divCoinProps = getNativeProps(coinProps || {}, divProperties);\n    var coinSizeStyle = coinSize ? {\n      width: coinSize,\n      height: coinSize\n    } : undefined;\n    var hideImage = showUnknownPersonaCoin;\n    var personaPresenceProps = {\n      coinSize: coinSize,\n      isOutOfOffice: isOutOfOffice,\n      presence: presence,\n      presenceTitle: presenceTitle,\n      presenceColors: presenceColors,\n      size: size,\n      theme: theme\n    }; // Use getStyles from props, or fall back to getStyles from styles file.\n\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: coinProps && coinProps.className ? coinProps.className : className,\n      size: size,\n      coinSize: coinSize,\n      showUnknownPersonaCoin: showUnknownPersonaCoin\n    });\n    var shouldRenderInitials = Boolean(!this.state.isImageLoaded && (showInitialsUntilImageLoads && imageUrl || !imageUrl || this.state.isImageError || hideImage));\n    return React.createElement(\"div\", __assign({\n      role: \"presentation\"\n    }, divProps, {\n      className: classNames.coin\n    }), // eslint-disable-next-line deprecation/deprecation\n    size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? React.createElement(\"div\", __assign({\n      role: \"presentation\"\n    }, divCoinProps, {\n      className: classNames.imageArea,\n      style: coinSizeStyle\n    }), shouldRenderInitials && React.createElement(\"div\", {\n      className: getInitialsStyles(classNames.initials, initialsColor, initialsTextColor, text, primaryText, showUnknownPersonaCoin),\n      style: coinSizeStyle,\n      \"aria-hidden\": \"true\"\n    }, onRenderInitials(this.props, this._onRenderInitials)), !hideImage && onRenderPersonaCoin(this.props, this._onRenderCoin), React.createElement(PersonaPresence, __assign({}, personaPresenceProps))) : // Otherwise, render just PersonaPresence.\n    this.props.presence ? React.createElement(PersonaPresence, __assign({}, personaPresenceProps)) : // Just render Contact Icon if there isn't a Presence prop.\n    React.createElement(Icon, {\n      iconName: \"Contact\",\n      className: classNames.size10WithoutPresenceIcon\n    }), this.props.children);\n  };\n  /**\n   * Deprecation helper for getting text.\n   */\n\n\n  PersonaCoinBase.prototype._getText = function () {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.props.text || this.props.primaryText || '';\n  };\n\n  PersonaCoinBase.defaultProps = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: ''\n  };\n  return PersonaCoinBase;\n}(React.Component);\n\nexport { PersonaCoinBase };","map":{"version":3,"sources":["components/Persona/PersonaCoin/PersonaCoin.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  warnDeprecations,\n  classNamesFunction,\n  divProperties,\n  memoizeFunction,\n  getInitials,\n  getNativeProps,\n  getRTL,\n} from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport {\n  IPersonaCoinProps,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles,\n  IPersonaPresenceProps,\n  PersonaInitialsColor,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\n\nconst getClassNames = classNamesFunction<IPersonaCoinStyleProps, IPersonaCoinStyles>({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nconst getInitialsStyles = memoizeFunction(\n  (\n    className: string,\n    initialsColor: PersonaInitialsColor | string | undefined,\n    initialsTextColor: string | undefined,\n    text: string | undefined,\n    primaryText: string | undefined,\n    showUnknownPersonaCoin: boolean | undefined,\n  ) =>\n    mergeStyles(\n      className,\n      !showUnknownPersonaCoin && {\n        backgroundColor: getPersonaInitialsColor({ text, initialsColor, primaryText }),\n        color: initialsTextColor,\n      },\n    ),\n);\n\nexport interface IPersonaState {\n  isImageLoaded?: boolean;\n  isImageError?: boolean;\n}\n\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport class PersonaCoinBase extends React.Component<IPersonaCoinProps, IPersonaState> {\n  public static defaultProps: IPersonaCoinProps = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: '',\n  };\n\n  constructor(props: IPersonaCoinProps) {\n    super(props);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('PersonaCoin', props, { primaryText: 'text' });\n    }\n\n    this.state = {\n      isImageLoaded: false,\n      isImageError: false,\n    };\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IPersonaCoinProps): void {\n    if (nextProps.imageUrl !== this.props.imageUrl) {\n      this.setState({\n        isImageLoaded: false,\n        isImageError: false,\n      });\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      className,\n      coinProps,\n      showUnknownPersonaCoin,\n      coinSize,\n      styles,\n      imageUrl,\n      initialsColor,\n      initialsTextColor,\n      isOutOfOffice,\n      /* eslint-disable deprecation/deprecation */\n      onRenderCoin = this._onRenderCoin,\n      onRenderPersonaCoin = onRenderCoin,\n      /* eslint-enable deprecation/deprecation */\n      onRenderInitials = this._onRenderInitials,\n      presence,\n      presenceTitle,\n      presenceColors,\n      // eslint-disable-next-line deprecation/deprecation\n      primaryText,\n      showInitialsUntilImageLoads,\n      text,\n      theme,\n    } = this.props;\n\n    const size = this.props.size as PersonaSize;\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n    const divCoinProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(coinProps || {}, divProperties);\n    const coinSizeStyle = coinSize ? { width: coinSize, height: coinSize } : undefined;\n    const hideImage = showUnknownPersonaCoin;\n\n    const personaPresenceProps: IPersonaPresenceProps = {\n      coinSize,\n      isOutOfOffice,\n      presence,\n      presenceTitle,\n      presenceColors,\n      size,\n      theme,\n    };\n\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className: coinProps && coinProps.className ? coinProps.className : className,\n      size,\n      coinSize,\n      showUnknownPersonaCoin,\n    });\n\n    const shouldRenderInitials = Boolean(\n      !this.state.isImageLoaded &&\n        ((showInitialsUntilImageLoads && imageUrl) || !imageUrl || this.state.isImageError || hideImage),\n    );\n\n    return (\n      <div role=\"presentation\" {...divProps} className={classNames.coin}>\n        {// Render PersonaCoin if size is not size8. size10 and tiny need to removed after a deprecation cleanup.\n        // eslint-disable-next-line deprecation/deprecation\n        size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? (\n          <div role=\"presentation\" {...divCoinProps} className={classNames.imageArea} style={coinSizeStyle}>\n            {shouldRenderInitials && (\n              <div\n                className={getInitialsStyles(\n                  classNames.initials,\n                  initialsColor,\n                  initialsTextColor,\n                  text,\n                  primaryText,\n                  showUnknownPersonaCoin,\n                )}\n                style={coinSizeStyle}\n                aria-hidden=\"true\"\n              >\n                {onRenderInitials(this.props, this._onRenderInitials)}\n              </div>\n            )}\n            {!hideImage && onRenderPersonaCoin(this.props, this._onRenderCoin)}\n            <PersonaPresence {...personaPresenceProps} />\n          </div>\n        ) : // Otherwise, render just PersonaPresence.\n        this.props.presence ? (\n          <PersonaPresence {...personaPresenceProps} />\n        ) : (\n          // Just render Contact Icon if there isn't a Presence prop.\n          <Icon iconName=\"Contact\" className={classNames.size10WithoutPresenceIcon} />\n        )}\n        {this.props.children}\n      </div>\n    );\n  }\n\n  private _onRenderCoin = (props: IPersonaCoinProps): JSX.Element | null => {\n    const {\n      coinSize,\n      styles,\n      imageUrl,\n      imageAlt,\n      imageShouldFadeIn,\n      imageShouldStartVisible,\n      theme,\n      showUnknownPersonaCoin,\n    } = this.props;\n\n    // Render the Image component only if an image URL is provided\n    if (!imageUrl) {\n      return null;\n    }\n\n    const size = this.props.size as PersonaSize;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      size,\n      showUnknownPersonaCoin,\n    });\n\n    const dimension = coinSize || sizeToPixels[size];\n\n    return (\n      <Image\n        className={classNames.image}\n        imageFit={ImageFit.cover}\n        src={imageUrl}\n        width={dimension}\n        height={dimension}\n        alt={imageAlt}\n        shouldFadeIn={imageShouldFadeIn}\n        shouldStartVisible={imageShouldStartVisible}\n        onLoadingStateChange={this._onPhotoLoadingStateChange}\n      />\n    );\n  };\n\n  /**\n   * Deprecation helper for getting text.\n   */\n  private _getText(): string {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.props.text || this.props.primaryText || '';\n  }\n\n  private _onRenderInitials = (props: IPersonaCoinProps): JSX.Element => {\n    let { imageInitials } = props;\n    const { allowPhoneInitials, showUnknownPersonaCoin } = props;\n\n    if (showUnknownPersonaCoin) {\n      return <Icon iconName=\"Help\" />;\n    }\n\n    const isRTL = getRTL(this.props.theme);\n\n    imageInitials = imageInitials || getInitials(this._getText(), isRTL, allowPhoneInitials);\n\n    return imageInitials !== '' ? <span>{imageInitials}</span> : <Icon iconName=\"Contact\" />;\n  };\n\n  private _onPhotoLoadingStateChange = (loadState: ImageLoadState) => {\n    this.setState({\n      isImageLoaded: loadState === ImageLoadState.loaded,\n      isImageError: loadState === ImageLoadState.error,\n    });\n\n    this.props.onPhotoLoadingStateChange && this.props.onPhotoLoadingStateChange(loadState);\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}