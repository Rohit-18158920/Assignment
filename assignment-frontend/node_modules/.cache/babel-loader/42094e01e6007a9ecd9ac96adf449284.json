{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warnDeprecations, initializeComponentRef, classNamesFunction, css, format, getId, divProperties, getNativeProps } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { RatingSize } from './Rating.types';\nvar getClassNames = classNamesFunction();\n\nvar RatingStar = function (props) {\n  var icon = props.icon || 'FavoriteStarFill';\n  return React.createElement(\"div\", {\n    className: props.classNames.ratingStar,\n    key: props.id\n  }, React.createElement(Icon, {\n    className: props.classNames.ratingStarBack,\n    iconName: icon\n  }), !props.disabled && React.createElement(Icon, {\n    className: props.classNames.ratingStarFront,\n    iconName: icon,\n    style: {\n      width: props.fillPercentage + '%'\n    }\n  }));\n};\n\nvar RatingBase =\n/** @class */\nfunction (_super) {\n  __extends(RatingBase, _super);\n\n  function RatingBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    initializeComponentRef(_this);\n    warnDeprecations('Rating', props, {\n      onChanged: 'onChange'\n    });\n    _this._id = getId('Rating');\n    _this._min = _this.props.allowZeroStars ? 0 : 1;\n    /* eslint-disable deprecation/deprecation */\n\n    if (_this.props.min !== undefined && _this.props.min !== 1) {\n      _this._min = _this.props.min;\n    }\n    /* eslint-enable deprecation/deprecation */\n\n\n    _this._labelId = getId('RatingLabel');\n    _this.state = {\n      rating: _this._getInitialValue(props)\n    };\n    return _this;\n  }\n\n  RatingBase.prototype.render = function () {\n    var _a, _b, _c;\n\n    var _d = this.props,\n        disabled = _d.disabled,\n        getAriaLabel = _d.getAriaLabel,\n        styles = _d.styles,\n        max = _d.max,\n        readOnly = _d.readOnly,\n        size = _d.size,\n        theme = _d.theme,\n        _e = _d.icon,\n        icon = _e === void 0 ? 'FavoriteStarFill' : _e,\n        _f = _d.unselectedIcon,\n        unselectedIcon = _f === void 0 ? 'FavoriteStar' : _f,\n        onRenderStar = _d.onRenderStar;\n    var id = this._id;\n    var stars = [];\n    var starIds = [];\n\n    var rating = this._getRating();\n\n    var divProps = getNativeProps(this.props, divProperties);\n    this._classNames = getClassNames(styles, {\n      disabled: disabled,\n      readOnly: readOnly,\n      theme: theme\n    });\n\n    var renderStar = function (starProps, renderer) {\n      return renderer ? renderer(starProps) : React.createElement(RatingStar, __assign({\n        key: starProps.starNum + 'rating'\n      }, starProps));\n    };\n\n    for (var i = this._min; i <= max; i++) {\n      if (i !== 0) {\n        var fillPercentage = this._getFillingPercentage(i);\n\n        var ratingStarProps = {\n          fillPercentage: fillPercentage,\n          disabled: disabled,\n          classNames: this._classNames,\n          icon: fillPercentage > 0 ? icon : unselectedIcon,\n          starNum: i\n        };\n        starIds.push(this._getStarId(i - 1));\n        stars.push(React.createElement(\"button\", __assign({\n          className: css(this._classNames.ratingButton, (_a = {}, _a[this._classNames.ratingStarIsLarge] = size === RatingSize.Large, _a[this._classNames.ratingStarIsSmall] = size !== RatingSize.Large, _a)),\n          id: starIds[i - 1],\n          key: i\n        }, i === Math.ceil(rating) ? {\n          'data-is-current': true\n        } : {}, {\n          onFocus: this._onFocus.bind(this, i),\n          onClick: this._onFocus.bind(this, i),\n          disabled: disabled || readOnly ? true : false,\n          role: \"presentation\",\n          type: \"button\"\n        }), this._getLabel(i), renderStar(ratingStarProps, onRenderStar)));\n      }\n    }\n\n    var ariaLabel = getAriaLabel ? getAriaLabel(rating ? rating : 0, max) : undefined; // When in read-only mode, we allow focus (per ARIA standards) and set up ARIA attributes to indicate element\n    // is read-only. https://www.w3.org/TR/wai-aria-1.1/#aria-readonly\n\n    var readOnlyProps = readOnly ? {\n      allowFocusRoot: true,\n      disabled: true,\n      'aria-label': ariaLabel,\n      'aria-readonly': true,\n      'data-is-focusable': true,\n      tabIndex: 0\n    } : undefined;\n    return React.createElement(\"div\", __assign({\n      className: css('ms-Rating-star', this._classNames.root, (_b = {}, _b[this._classNames.rootIsLarge] = size === RatingSize.Large, _b[this._classNames.rootIsSmall] = size !== RatingSize.Large, _b)),\n      \"aria-label\": !readOnly ? ariaLabel : '',\n      id: id\n    }, divProps), React.createElement(FocusZone, __assign({\n      direction: FocusZoneDirection.horizontal,\n      className: css(this._classNames.ratingFocusZone, (_c = {}, _c[this._classNames.rootIsLarge] = size === RatingSize.Large, _c[this._classNames.rootIsSmall] = size !== RatingSize.Large, _c)),\n      defaultActiveElement: rating ? starIds[Math.ceil(rating) - 1] && '#' + starIds[Math.ceil(rating) - 1] : undefined\n    }, readOnlyProps), stars));\n  };\n\n  RatingBase.prototype._getStarId = function (index) {\n    return this._id + '-star-' + index;\n  };\n\n  RatingBase.prototype._onFocus = function (value, ev) {\n    if (Math.ceil(this.state.rating) !== value) {\n      this.setState({\n        rating: value\n      }); // eslint-disable-next-line deprecation/deprecation\n\n      var _a = this.props,\n          onChange = _a.onChange,\n          onChanged = _a.onChanged;\n\n      if (onChange) {\n        onChange(ev, value);\n      }\n\n      if (onChanged) {\n        onChanged(value);\n      }\n    }\n  };\n\n  RatingBase.prototype._getLabel = function (rating) {\n    var text = this.props.ariaLabelFormat || '';\n    return React.createElement(\"span\", {\n      id: this._labelId + \"-\" + rating,\n      className: this._classNames.labelText\n    }, format(text, rating, this.props.max));\n  };\n\n  RatingBase.prototype._getInitialValue = function (props) {\n    if (typeof props.rating === 'undefined') {\n      return this._min;\n    }\n\n    if (props.rating === null) {\n      return undefined;\n    }\n\n    return this._getClampedRating(props.rating);\n  };\n\n  RatingBase.prototype._getClampedRating = function (rating) {\n    return Math.min(Math.max(rating, this._min), this.props.max);\n  };\n\n  RatingBase.prototype._getRating = function () {\n    if (this.props.rating !== undefined) {\n      return this._getClampedRating(this.props.rating);\n    }\n\n    if (this.state.rating !== undefined && this.state.rating !== null) {\n      return this._getClampedRating(this.state.rating);\n    }\n\n    return 0;\n  };\n\n  RatingBase.prototype._getFillingPercentage = function (starPosition) {\n    var rating = this._getRating();\n\n    var ceilValue = Math.ceil(rating);\n    var fillPercentage = 100;\n\n    if (starPosition === rating) {\n      fillPercentage = 100;\n    } else if (starPosition === ceilValue) {\n      fillPercentage = 100 * (rating % 1);\n    } else if (starPosition > ceilValue) {\n      fillPercentage = 0;\n    }\n\n    return fillPercentage;\n  };\n\n  RatingBase.defaultProps = {\n    min: 1,\n    max: 5\n  };\n  return RatingBase;\n}(React.Component);\n\nexport { RatingBase };","map":{"version":3,"sources":["components/Rating/Rating.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  warnDeprecations,\n  initializeComponentRef,\n  classNamesFunction,\n  css,\n  format,\n  getId,\n  divProperties,\n  getNativeProps,\n} from '../../Utilities';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection, IFocusZoneProps } from '../../FocusZone';\nimport { IRatingProps, RatingSize, IRatingStyleProps, IRatingStyles, IRatingStarProps } from './Rating.types';\n\nconst getClassNames = classNamesFunction<IRatingStyleProps, IRatingStyles>();\n\nexport interface IRatingState {\n  rating: number | null | undefined;\n}\n\nconst RatingStar = (props: IRatingStarProps) => {\n  const icon = props.icon || 'FavoriteStarFill';\n  return (\n    <div className={props.classNames.ratingStar} key={props.id}>\n      <Icon className={props.classNames.ratingStarBack} iconName={icon} />\n      {!props.disabled && (\n        <Icon\n          className={props.classNames.ratingStarFront}\n          iconName={icon}\n          style={{ width: props.fillPercentage + '%' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport class RatingBase extends React.Component<IRatingProps, IRatingState> {\n  public static defaultProps: IRatingProps = {\n    min: 1,\n    max: 5,\n  };\n  private _id: string;\n  private _min: number;\n  private _labelId: string;\n  private _classNames: IProcessedStyleSet<IRatingStyles>;\n\n  constructor(props: IRatingProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    warnDeprecations('Rating', props, { onChanged: 'onChange' });\n\n    this._id = getId('Rating');\n    this._min = this.props.allowZeroStars ? 0 : 1;\n    /* eslint-disable deprecation/deprecation */\n    if (this.props.min !== undefined && this.props.min !== 1) {\n      this._min = this.props.min;\n    }\n    /* eslint-enable deprecation/deprecation */\n    this._labelId = getId('RatingLabel');\n\n    this.state = {\n      rating: this._getInitialValue(props),\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      disabled,\n      getAriaLabel,\n      styles,\n      max,\n      readOnly,\n      size,\n      theme,\n      icon = 'FavoriteStarFill',\n      unselectedIcon = 'FavoriteStar',\n      onRenderStar,\n    } = this.props;\n\n    const id = this._id;\n    const stars = [];\n    const starIds = [];\n    const rating = this._getRating();\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    this._classNames = getClassNames(styles!, {\n      disabled,\n      readOnly,\n      theme: theme!,\n    });\n\n    const renderStar = (starProps: IRatingStarProps, renderer?: IRatingProps['onRenderStar']) =>\n      renderer ? renderer(starProps) : <RatingStar key={starProps.starNum + 'rating'} {...starProps} />;\n\n    for (let i = this._min as number; i <= (max as number); i++) {\n      if (i !== 0) {\n        const fillPercentage = this._getFillingPercentage(i);\n        const ratingStarProps: IRatingStarProps = {\n          fillPercentage,\n          disabled,\n          classNames: this._classNames,\n          icon: fillPercentage > 0 ? icon : unselectedIcon,\n          starNum: i,\n        };\n\n        starIds.push(this._getStarId(i - 1));\n\n        stars.push(\n          <button\n            className={css(this._classNames.ratingButton, {\n              [this._classNames.ratingStarIsLarge]: size === RatingSize.Large,\n              [this._classNames.ratingStarIsSmall]: size !== RatingSize.Large,\n            })}\n            id={starIds[i - 1]}\n            key={i}\n            {...(i === Math.ceil(rating) ? { 'data-is-current': true } : {})}\n            onFocus={this._onFocus.bind(this, i)}\n            onClick={this._onFocus.bind(this, i)} // For Safari & Firefox on OSX\n            disabled={disabled || readOnly ? true : false}\n            role=\"presentation\"\n            type=\"button\"\n          >\n            {this._getLabel(i)}\n            {renderStar(ratingStarProps, onRenderStar)}\n          </button>,\n        );\n      }\n    }\n\n    const ariaLabel = getAriaLabel ? getAriaLabel(rating ? rating : 0, max as number) : undefined;\n\n    // When in read-only mode, we allow focus (per ARIA standards) and set up ARIA attributes to indicate element\n    // is read-only. https://www.w3.org/TR/wai-aria-1.1/#aria-readonly\n    const readOnlyProps: IFocusZoneProps | undefined = readOnly\n      ? ({\n          allowFocusRoot: true,\n          disabled: true,\n          'aria-label': ariaLabel,\n          'aria-readonly': true,\n          'data-is-focusable': true,\n          tabIndex: 0,\n        } as IFocusZoneProps)\n      : undefined;\n\n    return (\n      <div\n        className={css('ms-Rating-star', this._classNames.root, {\n          [this._classNames.rootIsLarge]: size === RatingSize.Large,\n          [this._classNames.rootIsSmall]: size !== RatingSize.Large,\n        })}\n        aria-label={!readOnly ? ariaLabel : ''}\n        id={id}\n        {...divProps}\n      >\n        <FocusZone\n          direction={FocusZoneDirection.horizontal}\n          className={css(this._classNames.ratingFocusZone, {\n            [this._classNames.rootIsLarge]: size === RatingSize.Large,\n            [this._classNames.rootIsSmall]: size !== RatingSize.Large,\n          })}\n          defaultActiveElement={\n            rating ? starIds[Math.ceil(rating) - 1] && '#' + starIds[Math.ceil(rating) - 1] : undefined\n          }\n          {...readOnlyProps}\n        >\n          {stars}\n        </FocusZone>\n      </div>\n    );\n  }\n\n  private _getStarId(index: number): string {\n    return this._id + '-star-' + index;\n  }\n\n  private _onFocus(value: number, ev: React.FocusEvent<HTMLElement>): void {\n    if (Math.ceil(this.state.rating!) !== value) {\n      this.setState({\n        rating: value,\n      } as IRatingState);\n\n      // eslint-disable-next-line deprecation/deprecation\n      const { onChange, onChanged } = this.props;\n\n      if (onChange) {\n        onChange(ev, value);\n      }\n\n      if (onChanged) {\n        onChanged(value);\n      }\n    }\n  }\n\n  private _getLabel(rating: number): JSX.Element {\n    const text = this.props.ariaLabelFormat || '';\n\n    return (\n      <span id={`${this._labelId}-${rating}`} className={this._classNames.labelText}>\n        {format(text, rating, this.props.max)}\n      </span>\n    );\n  }\n\n  private _getInitialValue(props: IRatingProps): number | undefined {\n    if (typeof props.rating === 'undefined') {\n      return this._min;\n    }\n\n    if (props.rating === null) {\n      return undefined;\n    }\n\n    return this._getClampedRating(props.rating);\n  }\n\n  private _getClampedRating(rating: number): number {\n    return Math.min(Math.max(rating, this._min as number), this.props.max as number);\n  }\n\n  private _getRating(): number {\n    if (this.props.rating !== undefined) {\n      return this._getClampedRating(this.props.rating);\n    }\n    if (this.state.rating !== undefined && this.state.rating !== null) {\n      return this._getClampedRating(this.state.rating);\n    }\n    return 0;\n  }\n\n  private _getFillingPercentage(starPosition: number): number {\n    const rating = this._getRating();\n    const ceilValue = Math.ceil(rating as number);\n    let fillPercentage = 100;\n\n    if (starPosition === rating) {\n      fillPercentage = 100;\n    } else if (starPosition === ceilValue) {\n      fillPercentage = 100 * ((rating as number) % 1);\n    } else if (starPosition > ceilValue) {\n      fillPercentage = 0;\n    }\n    return fillPercentage;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}