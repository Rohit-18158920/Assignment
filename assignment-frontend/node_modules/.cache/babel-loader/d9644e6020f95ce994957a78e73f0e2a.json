{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef, classNamesFunction, KeyCodes } from '../../Utilities';\nimport { PrimaryButton, DefaultButton, IconButton } from '../../Button';\nimport { Image } from '../../Image';\nimport { Stack } from '../../Stack';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nvar getClassNames = classNamesFunction();\n\nvar TeachingBubbleContentBase =\n/** @class */\nfunction (_super) {\n  __extends(TeachingBubbleContentBase, _super);\n\n  function TeachingBubbleContentBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.rootElement = React.createRef();\n\n    _this._onKeyDown = function (e) {\n      if (_this.props.onDismiss) {\n        if (e.which === KeyCodes.escape) {\n          _this.props.onDismiss();\n        }\n      }\n    };\n\n    initializeComponentRef(_this);\n    _this.state = {};\n    return _this;\n  }\n\n  TeachingBubbleContentBase.prototype.componentDidMount = function () {\n    if (this.props.onDismiss) {\n      document.addEventListener('keydown', this._onKeyDown, false);\n    }\n  };\n\n  TeachingBubbleContentBase.prototype.componentWillUnmount = function () {\n    if (this.props.onDismiss) {\n      document.removeEventListener('keydown', this._onKeyDown);\n    }\n  };\n\n  TeachingBubbleContentBase.prototype.focus = function () {\n    if (this.rootElement.current) {\n      this.rootElement.current.focus();\n    }\n  };\n\n  TeachingBubbleContentBase.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        illustrationImage = _a.illustrationImage,\n        primaryButtonProps = _a.primaryButtonProps,\n        secondaryButtonProps = _a.secondaryButtonProps,\n        headline = _a.headline,\n        hasCondensedHeadline = _a.hasCondensedHeadline,\n        // eslint-disable-next-line deprecation/deprecation\n    _b = _a.hasCloseButton,\n        // eslint-disable-next-line deprecation/deprecation\n    hasCloseButton = _b === void 0 ? this.props.hasCloseIcon : _b,\n        onDismiss = _a.onDismiss,\n        closeButtonAriaLabel = _a.closeButtonAriaLabel,\n        hasSmallHeadline = _a.hasSmallHeadline,\n        isWide = _a.isWide,\n        styles = _a.styles,\n        theme = _a.theme,\n        ariaDescribedBy = _a.ariaDescribedBy,\n        ariaLabelledBy = _a.ariaLabelledBy,\n        customFooterContent = _a.footerContent,\n        focusTrapZoneProps = _a.focusTrapZoneProps;\n    var imageContent;\n    var headerContent;\n    var bodyContent;\n    var footerContent;\n    var closeButton;\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      hasCondensedHeadline: hasCondensedHeadline,\n      hasSmallHeadline: hasSmallHeadline,\n      hasCloseButton: hasCloseButton,\n      hasHeadline: !!headline,\n      isWide: isWide,\n      primaryButtonClassName: primaryButtonProps ? primaryButtonProps.className : undefined,\n      secondaryButtonClassName: secondaryButtonProps ? secondaryButtonProps.className : undefined\n    });\n\n    if (illustrationImage && illustrationImage.src) {\n      imageContent = React.createElement(\"div\", {\n        className: classNames.imageContent\n      }, React.createElement(Image, __assign({}, illustrationImage)));\n    }\n\n    if (headline) {\n      var HeaderWrapperAs = typeof headline === 'string' ? 'p' : 'div';\n      headerContent = React.createElement(\"div\", {\n        className: classNames.header\n      }, React.createElement(HeaderWrapperAs, {\n        role: \"heading\",\n        className: classNames.headline,\n        id: ariaLabelledBy\n      }, headline));\n    }\n\n    if (children) {\n      var BodyContentWrapperAs = typeof children === 'string' ? 'p' : 'div';\n      bodyContent = React.createElement(\"div\", {\n        className: classNames.body\n      }, React.createElement(BodyContentWrapperAs, {\n        className: classNames.subText,\n        id: ariaDescribedBy\n      }, children));\n    }\n\n    if (primaryButtonProps || secondaryButtonProps || customFooterContent) {\n      footerContent = React.createElement(Stack, {\n        className: classNames.footer,\n        horizontal: true,\n        horizontalAlign: customFooterContent ? 'space-between' : 'end'\n      }, React.createElement(Stack.Item, {\n        align: \"center\"\n      }, React.createElement(\"span\", null, customFooterContent)), React.createElement(Stack.Item, null, secondaryButtonProps && React.createElement(DefaultButton, __assign({}, secondaryButtonProps, {\n        className: classNames.secondaryButton\n      })), primaryButtonProps && React.createElement(PrimaryButton, __assign({}, primaryButtonProps, {\n        className: classNames.primaryButton\n      }))));\n    }\n\n    if (hasCloseButton) {\n      closeButton = React.createElement(IconButton, {\n        className: classNames.closeButton,\n        iconProps: {\n          iconName: 'Cancel'\n        },\n        title: closeButtonAriaLabel,\n        ariaLabel: closeButtonAriaLabel,\n        onClick: onDismiss\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classNames.content,\n      ref: this.rootElement,\n      role: 'dialog',\n      tabIndex: -1,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-describedby\": ariaDescribedBy,\n      \"data-is-focusable\": true\n    }, imageContent, React.createElement(FocusTrapZone, __assign({\n      isClickableOutsideFocusTrap: true\n    }, focusTrapZoneProps), React.createElement(\"div\", {\n      className: classNames.bodyContent\n    }, headerContent, bodyContent, footerContent, closeButton)));\n  };\n\n  return TeachingBubbleContentBase;\n}(React.Component);\n\nexport { TeachingBubbleContentBase };","map":{"version":3,"sources":["components/TeachingBubble/TeachingBubbleContent.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, classNamesFunction, KeyCodes } from '../../Utilities';\nimport { ITeachingBubbleProps, ITeachingBubbleStyleProps, ITeachingBubbleStyles } from './TeachingBubble.types';\nimport { ITeachingBubbleState } from './TeachingBubble.base';\nimport { PrimaryButton, DefaultButton, IconButton } from '../../Button';\nimport { Image } from '../../Image';\nimport { Stack } from '../../Stack';\nimport { FocusTrapZone } from '../../FocusTrapZone';\n\nconst getClassNames = classNamesFunction<ITeachingBubbleStyleProps, ITeachingBubbleStyles>();\n\nexport class TeachingBubbleContentBase extends React.Component<ITeachingBubbleProps, ITeachingBubbleState> {\n  public rootElement = React.createRef<HTMLDivElement>();\n\n  constructor(props: ITeachingBubbleProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this.state = {};\n  }\n\n  public componentDidMount(): void {\n    if (this.props.onDismiss) {\n      document.addEventListener('keydown', this._onKeyDown, false);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this.props.onDismiss) {\n      document.removeEventListener('keydown', this._onKeyDown);\n    }\n  }\n\n  public focus(): void {\n    if (this.rootElement.current) {\n      this.rootElement.current.focus();\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      children,\n      illustrationImage,\n      primaryButtonProps,\n      secondaryButtonProps,\n      headline,\n      hasCondensedHeadline,\n      // eslint-disable-next-line deprecation/deprecation\n      hasCloseButton = this.props.hasCloseIcon,\n      onDismiss,\n      closeButtonAriaLabel,\n      hasSmallHeadline,\n      isWide,\n      styles,\n      theme,\n      ariaDescribedBy,\n      ariaLabelledBy,\n      footerContent: customFooterContent,\n      focusTrapZoneProps,\n    } = this.props;\n\n    let imageContent;\n    let headerContent;\n    let bodyContent;\n    let footerContent;\n    let closeButton;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      hasCondensedHeadline,\n      hasSmallHeadline,\n      hasCloseButton,\n      hasHeadline: !!headline,\n      isWide,\n      primaryButtonClassName: primaryButtonProps ? primaryButtonProps.className : undefined,\n      secondaryButtonClassName: secondaryButtonProps ? secondaryButtonProps.className : undefined,\n    });\n\n    if (illustrationImage && illustrationImage.src) {\n      imageContent = (\n        <div className={classNames.imageContent}>\n          <Image {...(illustrationImage as any)} />\n        </div>\n      );\n    }\n\n    if (headline) {\n      const HeaderWrapperAs = typeof headline === 'string' ? 'p' : 'div';\n\n      headerContent = (\n        <div className={classNames.header}>\n          <HeaderWrapperAs role=\"heading\" className={classNames.headline} id={ariaLabelledBy}>\n            {headline}\n          </HeaderWrapperAs>\n        </div>\n      );\n    }\n\n    if (children) {\n      const BodyContentWrapperAs = typeof children === 'string' ? 'p' : 'div';\n\n      bodyContent = (\n        <div className={classNames.body}>\n          <BodyContentWrapperAs className={classNames.subText} id={ariaDescribedBy}>\n            {children}\n          </BodyContentWrapperAs>\n        </div>\n      );\n    }\n\n    if (primaryButtonProps || secondaryButtonProps || customFooterContent) {\n      footerContent = (\n        <Stack className={classNames.footer} horizontal horizontalAlign={customFooterContent ? 'space-between' : 'end'}>\n          <Stack.Item align=\"center\">{<span>{customFooterContent}</span>}</Stack.Item>\n          <Stack.Item>\n            {secondaryButtonProps && <DefaultButton {...secondaryButtonProps} className={classNames.secondaryButton} />}\n            {primaryButtonProps && <PrimaryButton {...primaryButtonProps} className={classNames.primaryButton} />}\n          </Stack.Item>\n        </Stack>\n      );\n    }\n\n    if (hasCloseButton) {\n      closeButton = (\n        <IconButton\n          className={classNames.closeButton}\n          iconProps={{ iconName: 'Cancel' }}\n          title={closeButtonAriaLabel}\n          ariaLabel={closeButtonAriaLabel}\n          onClick={onDismiss}\n        />\n      );\n    }\n\n    return (\n      <div\n        className={classNames.content}\n        ref={this.rootElement}\n        role={'dialog'}\n        tabIndex={-1}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        data-is-focusable={true}\n      >\n        {imageContent}\n        <FocusTrapZone isClickableOutsideFocusTrap={true} {...focusTrapZoneProps}>\n          <div className={classNames.bodyContent}>\n            {headerContent}\n            {bodyContent}\n            {footerContent}\n            {closeButton}\n          </div>\n        </FocusTrapZone>\n      </div>\n    );\n  }\n\n  private _onKeyDown = (e: any): void => {\n    if (this.props.onDismiss) {\n      if (e.which === KeyCodes.escape) {\n        this.props.onDismiss();\n      }\n    }\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}