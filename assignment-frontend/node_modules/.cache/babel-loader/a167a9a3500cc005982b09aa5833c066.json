{"ast":null,"code":"import { warn } from './warn';\n/**\n * Warns when props are required if a condition is met.\n *\n * @public\n * @param componentName - The name of the component being used.\n * @param props - The props passed into the component.\n * @param requiredProps - The name of the props that are required when the condition is met.\n * @param conditionalPropName - The name of the prop that the condition is based on.\n * @param condition - Whether the condition is met.\n */\n\nexport function warnConditionallyRequiredProps(componentName, props, requiredProps, conditionalPropName, condition) {\n  if (condition === true && process.env.NODE_ENV !== 'production') {\n    for (var _i = 0, requiredProps_1 = requiredProps; _i < requiredProps_1.length; _i++) {\n      var requiredPropName = requiredProps_1[_i];\n\n      if (!(requiredPropName in props)) {\n        warn(componentName + \" property '\" + requiredPropName + \"' is required when '\" + conditionalPropName + \"' is used.'\");\n      }\n    }\n  }\n}","map":{"version":3,"sources":["warn/warnConditionallyRequiredProps.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,QAAqB,QAArB;AACA;;;;;;;;;AASG;;AACH,OAAM,SAAU,8BAAV,CACJ,aADI,EAEJ,KAFI,EAGJ,aAHI,EAIJ,mBAJI,EAKJ,SALI,EAKc;AAElB,MAAI,SAAS,KAAK,IAAd,IAAsB,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAnD,EAAiE;AAC/D,SAA+B,IAAA,EAAA,GAAA,CAAA,EAAA,eAAA,GAAA,aAA/B,EAA+B,EAAA,GAAA,eAAA,CAAA,MAA/B,EAA+B,EAAA,EAA/B,EAA8C;AAAzC,UAAM,gBAAgB,GAAA,eAAA,CAAA,EAAA,CAAtB;;AACH,UAAI,EAAE,gBAAgB,IAAI,KAAtB,CAAJ,EAAkC;AAChC,QAAA,IAAI,CAAI,aAAa,GAAA,aAAb,GAA2B,gBAA3B,GAA2C,sBAA3C,GAAkE,mBAAlE,GAAqF,aAAzF,CAAJ;AACD;AACF;AACF;AACF","sourcesContent":["import { warn } from './warn';\n/**\n * Warns when props are required if a condition is met.\n *\n * @public\n * @param componentName - The name of the component being used.\n * @param props - The props passed into the component.\n * @param requiredProps - The name of the props that are required when the condition is met.\n * @param conditionalPropName - The name of the prop that the condition is based on.\n * @param condition - Whether the condition is met.\n */\nexport function warnConditionallyRequiredProps<P>(\n  componentName: string,\n  props: P,\n  requiredProps: string[],\n  conditionalPropName: string,\n  condition: boolean,\n): void {\n  if (condition === true && process.env.NODE_ENV !== 'production') {\n    for (const requiredPropName of requiredProps) {\n      if (!(requiredPropName in props)) {\n        warn(`${componentName} property '${requiredPropName}' is required when '${conditionalPropName}' is used.'`);\n      }\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}