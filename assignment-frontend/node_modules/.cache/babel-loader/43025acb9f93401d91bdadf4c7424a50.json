{"ast":null,"code":"import { fontFace } from '@uifabric/merge-styles';\nimport { FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport { createFontStyles } from './createFontStyles';\nimport { getLanguage, getWindow } from '@uifabric/utilities'; // Default urls.\n\nvar DefaultBaseUrl = 'https://static2.sharepointonline.com/files/fabric/assets'; // Standard font styling.\n\nexport var DefaultFontStyles = createFontStyles(getLanguage('sessionStorage'));\n\nfunction _registerFontFace(fontFamily, url, fontWeight, localFontName) {\n  fontFamily = \"'\" + fontFamily + \"'\";\n  var localFontSrc = localFontName !== undefined ? \"local('\" + localFontName + \"'),\" : '';\n  fontFace({\n    fontFamily: fontFamily,\n    src: localFontSrc + (\"url('\" + url + \".woff2') format('woff2'),\") + (\"url('\" + url + \".woff') format('woff')\"),\n    fontWeight: fontWeight,\n    fontStyle: 'normal',\n    fontDisplay: 'swap'\n  });\n}\n\nfunction _registerFontFaceSet(baseUrl, fontFamily, cdnFolder, cdnFontName, localFontName) {\n  if (cdnFontName === void 0) {\n    cdnFontName = 'segoeui';\n  }\n\n  var urlBase = baseUrl + \"/\" + cdnFolder + \"/\" + cdnFontName;\n\n  _registerFontFace(fontFamily, urlBase + '-light', FontWeights.light, localFontName && localFontName + ' Light');\n\n  _registerFontFace(fontFamily, urlBase + '-semilight', FontWeights.semilight, localFontName && localFontName + ' SemiLight');\n\n  _registerFontFace(fontFamily, urlBase + '-regular', FontWeights.regular, localFontName);\n\n  _registerFontFace(fontFamily, urlBase + '-semibold', FontWeights.semibold, localFontName && localFontName + ' SemiBold');\n\n  _registerFontFace(fontFamily, urlBase + '-bold', FontWeights.bold, localFontName && localFontName + ' Bold');\n}\n\nexport function registerDefaultFontFaces(baseUrl) {\n  if (baseUrl) {\n    var fontUrl = baseUrl + \"/fonts\"; // Produce @font-face definitions for all supported web fonts.\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Thai, 'leelawadeeui-thai', 'leelawadeeui');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Arabic, 'segoeui-arabic');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Cyrillic, 'segoeui-cyrillic');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.EastEuropean, 'segoeui-easteuropean');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Greek, 'segoeui-greek');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Hebrew, 'segoeui-hebrew');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Vietnamese, 'segoeui-vietnamese');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.WestEuropean, 'segoeui-westeuropean', 'segoeui', 'Segoe UI');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontFamilies.Selawik, 'selawik', 'selawik');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Armenian, 'segoeui-armenian');\n\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Georgian, 'segoeui-georgian'); // Leelawadee UI (Thai) does not have a 'light' weight, so we override\n    // the font-face generated above to use the 'semilight' weight instead.\n\n\n    _registerFontFace('Leelawadee UI Web', fontUrl + \"/leelawadeeui-thai/leelawadeeui-semilight\", FontWeights.light); // Leelawadee UI (Thai) does not have a 'semibold' weight, so we override\n    // the font-face generated above to use the 'bold' weight instead.\n\n\n    _registerFontFace('Leelawadee UI Web', fontUrl + \"/leelawadeeui-thai/leelawadeeui-bold\", FontWeights.semibold);\n  }\n}\n/**\n * Reads the fontBaseUrl from window.FabricConfig.fontBaseUrl or falls back to a default.\n */\n\nfunction _getFontBaseUrl() {\n  var _a, _b, _c; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  var fabricConfig = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.FabricConfig;\n  return _c = (_b = fabricConfig) === null || _b === void 0 ? void 0 : _b.fontBaseUrl, _c !== null && _c !== void 0 ? _c : DefaultBaseUrl;\n}\n/**\n * Register the font faces.\n */\n\n\nregisterDefaultFontFaces(_getFontBaseUrl());","map":{"version":3,"sources":["fonts/DefaultFontStyles.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAsC,wBAAtC;AACA,SAAS,WAAT,EAAsB,qBAAtB,EAA6C,kBAA7C,QAAuE,eAAvE;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AACA,SAAS,WAAT,EAAsB,SAAtB,QAAuC,qBAAvC,C,CAIA;;AACA,IAAM,cAAc,GAAG,0DAAvB,C,CAEA;;AACA,OAAO,IAAM,iBAAiB,GAAgB,gBAAgB,CAAC,WAAW,CAAC,gBAAD,CAAZ,CAAvD;;AAEP,SAAS,iBAAT,CAA2B,UAA3B,EAA+C,GAA/C,EAA4D,UAA5D,EAAsF,aAAtF,EAA4G;AAC1G,EAAA,UAAU,GAAG,MAAI,UAAJ,GAAc,GAA3B;AAEA,MAAM,YAAY,GAAG,aAAa,KAAK,SAAlB,GAA8B,YAAU,aAAV,GAAuB,KAArD,GAA6D,EAAlF;AAEA,EAAA,QAAQ,CAAC;AACP,IAAA,UAAU,EAAA,UADH;AAEP,IAAA,GAAG,EAAE,YAAY,IAAG,UAAQ,GAAR,GAAW,2BAAd,CAAZ,IAAwD,UAAQ,GAAR,GAAW,wBAAnE,CAFE;AAGP,IAAA,UAAU,EAAA,UAHH;AAIP,IAAA,SAAS,EAAE,QAJJ;AAKP,IAAA,WAAW,EAAE;AALN,GAAD,CAAR;AAOD;;AAED,SAAS,oBAAT,CACE,OADF,EAEE,UAFF,EAGE,SAHF,EAIE,WAJF,EAKE,aALF,EAKwB;AADtB,MAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,SAAA;AAA+B;;AAG/B,MAAM,OAAO,GAAM,OAAO,GAAA,GAAP,GAAW,SAAX,GAAoB,GAApB,GAAwB,WAA3C;;AAEA,EAAA,iBAAiB,CAAC,UAAD,EAAa,OAAO,GAAG,QAAvB,EAAiC,WAAW,CAAC,KAA7C,EAAoD,aAAa,IAAI,aAAa,GAAG,QAArF,CAAjB;;AACA,EAAA,iBAAiB,CACf,UADe,EAEf,OAAO,GAAG,YAFK,EAGf,WAAW,CAAC,SAHG,EAIf,aAAa,IAAI,aAAa,GAAG,YAJlB,CAAjB;;AAMA,EAAA,iBAAiB,CAAC,UAAD,EAAa,OAAO,GAAG,UAAvB,EAAmC,WAAW,CAAC,OAA/C,EAAwD,aAAxD,CAAjB;;AACA,EAAA,iBAAiB,CACf,UADe,EAEf,OAAO,GAAG,WAFK,EAGf,WAAW,CAAC,QAHG,EAIf,aAAa,IAAI,aAAa,GAAG,WAJlB,CAAjB;;AAMA,EAAA,iBAAiB,CAAC,UAAD,EAAa,OAAO,GAAG,OAAvB,EAAgC,WAAW,CAAC,IAA5C,EAAkD,aAAa,IAAI,aAAa,GAAG,OAAnF,CAAjB;AACD;;AAED,OAAM,SAAU,wBAAV,CAAmC,OAAnC,EAAkD;AACtD,MAAI,OAAJ,EAAa;AACX,QAAM,OAAO,GAAM,OAAO,GAAA,QAA1B,CADW,CAGX;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,kBAAkB,CAAC,IAA7B,EAAmC,mBAAnC,EAAwD,cAAxD,CAApB;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,kBAAkB,CAAC,MAA7B,EAAqC,gBAArC,CAApB;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,kBAAkB,CAAC,QAA7B,EAAuC,kBAAvC,CAApB;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,kBAAkB,CAAC,YAA7B,EAA2C,sBAA3C,CAApB;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,kBAAkB,CAAC,KAA7B,EAAoC,eAApC,CAApB;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,kBAAkB,CAAC,MAA7B,EAAqC,gBAArC,CAApB;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,kBAAkB,CAAC,UAA7B,EAAyC,oBAAzC,CAApB;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,kBAAkB,CAAC,YAA7B,EAA2C,sBAA3C,EAAmE,SAAnE,EAA8E,UAA9E,CAApB;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,qBAAqB,CAAC,OAAhC,EAAyC,SAAzC,EAAoD,SAApD,CAApB;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,kBAAkB,CAAC,QAA7B,EAAuC,kBAAvC,CAApB;;AACA,IAAA,oBAAoB,CAAC,OAAD,EAAU,kBAAkB,CAAC,QAA7B,EAAuC,kBAAvC,CAApB,CAdW,CAgBX;AACA;;;AACA,IAAA,iBAAiB,CAAC,mBAAD,EAAyB,OAAO,GAAA,2CAAhC,EAA6E,WAAW,CAAC,KAAzF,CAAjB,CAlBW,CAoBX;AACA;;;AACA,IAAA,iBAAiB,CAAC,mBAAD,EAAyB,OAAO,GAAA,sCAAhC,EAAwE,WAAW,CAAC,QAApF,CAAjB;AACD;AACF;AAED;;AAEG;;AACH,SAAS,eAAT,GAAwB;iBAAA,CACtB;;;AACA,MAAM,YAAY,GAAA,CAAA,EAAA,GAA+B,SAAS,EAAxC,MAAkD,IAAlD,IAAkD,EAAA,KAAA,KAAA,CAAlD,GAAkD,KAAA,CAAlD,GAAkD,EAAA,CAAE,YAAtE;AAEA,SAAA,EAAA,GAAA,CAAA,EAAA,GAAO,YAAP,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmB,EAAA,CAAE,WAArB,EAAgC,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,cAApC;AACD;AAED;;AAEG;;;AACH,wBAAwB,CAAC,eAAe,EAAhB,CAAxB","sourcesContent":["import { fontFace, IFontWeight } from '@uifabric/merge-styles';\nimport { FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport { createFontStyles } from './createFontStyles';\nimport { getLanguage, getWindow } from '@uifabric/utilities';\nimport { IFontStyles } from '../types/IFontStyles';\nimport { IFabricConfig } from '../types/IFabricConfig';\n\n// Default urls.\nconst DefaultBaseUrl = 'https://static2.sharepointonline.com/files/fabric/assets';\n\n// Standard font styling.\nexport const DefaultFontStyles: IFontStyles = createFontStyles(getLanguage('sessionStorage'));\n\nfunction _registerFontFace(fontFamily: string, url: string, fontWeight?: IFontWeight, localFontName?: string): void {\n  fontFamily = `'${fontFamily}'`;\n\n  const localFontSrc = localFontName !== undefined ? `local('${localFontName}'),` : '';\n\n  fontFace({\n    fontFamily,\n    src: localFontSrc + `url('${url}.woff2') format('woff2'),` + `url('${url}.woff') format('woff')`,\n    fontWeight,\n    fontStyle: 'normal',\n    fontDisplay: 'swap',\n  });\n}\n\nfunction _registerFontFaceSet(\n  baseUrl: string,\n  fontFamily: string,\n  cdnFolder: string,\n  cdnFontName: string = 'segoeui',\n  localFontName?: string,\n): void {\n  const urlBase = `${baseUrl}/${cdnFolder}/${cdnFontName}`;\n\n  _registerFontFace(fontFamily, urlBase + '-light', FontWeights.light, localFontName && localFontName + ' Light');\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semilight',\n    FontWeights.semilight,\n    localFontName && localFontName + ' SemiLight',\n  );\n  _registerFontFace(fontFamily, urlBase + '-regular', FontWeights.regular, localFontName);\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semibold',\n    FontWeights.semibold,\n    localFontName && localFontName + ' SemiBold',\n  );\n  _registerFontFace(fontFamily, urlBase + '-bold', FontWeights.bold, localFontName && localFontName + ' Bold');\n}\n\nexport function registerDefaultFontFaces(baseUrl: string): void {\n  if (baseUrl) {\n    const fontUrl = `${baseUrl}/fonts`;\n\n    // Produce @font-face definitions for all supported web fonts.\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Thai, 'leelawadeeui-thai', 'leelawadeeui');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Arabic, 'segoeui-arabic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Cyrillic, 'segoeui-cyrillic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.EastEuropean, 'segoeui-easteuropean');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Greek, 'segoeui-greek');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Hebrew, 'segoeui-hebrew');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Vietnamese, 'segoeui-vietnamese');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.WestEuropean, 'segoeui-westeuropean', 'segoeui', 'Segoe UI');\n    _registerFontFaceSet(fontUrl, LocalizedFontFamilies.Selawik, 'selawik', 'selawik');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Armenian, 'segoeui-armenian');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Georgian, 'segoeui-georgian');\n\n    // Leelawadee UI (Thai) does not have a 'light' weight, so we override\n    // the font-face generated above to use the 'semilight' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-semilight`, FontWeights.light);\n\n    // Leelawadee UI (Thai) does not have a 'semibold' weight, so we override\n    // the font-face generated above to use the 'bold' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-bold`, FontWeights.semibold);\n  }\n}\n\n/**\n * Reads the fontBaseUrl from window.FabricConfig.fontBaseUrl or falls back to a default.\n */\nfunction _getFontBaseUrl(): string {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fabricConfig: IFabricConfig | undefined = (getWindow() as any)?.FabricConfig;\n\n  return fabricConfig?.fontBaseUrl ?? DefaultBaseUrl;\n}\n\n/**\n * Register the font faces.\n */\nregisterDefaultFontFaces(_getFontBaseUrl());\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}