{"ast":null,"code":"import { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { serializeRuleEntries } from './styleToClassName';\n/**\n * Registers a font face.\n * @public\n */\n\nexport function fontFace(font) {\n  Stylesheet.getInstance().insertRule(\"@font-face{\" + serializeRuleEntries(getStyleOptions(), font) + \"}\", true);\n}","map":{"version":3,"sources":["fontFace.ts"],"names":[],"mappings":"AACA,SAAS,eAAT,QAAgC,qBAAhC;AACA,SAAS,UAAT,QAA2B,cAA3B;AACA,SAAS,oBAAT,QAAqC,oBAArC;AAEA;;;AAGG;;AACH,OAAM,SAAU,QAAV,CAAmB,IAAnB,EAAkC;AACtC,EAAA,UAAU,CAAC,WAAX,GAAyB,UAAzB,CAAoC,gBAAc,oBAAoB,CAAC,eAAe,EAAhB,EAAoB,IAApB,CAAlC,GAAiE,GAArG,EAA0G,IAA1G;AACD","sourcesContent":["import { IFontFace } from './IRawStyleBase';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { serializeRuleEntries } from './styleToClassName';\n\n/**\n * Registers a font face.\n * @public\n */\nexport function fontFace(font: IFontFace): void {\n  Stylesheet.getInstance().insertRule(`@font-face{${serializeRuleEntries(getStyleOptions(), font as {})}}`, true);\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}