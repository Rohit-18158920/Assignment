{"ast":null,"code":"import { __extends, __spreadArrays } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, css, getId, getRTL, getRTLSafeKeyCode, format, findIndex, find, initializeComponentRef } from '../../Utilities';\nimport { DateRangeType } from '../../utilities/dateValues/DateValues';\nimport { FocusZone } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport { addDays, addWeeks, addMonths, compareDates, compareDatePart, getDateRangeArray, isInDateRangeArray, getWeekNumber, getWeekNumbersInMonth, getMonthStart, getMonthEnd } from '../../utilities/dateMath/DateMath';\nimport * as stylesImport from './Calendar.scss';\nvar styles = stylesImport;\nvar DAYS_IN_WEEK = 7;\n\nvar CalendarDay =\n/** @class */\nfunction (_super) {\n  __extends(CalendarDay, _super);\n\n  function CalendarDay(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.days = {};\n\n    _this._onKeyDown = function (callback, ev) {\n      if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n        callback();\n      }\n    };\n\n    _this._onDayKeyDown = function (originalDate, weekIndex, dayIndex) {\n      return function (ev) {\n        if (ev.which === KeyCodes.enter) {\n          _this._onSelectDate(originalDate, ev);\n\n          ev.preventDefault();\n        } else {\n          _this._navigateMonthEdge(ev, originalDate, weekIndex, dayIndex);\n        }\n      };\n    };\n\n    _this._onDayMouseDown = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // set the press styling\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.add(styles.dayPress);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.add(styles.dayPress);\n              ref.classList.add(styles.dayIsHighlighted);\n            } else if (ref) {\n              ref.classList.remove(styles.dayIsHighlighted);\n            }\n          });\n        }\n      };\n    };\n\n    _this._onDayMouseUp = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // remove press styling\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.remove(styles.dayPress);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.remove(styles.dayPress);\n            }\n          });\n        }\n      };\n    };\n\n    _this._onDayMouseOver = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // set the hover styling on every day in the same month\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.add(styles.dayHover);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.add(styles.dayHover);\n            }\n          });\n        }\n      };\n    };\n\n    _this._onDayMouseLeave = function (originalDate, weekIndex, dayIndex, dateRangeType) {\n      return function (ev) {\n        // remove the hover and pressed styling\n        if (dateRangeType === DateRangeType.Month) {\n          _this._applyFunctionToDayRefs(function (ref, day) {\n            if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n              ref.classList.remove(styles.dayHover);\n            }\n          });\n        } else {\n          // week or work week view\n          _this._applyFunctionToDayRefs(function (ref, day, dayWeekIndex) {\n            if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n              ref.classList.remove(styles.dayHover);\n            }\n          });\n        }\n      };\n    };\n\n    _this._onTableMouseLeave = function (ev) {\n      if (ev.target.contains && ev.relatedTarget && ev.relatedTarget.contains && ev.target.contains(ev.relatedTarget)) {\n        return;\n      }\n\n      _this._applyFunctionToDayRefs(function (ref, day) {\n        if (ref) {\n          ref.classList.remove(styles.dayHover);\n          ref.classList.remove(styles.dayPress);\n        }\n      });\n    };\n\n    _this._onTableMouseUp = function (ev) {\n      if (ev.target.contains && ev.relatedTarget && ev.relatedTarget.contains && ev.target.contains(ev.relatedTarget)) {\n        return;\n      }\n\n      _this._applyFunctionToDayRefs(function (ref, day) {\n        if (ref) {\n          ref.classList.remove(styles.dayPress);\n        }\n      });\n    };\n\n    _this._onSelectDate = function (selectedDate, ev) {\n      var _a = _this.props,\n          onSelectDate = _a.onSelectDate,\n          dateRangeType = _a.dateRangeType,\n          firstDayOfWeek = _a.firstDayOfWeek,\n          navigatedDate = _a.navigatedDate,\n          autoNavigateOnSelection = _a.autoNavigateOnSelection,\n          minDate = _a.minDate,\n          maxDate = _a.maxDate,\n          workWeekDays = _a.workWeekDays;\n\n      if (ev) {\n        ev.stopPropagation();\n      }\n\n      var dateRange = getDateRangeArray(selectedDate, dateRangeType, firstDayOfWeek, workWeekDays);\n\n      if (dateRangeType !== DateRangeType.Day) {\n        dateRange = _this._getBoundedDateRange(dateRange, minDate, maxDate);\n      }\n\n      dateRange = dateRange.filter(function (d) {\n        return !_this._getIsRestrictedDate(d);\n      });\n\n      if (onSelectDate) {\n        onSelectDate(selectedDate, dateRange);\n      } // Navigate to next or previous month if needed\n\n\n      if (autoNavigateOnSelection && selectedDate.getMonth() !== navigatedDate.getMonth()) {\n        var compareResult = compareDatePart(selectedDate, navigatedDate);\n\n        if (compareResult < 0) {\n          _this._onSelectPrevMonth();\n        } else if (compareResult > 0) {\n          _this._onSelectNextMonth();\n        }\n      }\n    };\n\n    _this._onSelectNextMonth = function () {\n      _this.props.onNavigateDate(addMonths(_this.props.navigatedDate, 1), false);\n    };\n\n    _this._onSelectPrevMonth = function () {\n      _this.props.onNavigateDate(addMonths(_this.props.navigatedDate, -1), false);\n    };\n\n    _this._onClose = function () {\n      if (_this.props.onDismiss) {\n        _this.props.onDismiss();\n      }\n    };\n\n    _this._onHeaderSelect = function () {\n      var onHeaderSelect = _this.props.onHeaderSelect;\n\n      if (onHeaderSelect) {\n        onHeaderSelect(true);\n      }\n    };\n\n    _this._onHeaderKeyDown = function (ev) {\n      var onHeaderSelect = _this.props.onHeaderSelect;\n\n      if (onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n        onHeaderSelect(true);\n      }\n    };\n\n    _this._onPrevMonthKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onKeyDown(_this._onSelectPrevMonth, ev);\n      }\n    };\n\n    _this._onNextMonthKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onKeyDown(_this._onSelectNextMonth, ev);\n      }\n    };\n\n    _this._onCloseButtonKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onKeyDown(_this._onClose, ev);\n      }\n    };\n\n    initializeComponentRef(_this);\n    _this.state = {\n      activeDescendantId: getId('DatePickerDay-active'),\n      weeks: _this._getWeeks(props)\n    };\n    _this._onSelectNextMonth = _this._onSelectNextMonth.bind(_this);\n    _this._onSelectPrevMonth = _this._onSelectPrevMonth.bind(_this);\n    _this._onClose = _this._onClose.bind(_this);\n    return _this;\n  }\n\n  CalendarDay.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    this.setState({\n      weeks: this._getWeeks(nextProps)\n    });\n  };\n\n  CalendarDay.prototype.render = function () {\n    var _a, _b;\n\n    var _this = this;\n\n    var _c = this.state,\n        activeDescendantId = _c.activeDescendantId,\n        weeks = _c.weeks;\n    var _d = this.props,\n        firstDayOfWeek = _d.firstDayOfWeek,\n        strings = _d.strings,\n        navigatedDate = _d.navigatedDate,\n        selectedDate = _d.selectedDate,\n        dateRangeType = _d.dateRangeType,\n        navigationIcons = _d.navigationIcons,\n        showWeekNumbers = _d.showWeekNumbers,\n        firstWeekOfYear = _d.firstWeekOfYear,\n        dateTimeFormatter = _d.dateTimeFormatter,\n        minDate = _d.minDate,\n        maxDate = _d.maxDate,\n        showCloseButton = _d.showCloseButton,\n        allFocusable = _d.allFocusable;\n    var dayPickerId = getId('DatePickerDay-dayPicker');\n    var monthAndYearId = getId('DatePickerDay-monthAndYear');\n    var leftNavigationIcon = navigationIcons.leftNavigation;\n    var rightNavigationIcon = navigationIcons.rightNavigation;\n    var closeNavigationIcon = navigationIcons.closeIcon;\n    var weekNumbers = showWeekNumbers ? getWeekNumbersInMonth(weeks.length, firstDayOfWeek, firstWeekOfYear, navigatedDate) : null;\n    var selectedDateWeekNumber = showWeekNumbers ? getWeekNumber(selectedDate, firstDayOfWeek, firstWeekOfYear) : undefined; // When the month is highlighted get the corner dates so that styles can be added to them\n\n    var weekCorners = this._getWeekCornerStyles(weeks, dateRangeType); // determine if previous/next months are in bounds\n\n\n    var prevMonthInBounds = minDate ? compareDatePart(minDate, getMonthStart(navigatedDate)) < 0 : true;\n    var nextMonthInBounds = maxDate ? compareDatePart(getMonthEnd(navigatedDate), maxDate) < 0 : true;\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-dayPicker', styles.dayPicker, showWeekNumbers && 'ms-DatePicker-showWeekNumbers' && (getRTL() ? styles.showWeekNumbersRTL : styles.showWeekNumbers)),\n      id: dayPickerId\n    }, React.createElement(\"div\", {\n      className: css('ms-DatePicker-header', styles.header)\n    }, React.createElement(\"div\", {\n      \"aria-live\": \"polite\",\n      \"aria-relevant\": \"text\",\n      \"aria-atomic\": \"true\",\n      id: monthAndYearId,\n      className: styles.monthAndYear\n    }, this.props.onHeaderSelect ? React.createElement(\"div\", {\n      className: css('ms-DatePicker-monthAndYear js-showMonthPicker', styles.headerToggleView),\n      onClick: this._onHeaderSelect,\n      onKeyDown: this._onHeaderKeyDown,\n      \"aria-label\": dateTimeFormatter.formatMonthYear(navigatedDate, strings),\n      role: \"button\",\n      tabIndex: 0\n    }, dateTimeFormatter.formatMonthYear(navigatedDate, strings)) : React.createElement(\"div\", {\n      className: css('ms-DatePicker-monthAndYear', styles.monthAndYear)\n    }, dateTimeFormatter.formatMonthYear(navigatedDate, strings))), React.createElement(\"div\", {\n      className: css('ms-DatePicker-monthComponents', styles.monthComponents)\n    }, React.createElement(\"div\", {\n      className: css('ms-DatePicker-navContainer', styles.navContainer)\n    }, React.createElement(\"button\", {\n      className: css('ms-DatePicker-prevMonth js-prevMonth', styles.prevMonth, (_a = {}, _a['ms-DatePicker-prevMonth--disabled ' + styles.prevMonthIsDisabled] = !prevMonthInBounds, _a)),\n      disabled: !allFocusable && !prevMonthInBounds,\n      \"aria-disabled\": !prevMonthInBounds,\n      onClick: prevMonthInBounds ? this._onSelectPrevMonth : undefined,\n      onKeyDown: prevMonthInBounds ? this._onPrevMonthKeyDown : undefined,\n      \"aria-controls\": dayPickerId,\n      title: strings.prevMonthAriaLabel ? strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, -1).getMonth()] : undefined,\n      role: \"button\",\n      type: \"button\"\n    }, React.createElement(Icon, {\n      iconName: leftNavigationIcon\n    })), React.createElement(\"button\", {\n      className: css('ms-DatePicker-nextMonth js-nextMonth', styles.nextMonth, (_b = {}, _b['ms-DatePicker-nextMonth--disabled ' + styles.nextMonthIsDisabled] = !nextMonthInBounds, _b)),\n      disabled: !allFocusable && !nextMonthInBounds,\n      \"aria-disabled\": !nextMonthInBounds,\n      onClick: nextMonthInBounds ? this._onSelectNextMonth : undefined,\n      onKeyDown: nextMonthInBounds ? this._onNextMonthKeyDown : undefined,\n      \"aria-controls\": dayPickerId,\n      title: strings.nextMonthAriaLabel ? strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, 1).getMonth()] : undefined,\n      role: \"button\",\n      type: \"button\"\n    }, React.createElement(Icon, {\n      iconName: rightNavigationIcon\n    })), showCloseButton && React.createElement(\"button\", {\n      className: css('ms-DatePicker-closeButton js-closeButton', styles.closeButton),\n      onClick: this._onClose,\n      onKeyDown: this._onCloseButtonKeyDown,\n      title: strings.closeButtonAriaLabel,\n      role: \"button\",\n      type: \"button\"\n    }, React.createElement(Icon, {\n      iconName: closeNavigationIcon\n    }))))), React.createElement(FocusZone, null, React.createElement(\"table\", {\n      className: css('ms-DatePicker-table', styles.table),\n      \"aria-readonly\": \"true\",\n      \"aria-multiselectable\": \"false\",\n      \"aria-labelledby\": monthAndYearId,\n      \"aria-activedescendant\": activeDescendantId,\n      role: \"grid\"\n    }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, showWeekNumbers && React.createElement(\"th\", {\n      className: css('ms-DatePicker-weekday', styles.weekday)\n    }), strings.shortDays.map(function (val, index) {\n      return React.createElement(\"th\", {\n        className: css('ms-DatePicker-weekday', styles.weekday),\n        role: \"columnheader\",\n        scope: \"col\",\n        key: index,\n        title: strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK],\n        \"aria-label\": strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK],\n        \"data-is-focusable\": allFocusable ? true : undefined\n      }, strings.shortDays[(index + firstDayOfWeek) % DAYS_IN_WEEK]);\n    }))), React.createElement(\"tbody\", {\n      onMouseLeave: dateRangeType !== DateRangeType.Day ? this._onTableMouseLeave : undefined,\n      onMouseUp: dateRangeType !== DateRangeType.Day ? this._onTableMouseUp : undefined\n    }, weeks.map(function (week, weekIndex) {\n      var _a;\n\n      return React.createElement(\"tr\", {\n        key: weekNumbers ? weekNumbers[weekIndex] : weekIndex\n      }, showWeekNumbers && weekNumbers && React.createElement(\"th\", {\n        className: css('ms-DatePicker-weekNumbers', 'ms-DatePicker-weekday', styles.weekday, styles.weekNumbers),\n        key: weekIndex,\n        title: weekNumbers && strings.weekNumberFormatString && format(strings.weekNumberFormatString, weekNumbers[weekIndex]),\n        \"aria-label\": weekNumbers && strings.weekNumberFormatString && format(strings.weekNumberFormatString, weekNumbers[weekIndex]),\n        scope: \"row\"\n      }, React.createElement(\"div\", {\n        className: css('ms-DatePicker-day', styles.day, (_a = {}, _a['ms-DatePicker-week--highlighted ' + styles.weekIsHighlighted] = selectedDateWeekNumber === weekNumbers[weekIndex], _a))\n      }, React.createElement(\"span\", null, weekNumbers[weekIndex]))), week.map(function (day, dayIndex) {\n        var _a, _b;\n\n        var isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n        return React.createElement(\"td\", {\n          key: day.key,\n          onClick: day.isInBounds ? day.onSelected : undefined,\n          className: css(styles.dayWrapper, 'ms-DatePicker-day', _this._getHighlightedCornerStyle(weekCorners, dayIndex, weekIndex), (_a = {}, _a['ms-DatePicker-weekBackground ' + styles.weekBackground] = day.isSelected && (dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek), _a['ms-DatePicker-dayBackground ' + styles.dayBackground] = dateRangeType === DateRangeType.Day, _a['ms-DatePicker-day--highlighted ' + styles.dayIsHighlighted] = day.isSelected && dateRangeType === DateRangeType.Day, _a['ms-DatePicker-day--infocus ' + styles.dayIsFocused] = day.isInBounds && day.isInMonth, _a['ms-DatePicker-day--outfocus ' + styles.dayIsUnfocused] = day.isInBounds && !day.isInMonth, _a[styles.daySelection] = dateRangeType === DateRangeType.Day, _a[styles.weekSelection] = dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek, _a[styles.monthSelection] = dateRangeType === DateRangeType.Month, _a)),\n          ref: function (element) {\n            return _this._setDayCellRef(element, day, isNavigatedDate);\n          },\n          onMouseOver: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseOver(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          onMouseLeave: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseLeave(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          onMouseDown: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseDown(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          onMouseUp: dateRangeType !== DateRangeType.Day && day.isInBounds ? _this._onDayMouseUp(day.originalDate, weekIndex, dayIndex, dateRangeType) : undefined,\n          role: 'gridcell'\n        }, React.createElement(\"button\", {\n          key: day.key + 'button',\n          onClick: day.isInBounds ? day.onSelected : undefined,\n          className: css(styles.day, 'ms-DatePicker-day-button', (_b = {}, _b['ms-DatePicker-day--disabled ' + styles.dayIsDisabled] = !day.isInBounds, _b['ms-DatePicker-day--today ' + styles.dayIsToday] = day.isToday, _b)),\n          onKeyDown: _this._onDayKeyDown(day.originalDate, weekIndex, dayIndex),\n          \"aria-label\": dateTimeFormatter.formatMonthDayYear(day.originalDate, strings),\n          id: isNavigatedDate ? activeDescendantId : undefined,\n          \"aria-readonly\": true,\n          \"aria-current\": day.isToday ? 'date' : undefined,\n          \"aria-selected\": day.isInBounds ? day.isSelected : undefined,\n          \"data-is-focusable\": allFocusable || (day.isInBounds ? true : undefined),\n          ref: function (element) {\n            return _this._setDayRef(element, day, isNavigatedDate);\n          },\n          disabled: !allFocusable && !day.isInBounds,\n          \"aria-disabled\": !day.isInBounds,\n          type: \"button\"\n        }, React.createElement(\"span\", {\n          \"aria-hidden\": \"true\"\n        }, dateTimeFormatter.formatDay(day.originalDate))));\n      }));\n    })))));\n  };\n\n  CalendarDay.prototype.focus = function () {\n    if (this.navigatedDay) {\n      this.navigatedDay.tabIndex = 0;\n      this.navigatedDay.focus();\n    }\n  };\n\n  CalendarDay.prototype._setDayRef = function (element, day, isNavigatedDate) {\n    if (isNavigatedDate) {\n      this.navigatedDay = element;\n    }\n  };\n\n  CalendarDay.prototype._setDayCellRef = function (element, day, isNavigatedDate) {\n    this.days[day.key] = element;\n  };\n\n  CalendarDay.prototype._getWeekCornerStyles = function (weeks, dateRangeType) {\n    var _this = this;\n\n    var weekCornersStyled = {};\n\n    switch (dateRangeType) {\n      case DateRangeType.Month:\n        /* need to handle setting all of the corners on arbitrarily shaped blobs\n              __\n           __|A |\n          |B |C |__\n          |D |E |F |\n                   in this case, A needs top left rounded, top right rounded\n          B needs top left rounded\n          C doesn't need any rounding\n          D needs bottom left rounded\n          E doesn't need any rounding\n          F needs top right rounding\n        */\n        // if there's an item above, lose both top corners. Item below, lose both bottom corners, etc.\n        weeks.forEach(function (week, weekIndex) {\n          week.forEach(function (day, dayIndex) {\n            var above = weeks[weekIndex - 1] && weeks[weekIndex - 1][dayIndex] && weeks[weekIndex - 1][dayIndex].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var below = weeks[weekIndex + 1] && weeks[weekIndex + 1][dayIndex] && weeks[weekIndex + 1][dayIndex].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var left = weeks[weekIndex][dayIndex - 1] && weeks[weekIndex][dayIndex - 1].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var right = weeks[weekIndex][dayIndex + 1] && weeks[weekIndex][dayIndex + 1].originalDate.getMonth() === weeks[weekIndex][dayIndex].originalDate.getMonth();\n            var roundedTopLeft = !above && !left;\n            var roundedTopRight = !above && !right;\n            var roundedBottomLeft = !below && !left;\n            var roundedBottomRight = !below && !right;\n            var style = '';\n\n            if (roundedTopLeft) {\n              style = getRTL() ? style.concat(styles.topRightCornerDate + ' ') : style.concat(styles.topLeftCornerDate + ' ');\n            }\n\n            if (roundedTopRight) {\n              style = getRTL() ? style.concat(styles.topLeftCornerDate + ' ') : style.concat(styles.topRightCornerDate + ' ');\n            }\n\n            if (roundedBottomLeft) {\n              style = getRTL() ? style.concat(styles.bottomRightCornerDate + ' ') : style.concat(styles.bottomLeftCornerDate + ' ');\n            }\n\n            if (roundedBottomRight) {\n              style = getRTL() ? style.concat(styles.bottomLeftCornerDate + ' ') : style.concat(styles.bottomRightCornerDate + ' ');\n            }\n\n            if (!above) {\n              style = style.concat(styles.topDate + ' ');\n            }\n\n            if (!below) {\n              style = style.concat(styles.bottomDate + ' ');\n            }\n\n            if (!right) {\n              style = style.concat(styles.rightDate + ' ');\n            }\n\n            if (!left) {\n              style = style.concat(styles.leftdate + ' ');\n            }\n\n            weekCornersStyled[weekIndex + '_' + dayIndex] = style;\n          });\n        });\n        break;\n\n      case DateRangeType.Week:\n      case DateRangeType.WorkWeek:\n        weeks.forEach(function (week, weekIndex) {\n          var minIndex = findIndex(week, function (item) {\n            return item.isInBounds;\n          });\n\n          var maxIndex = _this._findLastIndex(week, function (item) {\n            return item.isInBounds;\n          });\n\n          var leftStyle = styles.topLeftCornerDate + ' ' + styles.bottomLeftCornerDate;\n          var rightStyle = styles.topRightCornerDate + ' ' + styles.bottomRightCornerDate;\n          weekCornersStyled[weekIndex + '_' + minIndex] = getRTL() ? rightStyle : leftStyle;\n          weekCornersStyled[weekIndex + '_' + maxIndex] = getRTL() ? leftStyle : rightStyle;\n        });\n        break;\n    }\n\n    return weekCornersStyled;\n  };\n\n  CalendarDay.prototype._getHighlightedCornerStyle = function (weekCorners, dayIndex, weekIndex) {\n    var cornerStyle = weekCorners[weekIndex + '_' + dayIndex] ? weekCorners[weekIndex + '_' + dayIndex] : '';\n    return cornerStyle;\n  };\n\n  CalendarDay.prototype._navigateMonthEdge = function (ev, date, weekIndex, dayIndex) {\n    var _a = this.props,\n        minDate = _a.minDate,\n        maxDate = _a.maxDate;\n    var targetDate = undefined;\n\n    if (weekIndex === 0 && ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n    } else if (weekIndex === this.state.weeks.length - 1 && ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1);\n    } else if (dayIndex === 0 && ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n    } else if (dayIndex === DAYS_IN_WEEK - 1 && ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    } // Don't navigate to out-of-bounds date\n\n\n    if (targetDate && (minDate ? compareDatePart(minDate, targetDate) < 1 : true) && (maxDate ? compareDatePart(targetDate, maxDate) < 1 : true)) {\n      this.props.onNavigateDate(targetDate, true);\n      ev.preventDefault();\n    }\n  };\n\n  CalendarDay.prototype._applyFunctionToDayRefs = function (func) {\n    var _this = this;\n\n    if (this.state.weeks) {\n      this.state.weeks.forEach(function (week, weekIndex) {\n        week.forEach(function (day) {\n          var ref = _this.days[day.key];\n          func(ref, day, weekIndex);\n        });\n      });\n    }\n  };\n\n  CalendarDay.prototype._getWeeks = function (propsToUse) {\n    var navigatedDate = propsToUse.navigatedDate,\n        selectedDate = propsToUse.selectedDate,\n        dateRangeType = propsToUse.dateRangeType,\n        firstDayOfWeek = propsToUse.firstDayOfWeek,\n        today = propsToUse.today,\n        minDate = propsToUse.minDate,\n        maxDate = propsToUse.maxDate,\n        showSixWeeksByDefault = propsToUse.showSixWeeksByDefault,\n        workWeekDays = propsToUse.workWeekDays;\n    var date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), 1);\n    var todaysDate = today || new Date();\n    var weeks = []; // Cycle the date backwards to get to the first day of the week.\n\n    while (date.getDay() !== firstDayOfWeek) {\n      date.setDate(date.getDate() - 1);\n    } // a flag to indicate whether all days of the week are in the month\n\n\n    var isAllDaysOfWeekOutOfMonth = false; // in work week view we want to select the whole week\n\n    var selectedDateRangeType = dateRangeType === DateRangeType.WorkWeek ? DateRangeType.Week : dateRangeType;\n    var selectedDates = getDateRangeArray(selectedDate, selectedDateRangeType, firstDayOfWeek, workWeekDays);\n\n    if (dateRangeType !== DateRangeType.Day) {\n      selectedDates = this._getBoundedDateRange(selectedDates, minDate, maxDate);\n    }\n\n    var shouldGetWeeks = true;\n\n    for (var weekIndex = 0; shouldGetWeeks; weekIndex++) {\n      var week = [];\n      isAllDaysOfWeekOutOfMonth = true;\n\n      for (var dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\n        // Casting date parameter as an any to avoid [ object Object ] error.\n        var originalDate = new Date(date);\n        var dayInfo = {\n          key: date.toString(),\n          date: date.getDate().toString(),\n          originalDate: originalDate,\n          isInMonth: date.getMonth() === navigatedDate.getMonth(),\n          isToday: compareDates(todaysDate, date),\n          isSelected: isInDateRangeArray(date, selectedDates),\n          onSelected: this._onSelectDate.bind(this, originalDate),\n          isInBounds: (minDate ? compareDatePart(minDate, date) < 1 : true) && (maxDate ? compareDatePart(date, maxDate) < 1 : true) && !this._getIsRestrictedDate(date)\n        };\n        week.push(dayInfo);\n\n        if (dayInfo.isInMonth) {\n          isAllDaysOfWeekOutOfMonth = false;\n        }\n\n        date.setDate(date.getDate() + 1);\n      } // We append the condition of the loop depending upon the showSixWeeksByDefault prop.\n\n\n      shouldGetWeeks = showSixWeeksByDefault ? !isAllDaysOfWeekOutOfMonth || weekIndex <= 5 : !isAllDaysOfWeekOutOfMonth;\n\n      if (shouldGetWeeks) {\n        weeks.push(week);\n      }\n    }\n\n    return weeks;\n  };\n\n  CalendarDay.prototype._getIsRestrictedDate = function (date) {\n    var restrictedDates = this.props.restrictedDates;\n\n    if (!restrictedDates) {\n      return false;\n    }\n\n    var restrictedDate = find(restrictedDates, function (rd) {\n      return compareDates(rd, date);\n    });\n    return restrictedDate ? true : false;\n  };\n\n  CalendarDay.prototype._getBoundedDateRange = function (dateRange, minDate, maxDate) {\n    var boundedDateRange = __spreadArrays(dateRange);\n\n    if (minDate) {\n      boundedDateRange = boundedDateRange.filter(function (date) {\n        return compareDatePart(date, minDate) >= 0;\n      });\n    }\n\n    if (maxDate) {\n      boundedDateRange = boundedDateRange.filter(function (date) {\n        return compareDatePart(date, maxDate) <= 0;\n      });\n    }\n\n    return boundedDateRange;\n  };\n  /**\n   * Returns the index of the last element in the array where the predicate is true, and -1\n   * otherwise\n   * @param items Array of items to be iterated over using the predicate\n   * @param predicate find calls predicate once for each element of the array, in descending\n   * order, until it finds one where predicate returns true if such an element is found.\n   */\n\n\n  CalendarDay.prototype._findLastIndex = function (items, predicate) {\n    for (var i = items.length - 1; i >= 0; i--) {\n      var item = items[i];\n\n      if (predicate(item)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  return CalendarDay;\n}(React.Component);\n\nexport { CalendarDay };","map":{"version":3,"sources":["components/Calendar/CalendarDay.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  css,\n  getId,\n  getRTL,\n  getRTLSafeKeyCode,\n  format,\n  IRefObject,\n  findIndex,\n  find,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { ICalendarStrings, ICalendarIconStrings, ICalendarFormatDateCallbacks } from './Calendar.types';\nimport { DayOfWeek, FirstWeekOfYear, DateRangeType } from '../../utilities/dateValues/DateValues';\nimport { FocusZone } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport {\n  addDays,\n  addWeeks,\n  addMonths,\n  compareDates,\n  compareDatePart,\n  getDateRangeArray,\n  isInDateRangeArray,\n  getWeekNumber,\n  getWeekNumbersInMonth,\n  getMonthStart,\n  getMonthEnd,\n} from '../../utilities/dateMath/DateMath';\n\nimport * as stylesImport from './Calendar.scss';\n\nconst styles: any = stylesImport;\n\nconst DAYS_IN_WEEK = 7;\n\nexport interface IDayInfo {\n  key: string;\n  date: string;\n  originalDate: Date;\n  isInMonth: boolean;\n  isToday: boolean;\n  isSelected: boolean;\n  isInBounds: boolean;\n  onSelected: (ev: React.SyntheticEvent<HTMLElement>) => void;\n}\n\nexport interface ICalendarDay {\n  focus(): void;\n}\n\nexport interface ICalendarDayProps extends React.ClassAttributes<CalendarDay> {\n  componentRef?: IRefObject<ICalendarDay>;\n  strings: ICalendarStrings;\n  selectedDate: Date;\n  navigatedDate: Date;\n  onSelectDate: (date: Date, selectedDateRangeArray?: Date[]) => void;\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\n  onDismiss?: () => void;\n  firstDayOfWeek: DayOfWeek;\n  dateRangeType: DateRangeType;\n  autoNavigateOnSelection: boolean;\n  navigationIcons: ICalendarIconStrings;\n  today?: Date;\n  onHeaderSelect?: (focus: boolean) => void;\n  showWeekNumbers?: boolean;\n  firstWeekOfYear: FirstWeekOfYear;\n  dateTimeFormatter: ICalendarFormatDateCallbacks;\n  showSixWeeksByDefault?: boolean;\n  minDate?: Date;\n  maxDate?: Date;\n  restrictedDates?: Date[];\n  workWeekDays?: DayOfWeek[];\n  showCloseButton?: boolean;\n  allFocusable?: boolean;\n}\n\nexport interface ICalendarDayState {\n  activeDescendantId?: string;\n  weeks?: IDayInfo[][];\n}\n\ninterface IWeekCorners {\n  [key: string]: string;\n}\n\nexport class CalendarDay extends React.Component<ICalendarDayProps, ICalendarDayState> {\n  private navigatedDay: HTMLElement | null;\n  private days: { [key: string]: HTMLElement | null } = {};\n\n  public constructor(props: ICalendarDayProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    this.state = {\n      activeDescendantId: getId('DatePickerDay-active'),\n      weeks: this._getWeeks(props),\n    };\n\n    this._onSelectNextMonth = this._onSelectNextMonth.bind(this);\n    this._onSelectPrevMonth = this._onSelectPrevMonth.bind(this);\n    this._onClose = this._onClose.bind(this);\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: ICalendarDayProps): void {\n    this.setState({\n      weeks: this._getWeeks(nextProps),\n    });\n  }\n\n  public render(): JSX.Element {\n    const { activeDescendantId, weeks } = this.state;\n    const {\n      firstDayOfWeek,\n      strings,\n      navigatedDate,\n      selectedDate,\n      dateRangeType,\n      navigationIcons,\n      showWeekNumbers,\n      firstWeekOfYear,\n      dateTimeFormatter,\n      minDate,\n      maxDate,\n      showCloseButton,\n      allFocusable,\n    } = this.props;\n    const dayPickerId = getId('DatePickerDay-dayPicker');\n    const monthAndYearId = getId('DatePickerDay-monthAndYear');\n    const leftNavigationIcon = navigationIcons.leftNavigation;\n    const rightNavigationIcon = navigationIcons.rightNavigation;\n    const closeNavigationIcon = navigationIcons.closeIcon;\n    const weekNumbers = showWeekNumbers\n      ? getWeekNumbersInMonth(weeks!.length, firstDayOfWeek, firstWeekOfYear, navigatedDate)\n      : null;\n    const selectedDateWeekNumber = showWeekNumbers\n      ? getWeekNumber(selectedDate, firstDayOfWeek, firstWeekOfYear)\n      : undefined;\n\n    // When the month is highlighted get the corner dates so that styles can be added to them\n    const weekCorners: IWeekCorners = this._getWeekCornerStyles(weeks!, dateRangeType);\n\n    // determine if previous/next months are in bounds\n    const prevMonthInBounds = minDate ? compareDatePart(minDate, getMonthStart(navigatedDate)) < 0 : true;\n    const nextMonthInBounds = maxDate ? compareDatePart(getMonthEnd(navigatedDate), maxDate) < 0 : true;\n\n    return (\n      <div\n        className={css(\n          'ms-DatePicker-dayPicker',\n          styles.dayPicker,\n          showWeekNumbers &&\n            'ms-DatePicker-showWeekNumbers' &&\n            (getRTL() ? styles.showWeekNumbersRTL : styles.showWeekNumbers),\n        )}\n        id={dayPickerId}\n      >\n        <div className={css('ms-DatePicker-header', styles.header)}>\n          <div\n            aria-live=\"polite\"\n            aria-relevant=\"text\"\n            aria-atomic=\"true\"\n            id={monthAndYearId}\n            className={styles.monthAndYear}\n          >\n            {this.props.onHeaderSelect ? (\n              <div\n                className={css('ms-DatePicker-monthAndYear js-showMonthPicker', styles.headerToggleView)}\n                onClick={this._onHeaderSelect}\n                onKeyDown={this._onHeaderKeyDown}\n                aria-label={dateTimeFormatter.formatMonthYear(navigatedDate, strings)}\n                role=\"button\"\n                tabIndex={0}\n              >\n                {dateTimeFormatter.formatMonthYear(navigatedDate, strings)}\n              </div>\n            ) : (\n              <div className={css('ms-DatePicker-monthAndYear', styles.monthAndYear)}>\n                {dateTimeFormatter.formatMonthYear(navigatedDate, strings)}\n              </div>\n            )}\n          </div>\n          <div className={css('ms-DatePicker-monthComponents', styles.monthComponents)}>\n            <div className={css('ms-DatePicker-navContainer', styles.navContainer)}>\n              <button\n                className={css('ms-DatePicker-prevMonth js-prevMonth', styles.prevMonth, {\n                  ['ms-DatePicker-prevMonth--disabled ' + styles.prevMonthIsDisabled]: !prevMonthInBounds,\n                })}\n                disabled={!allFocusable && !prevMonthInBounds}\n                aria-disabled={!prevMonthInBounds}\n                onClick={prevMonthInBounds ? this._onSelectPrevMonth : undefined}\n                onKeyDown={prevMonthInBounds ? this._onPrevMonthKeyDown : undefined}\n                aria-controls={dayPickerId}\n                title={\n                  strings.prevMonthAriaLabel\n                    ? strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, -1).getMonth()]\n                    : undefined\n                }\n                role=\"button\"\n                type=\"button\"\n              >\n                <Icon iconName={leftNavigationIcon} />\n              </button>\n              <button\n                className={css('ms-DatePicker-nextMonth js-nextMonth', styles.nextMonth, {\n                  ['ms-DatePicker-nextMonth--disabled ' + styles.nextMonthIsDisabled]: !nextMonthInBounds,\n                })}\n                disabled={!allFocusable && !nextMonthInBounds}\n                aria-disabled={!nextMonthInBounds}\n                onClick={nextMonthInBounds ? this._onSelectNextMonth : undefined}\n                onKeyDown={nextMonthInBounds ? this._onNextMonthKeyDown : undefined}\n                aria-controls={dayPickerId}\n                title={\n                  strings.nextMonthAriaLabel\n                    ? strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, 1).getMonth()]\n                    : undefined\n                }\n                role=\"button\"\n                type=\"button\"\n              >\n                <Icon iconName={rightNavigationIcon} />\n              </button>\n              {showCloseButton && (\n                <button\n                  className={css('ms-DatePicker-closeButton js-closeButton', styles.closeButton)}\n                  onClick={this._onClose}\n                  onKeyDown={this._onCloseButtonKeyDown}\n                  title={strings.closeButtonAriaLabel}\n                  role=\"button\"\n                  type=\"button\"\n                >\n                  <Icon iconName={closeNavigationIcon} />\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n        <FocusZone>\n          <table\n            className={css('ms-DatePicker-table', styles.table)}\n            aria-readonly=\"true\"\n            aria-multiselectable=\"false\"\n            aria-labelledby={monthAndYearId}\n            aria-activedescendant={activeDescendantId}\n            role=\"grid\"\n          >\n            <thead>\n              <tr>\n                {showWeekNumbers && <th className={css('ms-DatePicker-weekday', styles.weekday)} />}\n                {strings.shortDays.map((val, index) => (\n                  <th\n                    className={css('ms-DatePicker-weekday', styles.weekday)}\n                    role=\"columnheader\"\n                    scope=\"col\"\n                    key={index}\n                    title={strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK]}\n                    aria-label={strings.days[(index + firstDayOfWeek) % DAYS_IN_WEEK]}\n                    data-is-focusable={allFocusable ? true : undefined}\n                  >\n                    {strings.shortDays[(index + firstDayOfWeek) % DAYS_IN_WEEK]}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody\n              onMouseLeave={dateRangeType !== DateRangeType.Day ? this._onTableMouseLeave : undefined}\n              onMouseUp={dateRangeType !== DateRangeType.Day ? this._onTableMouseUp : undefined}\n            >\n              {weeks!.map((week, weekIndex) => (\n                <tr key={weekNumbers ? weekNumbers[weekIndex] : weekIndex}>\n                  {showWeekNumbers && weekNumbers && (\n                    <th\n                      className={css(\n                        'ms-DatePicker-weekNumbers',\n                        'ms-DatePicker-weekday',\n                        styles.weekday,\n                        styles.weekNumbers,\n                      )}\n                      key={weekIndex}\n                      title={\n                        weekNumbers &&\n                        strings.weekNumberFormatString &&\n                        format(strings.weekNumberFormatString, weekNumbers[weekIndex])\n                      }\n                      aria-label={\n                        weekNumbers &&\n                        strings.weekNumberFormatString &&\n                        format(strings.weekNumberFormatString, weekNumbers[weekIndex])\n                      }\n                      scope=\"row\"\n                    >\n                      <div\n                        className={css('ms-DatePicker-day', styles.day, {\n                          ['ms-DatePicker-week--highlighted ' + styles.weekIsHighlighted]:\n                            selectedDateWeekNumber === weekNumbers[weekIndex],\n                        })}\n                      >\n                        <span>{weekNumbers[weekIndex]}</span>\n                      </div>\n                    </th>\n                  )}\n                  {week.map((day, dayIndex) => {\n                    const isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n                    return (\n                      <td\n                        key={day.key}\n                        onClick={day.isInBounds ? day.onSelected : undefined}\n                        className={css(\n                          styles.dayWrapper,\n                          'ms-DatePicker-day',\n                          this._getHighlightedCornerStyle(weekCorners, dayIndex, weekIndex),\n                          {\n                            ['ms-DatePicker-weekBackground ' + styles.weekBackground]:\n                              day.isSelected &&\n                              (dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek),\n                            ['ms-DatePicker-dayBackground ' + styles.dayBackground]:\n                              dateRangeType === DateRangeType.Day,\n                            ['ms-DatePicker-day--highlighted ' + styles.dayIsHighlighted]:\n                              day.isSelected && dateRangeType === DateRangeType.Day,\n                            ['ms-DatePicker-day--infocus ' + styles.dayIsFocused]: day.isInBounds && day.isInMonth,\n                            ['ms-DatePicker-day--outfocus ' + styles.dayIsUnfocused]: day.isInBounds && !day.isInMonth,\n                            [styles.daySelection]: dateRangeType === DateRangeType.Day,\n                            [styles.weekSelection]:\n                              dateRangeType === DateRangeType.Week || dateRangeType === DateRangeType.WorkWeek,\n                            [styles.monthSelection]: dateRangeType === DateRangeType.Month,\n                          },\n                        )}\n                        ref={element => this._setDayCellRef(element, day, isNavigatedDate)}\n                        onMouseOver={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseOver(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        onMouseLeave={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseLeave(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        onMouseDown={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseDown(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        onMouseUp={\n                          dateRangeType !== DateRangeType.Day && day.isInBounds\n                            ? this._onDayMouseUp(day.originalDate, weekIndex, dayIndex, dateRangeType)\n                            : undefined\n                        }\n                        role={'gridcell'}\n                      >\n                        <button\n                          key={day.key + 'button'}\n                          onClick={day.isInBounds ? day.onSelected : undefined}\n                          className={css(styles.day, 'ms-DatePicker-day-button', {\n                            ['ms-DatePicker-day--disabled ' + styles.dayIsDisabled]: !day.isInBounds,\n                            ['ms-DatePicker-day--today ' + styles.dayIsToday]: day.isToday,\n                          })}\n                          onKeyDown={this._onDayKeyDown(day.originalDate, weekIndex, dayIndex)}\n                          aria-label={dateTimeFormatter.formatMonthDayYear(day.originalDate, strings)}\n                          id={isNavigatedDate ? activeDescendantId : undefined}\n                          aria-readonly={true}\n                          aria-current={day.isToday ? 'date' : undefined}\n                          aria-selected={day.isInBounds ? day.isSelected : undefined}\n                          data-is-focusable={allFocusable || (day.isInBounds ? true : undefined)}\n                          ref={element => this._setDayRef(element, day, isNavigatedDate)}\n                          disabled={!allFocusable && !day.isInBounds}\n                          aria-disabled={!day.isInBounds}\n                          type=\"button\"\n                        >\n                          <span aria-hidden=\"true\">{dateTimeFormatter.formatDay(day.originalDate)}</span>\n                        </button>\n                      </td>\n                    );\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </FocusZone>\n      </div>\n    );\n  }\n\n  public focus() {\n    if (this.navigatedDay) {\n      this.navigatedDay.tabIndex = 0;\n      this.navigatedDay.focus();\n    }\n  }\n\n  private _setDayRef(element: HTMLElement | null, day: IDayInfo, isNavigatedDate: boolean): void {\n    if (isNavigatedDate) {\n      this.navigatedDay = element;\n    }\n  }\n\n  private _setDayCellRef(element: HTMLElement | null, day: IDayInfo, isNavigatedDate: boolean): void {\n    this.days[day.key] = element;\n  }\n\n  private _getWeekCornerStyles(weeks: IDayInfo[][], dateRangeType: DateRangeType): IWeekCorners {\n    const weekCornersStyled: any = {};\n\n    switch (dateRangeType) {\n      case DateRangeType.Month:\n        /* need to handle setting all of the corners on arbitrarily shaped blobs\n              __\n           __|A |\n          |B |C |__\n          |D |E |F |\n\n          in this case, A needs top left rounded, top right rounded\n          B needs top left rounded\n          C doesn't need any rounding\n          D needs bottom left rounded\n          E doesn't need any rounding\n          F needs top right rounding\n        */\n\n        // if there's an item above, lose both top corners. Item below, lose both bottom corners, etc.\n        weeks.forEach((week: IDayInfo[], weekIndex: number) => {\n          week.forEach((day: IDayInfo, dayIndex: number) => {\n            const above =\n              weeks[weekIndex - 1] &&\n              weeks[weekIndex - 1][dayIndex] &&\n              weeks[weekIndex - 1][dayIndex].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n            const below =\n              weeks[weekIndex + 1] &&\n              weeks[weekIndex + 1][dayIndex] &&\n              weeks[weekIndex + 1][dayIndex].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n            const left =\n              weeks[weekIndex][dayIndex - 1] &&\n              weeks[weekIndex][dayIndex - 1].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n            const right =\n              weeks[weekIndex][dayIndex + 1] &&\n              weeks[weekIndex][dayIndex + 1].originalDate.getMonth() ===\n                weeks[weekIndex][dayIndex].originalDate.getMonth();\n\n            const roundedTopLeft = !above && !left;\n            const roundedTopRight = !above && !right;\n            const roundedBottomLeft = !below && !left;\n            const roundedBottomRight = !below && !right;\n\n            let style = '';\n            if (roundedTopLeft) {\n              style = getRTL()\n                ? style.concat(styles.topRightCornerDate + ' ')\n                : style.concat(styles.topLeftCornerDate + ' ');\n            }\n            if (roundedTopRight) {\n              style = getRTL()\n                ? style.concat(styles.topLeftCornerDate + ' ')\n                : style.concat(styles.topRightCornerDate + ' ');\n            }\n            if (roundedBottomLeft) {\n              style = getRTL()\n                ? style.concat(styles.bottomRightCornerDate + ' ')\n                : style.concat(styles.bottomLeftCornerDate + ' ');\n            }\n            if (roundedBottomRight) {\n              style = getRTL()\n                ? style.concat(styles.bottomLeftCornerDate + ' ')\n                : style.concat(styles.bottomRightCornerDate + ' ');\n            }\n\n            if (!above) {\n              style = style.concat(styles.topDate + ' ');\n            }\n\n            if (!below) {\n              style = style.concat(styles.bottomDate + ' ');\n            }\n\n            if (!right) {\n              style = style.concat(styles.rightDate + ' ');\n            }\n\n            if (!left) {\n              style = style.concat(styles.leftdate + ' ');\n            }\n\n            weekCornersStyled[weekIndex + '_' + dayIndex] = style;\n          });\n        });\n        break;\n      case DateRangeType.Week:\n      case DateRangeType.WorkWeek:\n        weeks.forEach((week: IDayInfo[], weekIndex: number) => {\n          const minIndex = findIndex(week, (item: IDayInfo) => {\n            return item.isInBounds;\n          });\n          const maxIndex = this._findLastIndex(week, (item: IDayInfo) => {\n            return item.isInBounds;\n          });\n\n          const leftStyle = styles.topLeftCornerDate + ' ' + styles.bottomLeftCornerDate;\n          const rightStyle = styles.topRightCornerDate + ' ' + styles.bottomRightCornerDate;\n          weekCornersStyled[weekIndex + '_' + minIndex] = getRTL() ? rightStyle : leftStyle;\n          weekCornersStyled[weekIndex + '_' + maxIndex] = getRTL() ? leftStyle : rightStyle;\n        });\n        break;\n    }\n\n    return weekCornersStyled;\n  }\n\n  private _getHighlightedCornerStyle(weekCorners: IWeekCorners, dayIndex: number, weekIndex: number): string {\n    const cornerStyle = weekCorners[weekIndex + '_' + dayIndex] ? weekCorners[weekIndex + '_' + dayIndex] : '';\n    return cornerStyle;\n  }\n\n  private _navigateMonthEdge(\n    ev: React.KeyboardEvent<HTMLElement>,\n    date: Date,\n    weekIndex: number,\n    dayIndex: number,\n  ): void {\n    const { minDate, maxDate } = this.props;\n    let targetDate: Date | undefined = undefined;\n\n    if (weekIndex === 0 && ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n    } else if (weekIndex === this.state.weeks!.length - 1 && ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1);\n    } else if (dayIndex === 0 && ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n    } else if (dayIndex === DAYS_IN_WEEK - 1 && ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n\n    // Don't navigate to out-of-bounds date\n    if (\n      targetDate &&\n      (minDate ? compareDatePart(minDate, targetDate) < 1 : true) &&\n      (maxDate ? compareDatePart(targetDate, maxDate) < 1 : true)\n    ) {\n      this.props.onNavigateDate(targetDate, true);\n      ev.preventDefault();\n    }\n  }\n\n  private _onKeyDown = (callback: () => void, ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      callback();\n    }\n  };\n\n  private _onDayKeyDown = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n  ): ((ev: React.KeyboardEvent<HTMLElement>) => void) => {\n    return (ev: React.KeyboardEvent<HTMLElement>): void => {\n      if (ev.which === KeyCodes.enter) {\n        this._onSelectDate(originalDate, ev);\n        ev.preventDefault();\n      } else {\n        this._navigateMonthEdge(ev, originalDate, weekIndex, dayIndex);\n      }\n    };\n  };\n\n  private _onDayMouseDown = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // set the press styling\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.add(styles.dayPress);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.add(styles.dayPress);\n            ref.classList.add(styles.dayIsHighlighted);\n          } else if (ref) {\n            ref.classList.remove(styles.dayIsHighlighted);\n          }\n        });\n      }\n    };\n  };\n\n  private _onDayMouseUp = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // remove press styling\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.remove(styles.dayPress);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.remove(styles.dayPress);\n          }\n        });\n      }\n    };\n  };\n\n  private _onDayMouseOver = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // set the hover styling on every day in the same month\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.add(styles.dayHover);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.add(styles.dayHover);\n          }\n        });\n      }\n    };\n  };\n\n  private _onDayMouseLeave = (\n    originalDate: Date,\n    weekIndex: number,\n    dayIndex: number,\n    dateRangeType: DateRangeType,\n  ): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      // remove the hover and pressed styling\n      if (dateRangeType === DateRangeType.Month) {\n        this._applyFunctionToDayRefs((ref, day) => {\n          if (ref && day.originalDate.getMonth() === originalDate.getMonth() && day.isInBounds) {\n            ref.classList.remove(styles.dayHover);\n          }\n        });\n      } else {\n        // week or work week view\n        this._applyFunctionToDayRefs((ref, day, dayWeekIndex) => {\n          if (ref && dayWeekIndex === weekIndex && day.isInBounds) {\n            ref.classList.remove(styles.dayHover);\n          }\n        });\n      }\n    };\n  };\n\n  private _onTableMouseLeave = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (\n      (ev.target as HTMLElement).contains &&\n      ev.relatedTarget &&\n      (ev.relatedTarget as HTMLElement).contains &&\n      (ev.target as HTMLElement).contains(ev.relatedTarget as HTMLElement)\n    ) {\n      return;\n    }\n\n    this._applyFunctionToDayRefs((ref, day) => {\n      if (ref) {\n        ref.classList.remove(styles.dayHover);\n        ref.classList.remove(styles.dayPress);\n      }\n    });\n  };\n\n  private _onTableMouseUp = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (\n      (ev.target as HTMLElement).contains &&\n      ev.relatedTarget &&\n      (ev.relatedTarget as HTMLElement).contains &&\n      (ev.target as HTMLElement).contains(ev.relatedTarget as HTMLElement)\n    ) {\n      return;\n    }\n\n    this._applyFunctionToDayRefs((ref, day) => {\n      if (ref) {\n        ref.classList.remove(styles.dayPress);\n      }\n    });\n  };\n\n  private _applyFunctionToDayRefs(func: (ref: HTMLElement | null, day: IDayInfo, weekIndex?: number) => void) {\n    if (this.state.weeks) {\n      this.state.weeks.forEach((week: IDayInfo[], weekIndex: number) => {\n        week.forEach(day => {\n          const ref = this.days[day.key];\n          func(ref, day, weekIndex);\n        });\n      });\n    }\n  }\n\n  private _onSelectDate = (selectedDate: Date, ev: React.SyntheticEvent<HTMLElement>): void => {\n    const {\n      onSelectDate,\n      dateRangeType,\n      firstDayOfWeek,\n      navigatedDate,\n      autoNavigateOnSelection,\n      minDate,\n      maxDate,\n      workWeekDays,\n    } = this.props;\n\n    if (ev) {\n      ev.stopPropagation();\n    }\n\n    let dateRange = getDateRangeArray(selectedDate, dateRangeType, firstDayOfWeek, workWeekDays);\n    if (dateRangeType !== DateRangeType.Day) {\n      dateRange = this._getBoundedDateRange(dateRange, minDate, maxDate);\n    }\n    dateRange = dateRange.filter(d => {\n      return !this._getIsRestrictedDate(d);\n    });\n\n    if (onSelectDate) {\n      onSelectDate(selectedDate, dateRange);\n    }\n\n    // Navigate to next or previous month if needed\n    if (autoNavigateOnSelection && selectedDate.getMonth() !== navigatedDate.getMonth()) {\n      const compareResult = compareDatePart(selectedDate, navigatedDate);\n      if (compareResult < 0) {\n        this._onSelectPrevMonth();\n      } else if (compareResult > 0) {\n        this._onSelectNextMonth();\n      }\n    }\n  };\n\n  private _onSelectNextMonth = (): void => {\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, 1), false);\n  };\n\n  private _onSelectPrevMonth = (): void => {\n    this.props.onNavigateDate(addMonths(this.props.navigatedDate, -1), false);\n  };\n\n  private _onClose = (): void => {\n    if (this.props.onDismiss) {\n      this.props.onDismiss();\n    }\n  };\n\n  private _onHeaderSelect = (): void => {\n    const { onHeaderSelect } = this.props;\n    if (onHeaderSelect) {\n      onHeaderSelect(true);\n    }\n  };\n\n  private _onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { onHeaderSelect } = this.props;\n    if (onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      onHeaderSelect(true);\n    }\n  };\n\n  private _onPrevMonthKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onSelectPrevMonth, ev);\n    }\n  };\n\n  private _onNextMonthKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onSelectNextMonth, ev);\n    }\n  };\n\n  private _onCloseButtonKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onClose, ev);\n    }\n  };\n\n  private _getWeeks(propsToUse: ICalendarDayProps): IDayInfo[][] {\n    const {\n      navigatedDate,\n      selectedDate,\n      dateRangeType,\n      firstDayOfWeek,\n      today,\n      minDate,\n      maxDate,\n      showSixWeeksByDefault,\n      workWeekDays,\n    } = propsToUse;\n    const date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), 1);\n    const todaysDate = today || new Date();\n    const weeks: IDayInfo[][] = [];\n\n    // Cycle the date backwards to get to the first day of the week.\n    while (date.getDay() !== firstDayOfWeek) {\n      date.setDate(date.getDate() - 1);\n    }\n\n    // a flag to indicate whether all days of the week are in the month\n    let isAllDaysOfWeekOutOfMonth = false;\n\n    // in work week view we want to select the whole week\n    const selectedDateRangeType = dateRangeType === DateRangeType.WorkWeek ? DateRangeType.Week : dateRangeType;\n    let selectedDates = getDateRangeArray(selectedDate, selectedDateRangeType, firstDayOfWeek, workWeekDays);\n    if (dateRangeType !== DateRangeType.Day) {\n      selectedDates = this._getBoundedDateRange(selectedDates, minDate, maxDate);\n    }\n\n    let shouldGetWeeks = true;\n\n    for (let weekIndex = 0; shouldGetWeeks; weekIndex++) {\n      const week: IDayInfo[] = [];\n\n      isAllDaysOfWeekOutOfMonth = true;\n\n      for (let dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\n        // Casting date parameter as an any to avoid [ object Object ] error.\n        const originalDate = new Date(date as any);\n        const dayInfo: IDayInfo = {\n          key: date.toString(),\n          date: date.getDate().toString(),\n          originalDate: originalDate,\n          isInMonth: date.getMonth() === navigatedDate.getMonth(),\n          isToday: compareDates(todaysDate, date),\n          isSelected: isInDateRangeArray(date, selectedDates),\n          onSelected: this._onSelectDate.bind(this, originalDate),\n          isInBounds:\n            (minDate ? compareDatePart(minDate, date) < 1 : true) &&\n            (maxDate ? compareDatePart(date, maxDate) < 1 : true) &&\n            !this._getIsRestrictedDate(date),\n        };\n\n        week.push(dayInfo);\n\n        if (dayInfo.isInMonth) {\n          isAllDaysOfWeekOutOfMonth = false;\n        }\n\n        date.setDate(date.getDate() + 1);\n      }\n\n      // We append the condition of the loop depending upon the showSixWeeksByDefault prop.\n      shouldGetWeeks = showSixWeeksByDefault\n        ? !isAllDaysOfWeekOutOfMonth || weekIndex <= 5\n        : !isAllDaysOfWeekOutOfMonth;\n      if (shouldGetWeeks) {\n        weeks.push(week);\n      }\n    }\n\n    return weeks;\n  }\n\n  private _getIsRestrictedDate(date: Date): boolean {\n    const { restrictedDates } = this.props;\n    if (!restrictedDates) {\n      return false;\n    }\n    const restrictedDate = find(restrictedDates, rd => {\n      return compareDates(rd, date);\n    });\n    return restrictedDate ? true : false;\n  }\n\n  private _getBoundedDateRange(dateRange: Date[], minDate?: Date, maxDate?: Date): Date[] {\n    let boundedDateRange = [...dateRange];\n    if (minDate) {\n      boundedDateRange = boundedDateRange.filter(date => compareDatePart(date, minDate as Date) >= 0);\n    }\n    if (maxDate) {\n      boundedDateRange = boundedDateRange.filter(date => compareDatePart(date, maxDate as Date) <= 0);\n    }\n    return boundedDateRange;\n  }\n\n  /**\n   * Returns the index of the last element in the array where the predicate is true, and -1\n   * otherwise\n   * @param items Array of items to be iterated over using the predicate\n   * @param predicate find calls predicate once for each element of the array, in descending\n   * order, until it finds one where predicate returns true if such an element is found.\n   */\n  private _findLastIndex<T>(items: T[], predicate: (item: T) => boolean): number {\n    for (let i = items.length - 1; i >= 0; i--) {\n      const item = items[i];\n\n      if (predicate(item)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}