{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, keyframes, noWrap, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { getRTL, memoizeFunction } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-ProgressIndicator',\n  itemName: 'ms-ProgressIndicator-itemName',\n  itemDescription: 'ms-ProgressIndicator-itemDescription',\n  itemProgress: 'ms-ProgressIndicator-itemProgress',\n  progressTrack: 'ms-ProgressIndicator-progressTrack',\n  progressBar: 'ms-ProgressIndicator-progressBar'\n};\nvar IndeterminateProgress = memoizeFunction(function () {\n  return keyframes({\n    '0%': {\n      left: '-30%'\n    },\n    '100%': {\n      left: '100%'\n    }\n  });\n});\nvar IndeterminateProgressRTL = memoizeFunction(function () {\n  return keyframes({\n    '100%': {\n      right: '-30%'\n    },\n    '0%': {\n      right: '100%'\n    }\n  });\n});\nexport var getStyles = function (props) {\n  var _a, _b, _c;\n\n  var isRTL = getRTL(props.theme);\n  var className = props.className,\n      indeterminate = props.indeterminate,\n      theme = props.theme,\n      _d = props.barHeight,\n      barHeight = _d === void 0 ? 2 : _d;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var marginBetweenText = 8;\n  var textHeight = 18;\n  var progressTrackColor = palette.neutralLight;\n  return {\n    root: [classNames.root, fonts.medium, className],\n    itemName: [classNames.itemName, noWrap, {\n      color: semanticColors.bodyText,\n      paddingTop: marginBetweenText / 2,\n      lineHeight: textHeight + 2\n    }],\n    itemDescription: [classNames.itemDescription, {\n      color: semanticColors.bodySubtext,\n      fontSize: fonts.small.fontSize,\n      lineHeight: textHeight\n    }],\n    itemProgress: [classNames.itemProgress, {\n      position: 'relative',\n      overflow: 'hidden',\n      height: barHeight,\n      padding: marginBetweenText + \"px 0\"\n    }],\n    progressTrack: [classNames.progressTrack, {\n      position: 'absolute',\n      width: '100%',\n      height: barHeight,\n      backgroundColor: progressTrackColor,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderBottom: '1px solid WindowText'\n      }, _a)\n    }],\n    progressBar: [{\n      backgroundColor: palette.themePrimary,\n      height: barHeight,\n      position: 'absolute',\n      transition: 'width .3s ease',\n      width: 0,\n      selectors: (_b = {}, _b[HighContrastSelector] = __assign({\n        backgroundColor: 'highlight'\n      }, getHighContrastNoAdjustStyle()), _b)\n    }, indeterminate ? {\n      position: 'absolute',\n      minWidth: '33%',\n      background: \"linear-gradient(to right, \" + progressTrackColor + \" 0%, \" + (palette.themePrimary + \" 50%, \" + progressTrackColor + \" 100%)\"),\n      animation: (isRTL ? IndeterminateProgressRTL() : IndeterminateProgress()) + \" 3s infinite\",\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        background: \"highlight\"\n      }, _c)\n    } : {\n      transition: 'width .15s linear'\n    }, classNames.progressBar]\n  };\n};","map":{"version":3,"sources":["components/ProgressIndicator/ProgressIndicator.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  HighContrastSelector,\n  keyframes,\n  noWrap,\n  getGlobalClassNames,\n  IRawStyle,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { getRTL, memoizeFunction } from '../../Utilities';\nimport { IProgressIndicatorStyleProps, IProgressIndicatorStyles } from './ProgressIndicator.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ProgressIndicator',\n  itemName: 'ms-ProgressIndicator-itemName',\n  itemDescription: 'ms-ProgressIndicator-itemDescription',\n  itemProgress: 'ms-ProgressIndicator-itemProgress',\n  progressTrack: 'ms-ProgressIndicator-progressTrack',\n  progressBar: 'ms-ProgressIndicator-progressBar',\n};\n\nconst IndeterminateProgress = memoizeFunction(() =>\n  keyframes({\n    '0%': {\n      left: '-30%',\n    },\n    '100%': {\n      left: '100%',\n    },\n  }),\n);\n\nconst IndeterminateProgressRTL = memoizeFunction(() =>\n  keyframes({\n    '100%': {\n      right: '-30%',\n    },\n    '0%': {\n      right: '100%',\n    },\n  }),\n);\n\nexport const getStyles = (props: IProgressIndicatorStyleProps): IProgressIndicatorStyles => {\n  const isRTL = getRTL(props.theme);\n  const { className, indeterminate, theme, barHeight = 2 } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const marginBetweenText = 8;\n  const textHeight = 18;\n  const progressTrackColor = palette.neutralLight;\n\n  return {\n    root: [classNames.root, fonts.medium, className],\n\n    itemName: [\n      classNames.itemName,\n      noWrap,\n      {\n        color: semanticColors.bodyText,\n        paddingTop: marginBetweenText / 2,\n        lineHeight: textHeight + 2,\n      },\n    ],\n\n    itemDescription: [\n      classNames.itemDescription,\n      {\n        color: semanticColors.bodySubtext,\n        fontSize: fonts.small.fontSize,\n        lineHeight: textHeight,\n      },\n    ],\n\n    itemProgress: [\n      classNames.itemProgress,\n      {\n        position: 'relative',\n        overflow: 'hidden',\n        height: barHeight,\n        padding: `${marginBetweenText}px 0`,\n      },\n    ],\n\n    progressTrack: [\n      classNames.progressTrack,\n      {\n        position: 'absolute',\n        width: '100%',\n        height: barHeight,\n        backgroundColor: progressTrackColor,\n\n        selectors: {\n          [HighContrastSelector]: {\n            borderBottom: '1px solid WindowText',\n          },\n        },\n      },\n    ],\n\n    progressBar: [\n      {\n        backgroundColor: palette.themePrimary,\n        height: barHeight,\n        position: 'absolute',\n        transition: 'width .3s ease',\n        width: 0,\n\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'highlight',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      indeterminate\n        ? ({\n            position: 'absolute',\n            minWidth: '33%',\n            background:\n              `linear-gradient(to right, ${progressTrackColor} 0%, ` +\n              `${palette.themePrimary} 50%, ${progressTrackColor} 100%)`,\n            animation: `${isRTL ? IndeterminateProgressRTL() : IndeterminateProgress()} 3s infinite`,\n            selectors: {\n              [HighContrastSelector]: {\n                background: `highlight`,\n              },\n            },\n          } as IRawStyle)\n        : ({\n            transition: 'width .15s linear',\n          } as IRawStyle),\n      classNames.progressBar,\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}