{"ast":null,"code":"import { getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-DetailsList',\n  compact: 'ms-DetailsList--Compact',\n  contentWrapper: 'ms-DetailsList-contentWrapper',\n  headerWrapper: 'ms-DetailsList-headerWrapper',\n  isFixed: 'is-fixed',\n  isHorizontalConstrained: 'is-horizontalConstrained',\n  listCell: 'ms-List-cell'\n};\nexport var getStyles = function (props) {\n  var _a, _b;\n\n  var theme = props.theme,\n      className = props.className,\n      isHorizontalConstrained = props.isHorizontalConstrained,\n      compact = props.compact,\n      isFixed = props.isFixed;\n  var semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.small, {\n      position: 'relative',\n      color: semanticColors.listText,\n      selectors: (_a = {}, _a[\"& .\" + classNames.listCell] = {\n        minHeight: 38,\n        wordBreak: 'break-word'\n      }, _a)\n    }, isFixed && classNames.isFixed, compact && [classNames.compact, {\n      selectors: (_b = {}, _b[\".\" + classNames.listCell] = {\n        minHeight: 32\n      }, _b)\n    }], isHorizontalConstrained && [classNames.isHorizontalConstrained, {\n      overflowX: 'auto',\n      overflowY: 'visible',\n      WebkitOverflowScrolling: 'touch'\n    }], className],\n    focusZone: [{\n      display: 'inline-block',\n      minWidth: '100%',\n      minHeight: 1\n    }],\n    headerWrapper: classNames.headerWrapper,\n    contentWrapper: classNames.contentWrapper\n  };\n};","map":{"version":3,"sources":["components/DetailsList/DetailsList.styles.ts"],"names":[],"mappings":"AACA,SAAS,mBAAT,QAAoC,eAApC;AAEA,IAAM,gBAAgB,GAAG;AACvB,EAAA,IAAI,EAAE,gBADiB;AAEvB,EAAA,OAAO,EAAE,yBAFc;AAGvB,EAAA,cAAc,EAAE,+BAHO;AAIvB,EAAA,aAAa,EAAE,8BAJQ;AAKvB,EAAA,OAAO,EAAE,UALc;AAMvB,EAAA,uBAAuB,EAAE,0BANF;AAOvB,EAAA,QAAQ,EAAE;AAPa,CAAzB;AAUA,OAAO,IAAM,SAAS,GAAG,UAAC,KAAD,EAA8B;;;AAC7C,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AAAA,MAAO,SAAA,GAAA,KAAA,CAAA,SAAP;AAAA,MAAkB,uBAAA,GAAA,KAAA,CAAA,uBAAlB;AAAA,MAA2C,OAAA,GAAA,KAAA,CAAA,OAA3C;AAAA,MAAoD,OAAA,GAAA,KAAA,CAAA,OAApD;AACA,MAAA,cAAA,GAAA,KAAA,CAAA,cAAA;AACR,MAAM,UAAU,GAAG,mBAAmB,CAAC,gBAAD,EAAmB,KAAnB,CAAtC;AAEA,SAAO;AACL,IAAA,IAAI,EAAE,CACJ,UAAU,CAAC,IADP,EAEJ,KAAK,CAAC,KAAN,CAAY,KAFR,EAGJ;AACE,MAAA,QAAQ,EAAE,UADZ;AAEE,MAAA,KAAK,EAAE,cAAc,CAAC,QAFxB;AAGE,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,QAAM,UAAU,CAAC,QAAlB,CAAA,GAA+B;AAC7B,QAAA,SAAS,EAAE,EADkB;AAE7B,QAAA,SAAS,EAAE;AAFkB,OADxB,EAKR,EALQ;AAHX,KAHI,EAcJ,OAAO,IAAI,UAAU,CAAC,OAdlB,EAgBJ,OAAO,IAAI,CACT,UAAU,CAAC,OADF,EAET;AACE,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,MAAI,UAAU,CAAC,QAAhB,CAAA,GAA6B;AAC3B,QAAA,SAAS,EAAE;AADgB,OADtB,EAIR,EAJQ;AADX,KAFS,CAhBP,EA2BJ,uBAAuB,IAAI,CACzB,UAAU,CAAC,uBADc,EAEzB;AACE,MAAA,SAAS,EAAE,MADb;AAEE,MAAA,SAAS,EAAE,SAFb;AAGE,MAAA,uBAAuB,EAAE;AAH3B,KAFyB,CA3BvB,EAoCJ,SApCI,CADD;AAwCL,IAAA,SAAS,EAAE,CACT;AACE,MAAA,OAAO,EAAE,cADX;AAEE,MAAA,QAAQ,EAAE,MAFZ;AAGE,MAAA,SAAS,EAAE;AAHb,KADS,CAxCN;AA+CL,IAAA,aAAa,EAAE,UAAU,CAAC,aA/CrB;AAgDL,IAAA,cAAc,EAAE,UAAU,CAAC;AAhDtB,GAAP;AAkDD,CAvDM","sourcesContent":["import { IDetailsListStyleProps, IDetailsListStyles } from './DetailsList.types';\nimport { getGlobalClassNames } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-DetailsList',\n  compact: 'ms-DetailsList--Compact',\n  contentWrapper: 'ms-DetailsList-contentWrapper',\n  headerWrapper: 'ms-DetailsList-headerWrapper',\n  isFixed: 'is-fixed',\n  isHorizontalConstrained: 'is-horizontalConstrained',\n  listCell: 'ms-List-cell',\n};\n\nexport const getStyles = (props: IDetailsListStyleProps): IDetailsListStyles => {\n  const { theme, className, isHorizontalConstrained, compact, isFixed } = props;\n  const { semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.small,\n      {\n        position: 'relative',\n        color: semanticColors.listText,\n        selectors: {\n          [`& .${classNames.listCell}`]: {\n            minHeight: 38,\n            wordBreak: 'break-word',\n          },\n        },\n      },\n\n      isFixed && classNames.isFixed,\n\n      compact && [\n        classNames.compact,\n        {\n          selectors: {\n            [`.${classNames.listCell}`]: {\n              minHeight: 32,\n            },\n          },\n        },\n      ],\n\n      isHorizontalConstrained && [\n        classNames.isHorizontalConstrained,\n        {\n          overflowX: 'auto',\n          overflowY: 'visible',\n          WebkitOverflowScrolling: 'touch',\n        },\n      ],\n\n      className,\n    ],\n\n    focusZone: [\n      {\n        display: 'inline-block',\n        minWidth: '100%',\n        minHeight: 1,\n      },\n    ],\n    headerWrapper: classNames.headerWrapper,\n    contentWrapper: classNames.contentWrapper,\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}