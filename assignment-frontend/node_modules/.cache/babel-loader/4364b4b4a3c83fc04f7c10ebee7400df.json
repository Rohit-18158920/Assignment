{"ast":null,"code":"import { mergeStyleSets, HighContrastSelector } from '../../Styling';\nexport var getStyles = function (props) {\n  var _a;\n\n  var theme = props.theme,\n      disabled = props.disabled,\n      visible = props.visible;\n  return {\n    container: [{\n      backgroundColor: theme.palette.neutralDark\n    }, disabled && {\n      opacity: 0.5,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'GrayText',\n        opacity: 1\n      }, _a)\n    }, !visible && {\n      visibility: 'hidden'\n    }],\n    root: [theme.fonts.medium, {\n      textAlign: 'center',\n      paddingLeft: '3px',\n      paddingRight: '3px',\n      backgroundColor: theme.palette.neutralDark,\n      color: theme.palette.neutralLight,\n      minWidth: '11px',\n      lineHeight: '17px',\n      height: '17px',\n      display: 'inline-block'\n    }, disabled && {\n      color: theme.palette.neutralTertiaryAlt\n    }]\n  };\n};\nexport var getCalloutStyles = function (props) {\n  return {\n    container: [],\n    root: [{\n      border: 'none',\n      boxShadow: 'none'\n    }],\n    beak: [],\n    beakCurtain: [],\n    calloutMain: [{\n      backgroundColor: 'transparent'\n    }]\n  };\n};\nexport var getCalloutOffsetStyles = function (offset) {\n  return function (props) {\n    return mergeStyleSets(getCalloutStyles(props), {\n      root: [{\n        // eslint-disable-next-line deprecation/deprecation\n        marginLeft: offset.left || offset.x,\n        // eslint-disable-next-line deprecation/deprecation\n        marginTop: offset.top || offset.y\n      }]\n    });\n  };\n};","map":{"version":3,"sources":["components/Keytip/Keytip.styles.ts"],"names":[],"mappings":"AAGA,SAAS,cAAT,EAAyB,oBAAzB,QAAqD,eAArD;AAEA,OAAO,IAAM,SAAS,GAAG,UAAC,KAAD,EAAyB;;;AACxC,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AAAA,MAAO,QAAA,GAAA,KAAA,CAAA,QAAP;AAAA,MAAiB,OAAA,GAAA,KAAA,CAAA,OAAjB;AACR,SAAO;AACL,IAAA,SAAS,EAAE,CACT;AACE,MAAA,eAAe,EAAE,KAAK,CAAC,OAAN,CAAc;AADjC,KADS,EAIT,QAAQ,IAAI;AACV,MAAA,OAAO,EAAE,GADC;AAEV,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,oBAAD,CAAA,GAAwB;AACtB,QAAA,KAAK,EAAE,UADe;AAEtB,QAAA,OAAO,EAAE;AAFa,OADjB,EAKR,EALQ;AAFC,KAJH,EAaT,CAAC,OAAD,IAAY;AACV,MAAA,UAAU,EAAE;AADF,KAbH,CADN;AAkBL,IAAA,IAAI,EAAE,CACJ,KAAK,CAAC,KAAN,CAAY,MADR,EAEJ;AACE,MAAA,SAAS,EAAE,QADb;AAEE,MAAA,WAAW,EAAE,KAFf;AAGE,MAAA,YAAY,EAAE,KAHhB;AAIE,MAAA,eAAe,EAAE,KAAK,CAAC,OAAN,CAAc,WAJjC;AAKE,MAAA,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,YALvB;AAME,MAAA,QAAQ,EAAE,MANZ;AAOE,MAAA,UAAU,EAAE,MAPd;AAQE,MAAA,MAAM,EAAE,MARV;AASE,MAAA,OAAO,EAAE;AATX,KAFI,EAaJ,QAAQ,IAAI;AACV,MAAA,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc;AADX,KAbR;AAlBD,GAAP;AAoCD,CAtCM;AAwCP,OAAO,IAAM,gBAAgB,GAAG,UAAC,KAAD,EAAiC;AAC/D,SAAO;AACL,IAAA,SAAS,EAAE,EADN;AAEL,IAAA,IAAI,EAAE,CACJ;AACE,MAAA,MAAM,EAAE,MADV;AAEE,MAAA,SAAS,EAAE;AAFb,KADI,CAFD;AAQL,IAAA,IAAI,EAAE,EARD;AASL,IAAA,WAAW,EAAE,EATR;AAUL,IAAA,WAAW,EAAE,CACX;AACE,MAAA,eAAe,EAAE;AADnB,KADW;AAVR,GAAP;AAgBD,CAjBM;AAmBP,OAAO,IAAM,sBAAsB,GAAG,UACpC,MADoC,EACvB;AAEb,SAAO,UAAC,KAAD,EAAiC;AACtC,WAAO,cAAc,CAAC,gBAAgB,CAAC,KAAD,CAAjB,EAA0B;AAC7C,MAAA,IAAI,EAAE,CACJ;AACE;AACA,QAAA,UAAU,EAAE,MAAM,CAAC,IAAP,IAAe,MAAM,CAAC,CAFpC;AAGE;AACA,QAAA,SAAS,EAAE,MAAM,CAAC,GAAP,IAAc,MAAM,CAAC;AAJlC,OADI;AADuC,KAA1B,CAArB;AAUD,GAXD;AAYD,CAfM","sourcesContent":["import { IKeytipStyleProps, IKeytipStyles } from './Keytip.types';\nimport { ICalloutContentStyleProps, ICalloutContentStyles } from '../../Callout';\nimport { IStyleFunction, Point } from '../../Utilities';\nimport { mergeStyleSets, HighContrastSelector } from '../../Styling';\n\nexport const getStyles = (props: IKeytipStyleProps): IKeytipStyles => {\n  const { theme, disabled, visible } = props;\n  return {\n    container: [\n      {\n        backgroundColor: theme.palette.neutralDark,\n      },\n      disabled && {\n        opacity: 0.5,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            opacity: 1,\n          },\n        },\n      },\n      !visible && {\n        visibility: 'hidden',\n      },\n    ],\n    root: [\n      theme.fonts.medium,\n      {\n        textAlign: 'center',\n        paddingLeft: '3px',\n        paddingRight: '3px',\n        backgroundColor: theme.palette.neutralDark,\n        color: theme.palette.neutralLight,\n        minWidth: '11px',\n        lineHeight: '17px',\n        height: '17px',\n        display: 'inline-block',\n      },\n      disabled && {\n        color: theme.palette.neutralTertiaryAlt,\n      },\n    ],\n  };\n};\n\nexport const getCalloutStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n  return {\n    container: [],\n    root: [\n      {\n        border: 'none',\n        boxShadow: 'none',\n      },\n    ],\n    beak: [],\n    beakCurtain: [],\n    calloutMain: [\n      {\n        backgroundColor: 'transparent',\n      },\n    ],\n  };\n};\n\nexport const getCalloutOffsetStyles = (\n  offset: Point,\n): IStyleFunction<ICalloutContentStyleProps, ICalloutContentStyles> => {\n  return (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n    return mergeStyleSets(getCalloutStyles(props), {\n      root: [\n        {\n          // eslint-disable-next-line deprecation/deprecation\n          marginLeft: offset.left || offset.x,\n          // eslint-disable-next-line deprecation/deprecation\n          marginTop: offset.top || offset.y,\n        },\n      ],\n    });\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}