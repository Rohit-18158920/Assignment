{"ast":null,"code":"import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\n  var _a;\n\n  var baseButtonStyles = getBaseButtonStyles(theme);\n  var splitButtonStyles = getSplitButtonStyles(theme);\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var iconButtonStyles = {\n    root: {\n      padding: '0 4px',\n      width: '32px',\n      height: '32px',\n      backgroundColor: 'transparent',\n      border: 'none',\n      color: semanticColors.link\n    },\n    rootHovered: {\n      color: palette.themeDarkAlt,\n      backgroundColor: palette.neutralLighter,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    rootHasMenu: {\n      width: 'auto'\n    },\n    rootPressed: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralLight\n    },\n    rootExpanded: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralLight\n    },\n    rootChecked: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralLight\n    },\n    rootCheckedHovered: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralQuaternaryAlt\n    },\n    rootDisabled: {\n      color: palette.neutralTertiaryAlt\n    }\n  };\n  return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles);\n});","map":{"version":3,"sources":["components/Button/IconButton/IconButton.styles.ts"],"names":[],"mappings":"AACA,SAAiB,eAAjB,EAAkC,oBAAlC,QAA8D,kBAA9D;AACA,SAAS,eAAT,QAAgC,oBAAhC;AACA,SAAS,SAAS,IAAI,mBAAtB,QAAiD,sBAAjD;AACA,SAAS,SAAS,IAAI,oBAAtB,QAAkD,mCAAlD;AAEA,OAAO,IAAM,SAAS,GAAG,eAAe,CACtC,UAAC,KAAD,EAAgB,YAAhB,EAA4C;;;AAC1C,MAAM,gBAAgB,GAAkB,mBAAmB,CAAC,KAAD,CAA3D;AACA,MAAM,iBAAiB,GAAkB,oBAAoB,CAAC,KAAD,CAA7D;AACQ,MAAA,OAAA,GAAA,KAAA,CAAA,OAAA;AAAA,MAAS,cAAA,GAAA,KAAA,CAAA,cAAT;AACR,MAAM,gBAAgB,GAAkB;AACtC,IAAA,IAAI,EAAE;AACJ,MAAA,OAAO,EAAE,OADL;AAEJ,MAAA,KAAK,EAAE,MAFH;AAGJ,MAAA,MAAM,EAAE,MAHJ;AAIJ,MAAA,eAAe,EAAE,aAJb;AAKJ,MAAA,MAAM,EAAE,MALJ;AAMJ,MAAA,KAAK,EAAE,cAAc,CAAC;AANlB,KADgC;AAUtC,IAAA,WAAW,EAAE;AACX,MAAA,KAAK,EAAE,OAAO,CAAC,YADJ;AAEX,MAAA,eAAe,EAAE,OAAO,CAAC,cAFd;AAGX,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,oBAAD,CAAA,GAAwB;AACtB,QAAA,WAAW,EAAE,WADS;AAEtB,QAAA,KAAK,EAAE;AAFe,OADjB,EAKR,EALQ;AAHE,KAVyB;AAqBtC,IAAA,WAAW,EAAE;AACX,MAAA,KAAK,EAAE;AADI,KArByB;AAyBtC,IAAA,WAAW,EAAE;AACX,MAAA,KAAK,EAAE,OAAO,CAAC,SADJ;AAEX,MAAA,eAAe,EAAE,OAAO,CAAC;AAFd,KAzByB;AA8BtC,IAAA,YAAY,EAAE;AACZ,MAAA,KAAK,EAAE,OAAO,CAAC,SADH;AAEZ,MAAA,eAAe,EAAE,OAAO,CAAC;AAFb,KA9BwB;AAmCtC,IAAA,WAAW,EAAE;AACX,MAAA,KAAK,EAAE,OAAO,CAAC,SADJ;AAEX,MAAA,eAAe,EAAE,OAAO,CAAC;AAFd,KAnCyB;AAwCtC,IAAA,kBAAkB,EAAE;AAClB,MAAA,KAAK,EAAE,OAAO,CAAC,SADG;AAElB,MAAA,eAAe,EAAE,OAAO,CAAC;AAFP,KAxCkB;AA6CtC,IAAA,YAAY,EAAE;AACZ,MAAA,KAAK,EAAE,OAAO,CAAC;AADH;AA7CwB,GAAxC;AAkDA,SAAO,eAAe,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,iBAArC,EAAwD,YAAxD,CAAtB;AACD,CAxDqC,CAAjC","sourcesContent":["import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const { palette, semanticColors } = theme;\n    const iconButtonStyles: IButtonStyles = {\n      root: {\n        padding: '0 4px',\n        width: '32px',\n        height: '32px',\n        backgroundColor: 'transparent',\n        border: 'none',\n        color: semanticColors.link,\n      },\n\n      rootHovered: {\n        color: palette.themeDarkAlt,\n        backgroundColor: palette.neutralLighter,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Highlight',\n            color: 'Highlight',\n          },\n        },\n      },\n\n      rootHasMenu: {\n        width: 'auto',\n      },\n\n      rootPressed: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootExpanded: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootChecked: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootCheckedHovered: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralQuaternaryAlt,\n      },\n\n      rootDisabled: {\n        color: palette.neutralTertiaryAlt,\n      },\n    };\n\n    return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles)!;\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}