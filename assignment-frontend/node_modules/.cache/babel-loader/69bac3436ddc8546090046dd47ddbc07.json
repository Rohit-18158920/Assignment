{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warn } from '../../Utilities';\nimport { ButtonType } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\n\nvar Button =\n/** @class */\nfunction (_super) {\n  __extends(Button, _super);\n\n  function Button(props) {\n    var _this = _super.call(this, props) || this;\n\n    warn(\"The Button component has been deprecated. Use specific variants instead. \" + \"(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)\");\n    return _this;\n  }\n\n  Button.prototype.render = function () {\n    var props = this.props; // eslint-disable-next-line deprecation/deprecation\n\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return React.createElement(ActionButton, __assign({}, props));\n\n      case ButtonType.compound:\n        return React.createElement(CompoundButton, __assign({}, props));\n\n      case ButtonType.icon:\n        return React.createElement(IconButton, __assign({}, props));\n\n      case ButtonType.primary:\n        return React.createElement(PrimaryButton, __assign({}, props));\n\n      default:\n        return React.createElement(DefaultButton, __assign({}, props));\n    }\n  };\n\n  return Button;\n}(React.Component);\n\nexport { Button };","map":{"version":3,"sources":["components/Button/Button.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,IAAT,QAAqB,iBAArB;AACA,SAAS,UAAT,QAAyC,gBAAzC;AACA,SAAS,aAAT,QAA8B,+BAA9B;AACA,SAAS,YAAT,QAA6B,6BAA7B;AACA,SAAS,cAAT,QAA+B,iCAA/B;AACA,SAAS,UAAT,QAA2B,yBAA3B;AACA,SAAS,aAAT,QAA8B,+BAA9B;AAEA;;;;AAIG;;AACH,IAAA,MAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4B,EAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;;AAC1B,WAAA,MAAA,CAAY,KAAZ,EAA+B;AAA/B,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;AAGE,IAAA,IAAI,CACF,8EACE,gEAFA,CAAJ;;AAID;;AAEM,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,QAAM,KAAK,GAAG,KAAK,KAAnB,CADF,CAGE;;AACA,YAAQ,KAAK,CAAC,UAAd;AACE,WAAK,UAAU,CAAC,OAAhB;AACE,eAAO,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,QAAA,CAAA,EAAA,EAAK,KAAL,CAAb,CAAP;;AAEF,WAAK,UAAU,CAAC,QAAhB;AACE,eAAO,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,QAAA,CAAA,EAAA,EAAK,KAAL,CAAf,CAAP;;AAEF,WAAK,UAAU,CAAC,IAAhB;AACE,eAAO,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,QAAA,CAAA,EAAA,EAAK,KAAL,CAAX,CAAP;;AAEF,WAAK,UAAU,CAAC,OAAhB;AACE,eAAO,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,QAAA,CAAA,EAAA,EAAK,KAAL,CAAd,CAAP;;AAEF;AACE,eAAO,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,QAAA,CAAA,EAAA,EAAK,KAAL,CAAd,CAAP;AAdJ;AAgBD,GApBM;;AAqBT,SAAA,MAAA;AAAC,CA/BD,CAA4B,KAAK,CAAC,SAAlC,CAAA","sourcesContent":["import * as React from 'react';\n\nimport { warn } from '../../Utilities';\nimport { ButtonType, IButtonProps } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\n\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\nexport class Button extends React.Component<IButtonProps, {}> {\n  constructor(props: IButtonProps) {\n    super(props);\n\n    warn(\n      `The Button component has been deprecated. Use specific variants instead. ` +\n        `(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)`,\n    );\n  }\n\n  public render(): JSX.Element {\n    const props = this.props;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return <ActionButton {...props} />;\n\n      case ButtonType.compound:\n        return <CompoundButton {...props} />;\n\n      case ButtonType.icon:\n        return <IconButton {...props} />;\n\n      case ButtonType.primary:\n        return <PrimaryButton {...props} />;\n\n      default:\n        return <DefaultButton {...props} />;\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}