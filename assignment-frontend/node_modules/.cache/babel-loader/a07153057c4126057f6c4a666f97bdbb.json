{"ast":null,"code":"import { getWindow } from './dom/getWindow';\nimport { Stylesheet } from '@uifabric/merge-styles'; // Initialize global window id.\n\nvar CURRENT_ID_PROPERTY = '__currentId__';\nvar DEFAULT_ID_STRING = 'id__'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar _global = getWindow() || {};\n\nif (_global[CURRENT_ID_PROPERTY] === undefined) {\n  _global[CURRENT_ID_PROPERTY] = 0;\n}\n\nvar _initializedStylesheetResets = false;\n/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\n\nexport function getId(prefix) {\n  if (!_initializedStylesheetResets) {\n    // Configure ids to reset on stylesheet resets.\n    var stylesheet = Stylesheet.getInstance();\n\n    if (stylesheet && stylesheet.onReset) {\n      stylesheet.onReset(resetIds);\n    }\n\n    _initializedStylesheetResets = true;\n  }\n\n  var index = _global[CURRENT_ID_PROPERTY]++;\n  return (prefix === undefined ? DEFAULT_ID_STRING : prefix) + index;\n}\n/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\n\nexport function resetIds(counter) {\n  if (counter === void 0) {\n    counter = 0;\n  }\n\n  _global[CURRENT_ID_PROPERTY] = counter;\n}","map":{"version":3,"sources":["getId.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,iBAA1B;AACA,SAAS,UAAT,QAA2B,wBAA3B,C,CAEA;;AACA,IAAM,mBAAmB,GAAG,eAA5B;AACA,IAAM,iBAAiB,GAAG,MAA1B,C,CAEA;;AACA,IAAI,OAAO,GAAQ,SAAS,MAAM,EAAlC;;AAEA,IAAI,OAAO,CAAC,mBAAD,CAAP,KAAiC,SAArC,EAAgD;AAC9C,EAAA,OAAO,CAAC,mBAAD,CAAP,GAA+B,CAA/B;AACD;;AAED,IAAI,4BAA4B,GAAG,KAAnC;AAEA;;;;AAIG;;AACH,OAAM,SAAU,KAAV,CAAgB,MAAhB,EAA+B;AACnC,MAAI,CAAC,4BAAL,EAAmC;AACjC;AACA,QAAM,UAAU,GAAG,UAAU,CAAC,WAAX,EAAnB;;AAEA,QAAI,UAAU,IAAI,UAAU,CAAC,OAA7B,EAAsC;AACpC,MAAA,UAAU,CAAC,OAAX,CAAmB,QAAnB;AACD;;AACD,IAAA,4BAA4B,GAAG,IAA/B;AACD;;AAED,MAAI,KAAK,GAAG,OAAO,CAAC,mBAAD,CAAP,EAAZ;AAEA,SAAO,CAAC,MAAM,KAAK,SAAX,GAAuB,iBAAvB,GAA2C,MAA5C,IAAsD,KAA7D;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,QAAV,CAAmB,OAAnB,EAAsC;AAAnB,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAmB;;AAC1C,EAAA,OAAO,CAAC,mBAAD,CAAP,GAA+B,OAA/B;AACD","sourcesContent":["import { getWindow } from './dom/getWindow';\nimport { Stylesheet } from '@uifabric/merge-styles';\n\n// Initialize global window id.\nconst CURRENT_ID_PROPERTY = '__currentId__';\nconst DEFAULT_ID_STRING = 'id__';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet _global: any = getWindow() || {};\n\nif (_global[CURRENT_ID_PROPERTY] === undefined) {\n  _global[CURRENT_ID_PROPERTY] = 0;\n}\n\nlet _initializedStylesheetResets = false;\n\n/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\nexport function getId(prefix?: string): string {\n  if (!_initializedStylesheetResets) {\n    // Configure ids to reset on stylesheet resets.\n    const stylesheet = Stylesheet.getInstance();\n\n    if (stylesheet && stylesheet.onReset) {\n      stylesheet.onReset(resetIds);\n    }\n    _initializedStylesheetResets = true;\n  }\n\n  let index = _global[CURRENT_ID_PROPERTY]++;\n\n  return (prefix === undefined ? DEFAULT_ID_STRING : prefix) + index;\n}\n\n/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\nexport function resetIds(counter: number = 0): void {\n  _global[CURRENT_ID_PROPERTY] = counter;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}