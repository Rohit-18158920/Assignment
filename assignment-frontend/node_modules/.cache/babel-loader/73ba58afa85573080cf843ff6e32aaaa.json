{"ast":null,"code":"import { mergeStyleSets } from '../../Styling';\n/** Class names used in themeable and non-themeable Icon components */\n\nexport var classNames = mergeStyleSets({\n  root: {\n    display: 'inline-block'\n  },\n  placeholder: ['ms-Icon-placeHolder', {\n    width: '1em'\n  }],\n  image: ['ms-Icon-imageContainer', {\n    overflow: 'hidden'\n  }]\n});\n/** Class name used only in non-themeable Icon components */\n\nexport var MS_ICON = 'ms-Icon';\nexport var getStyles = function (props) {\n  var className = props.className,\n      iconClassName = props.iconClassName,\n      isPlaceholder = props.isPlaceholder,\n      isImage = props.isImage,\n      styles = props.styles;\n  return {\n    root: [isPlaceholder && classNames.placeholder, classNames.root, isImage && classNames.image, iconClassName, className, styles && styles.root, // eslint-disable-next-line deprecation/deprecation\n    styles && styles.imageContainer]\n  };\n};","map":{"version":3,"sources":["components/Icon/Icon.styles.ts"],"names":[],"mappings":"AACA,SAAS,cAAT,QAA+B,eAA/B;AAEA;;AACA,OAAO,IAAM,UAAU,GAAG,cAAc,CAAC;AACvC,EAAA,IAAI,EAAE;AACJ,IAAA,OAAO,EAAE;AADL,GADiC;AAIvC,EAAA,WAAW,EAAE,CACX,qBADW,EAEX;AACE,IAAA,KAAK,EAAE;AADT,GAFW,CAJ0B;AAUvC,EAAA,KAAK,EAAE,CACL,wBADK,EAEL;AACE,IAAA,QAAQ,EAAE;AADZ,GAFK;AAVgC,CAAD,CAAjC;AAiBP;;AACA,OAAO,IAAM,OAAO,GAAG,SAAhB;AAEP,OAAO,IAAM,SAAS,GAAG,UAAC,KAAD,EAAuB;AACtC,MAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AAAA,MAAW,aAAA,GAAA,KAAA,CAAA,aAAX;AAAA,MAA0B,aAAA,GAAA,KAAA,CAAA,aAA1B;AAAA,MAAyC,OAAA,GAAA,KAAA,CAAA,OAAzC;AAAA,MAAkD,MAAA,GAAA,KAAA,CAAA,MAAlD;AAER,SAAO;AACL,IAAA,IAAI,EAAE,CACJ,aAAa,IAAI,UAAU,CAAC,WADxB,EAEJ,UAAU,CAAC,IAFP,EAGJ,OAAO,IAAI,UAAU,CAAC,KAHlB,EAIJ,aAJI,EAKJ,SALI,EAMJ,MAAM,IAAI,MAAM,CAAC,IANb,EAOJ;AACA,IAAA,MAAM,IAAI,MAAM,CAAC,cARb;AADD,GAAP;AAYD,CAfM","sourcesContent":["import { IIconStyleProps, IIconStyles } from './Icon.types';\nimport { mergeStyleSets } from '../../Styling';\n\n/** Class names used in themeable and non-themeable Icon components */\nexport const classNames = mergeStyleSets({\n  root: {\n    display: 'inline-block',\n  },\n  placeholder: [\n    'ms-Icon-placeHolder',\n    {\n      width: '1em',\n    },\n  ],\n  image: [\n    'ms-Icon-imageContainer',\n    {\n      overflow: 'hidden',\n    },\n  ],\n});\n/** Class name used only in non-themeable Icon components */\nexport const MS_ICON = 'ms-Icon';\n\nexport const getStyles = (props: IIconStyleProps): IIconStyles => {\n  const { className, iconClassName, isPlaceholder, isImage, styles } = props;\n\n  return {\n    root: [\n      isPlaceholder && classNames.placeholder,\n      classNames.root,\n      isImage && classNames.image,\n      iconClassName,\n      className,\n      styles && styles.root,\n      // eslint-disable-next-line deprecation/deprecation\n      styles && styles.imageContainer,\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}