{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, css, getRTL, format } from '../../Utilities';\nimport { FocusZone } from '../../FocusZone';\nimport * as stylesImport from './Calendar.scss';\nimport { Icon } from '../../Icon';\nvar styles = stylesImport;\nvar CELL_COUNT = 12;\nvar DefaultCalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined\n};\nvar DefaultNavigationIcons = {\n  leftNavigation: 'Up',\n  rightNavigation: 'Down',\n  closeIcon: 'CalculatorMultiply'\n};\n\nvar CalendarYearGridCell =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearGridCell, _super);\n\n  function CalendarYearGridCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._buttonRef = React.createRef();\n\n    _this._onRenderYear = function () {\n      var _a = _this.props,\n          year = _a.year,\n          onRenderYear = _a.onRenderYear;\n\n      if (onRenderYear) {\n        return onRenderYear(year);\n      }\n\n      return year;\n    };\n\n    _this._onClick = function () {\n      if (_this.props.onSelectYear) {\n        _this.props.onSelectYear(_this.props.year);\n      }\n    };\n\n    _this._onKeyDown = function (ev) {\n      if (_this.props.onSelectYear && ev.which === KeyCodes.enter) {\n        _this.props.onSelectYear(_this.props.year);\n      }\n    };\n\n    return _this;\n  }\n\n  CalendarYearGridCell.prototype.focus = function () {\n    if (this._buttonRef.current) {\n      this._buttonRef.current.focus();\n    }\n  };\n\n  CalendarYearGridCell.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        year = _b.year,\n        selected = _b.selected,\n        disabled = _b.disabled,\n        onSelectYear = _b.onSelectYear;\n    return React.createElement(\"button\", {\n      className: css('ms-DatePicker-yearOption', styles.yearOption, (_a = {}, _a['ms-DatePicker-day--highlighted ' + styles.yearIsHighlighted] = selected, _a['ms-DatePicker-yearOption--disabled ' + styles.yearOptionIsDisabled] = disabled, _a)),\n      type: \"button\",\n      role: \"gridcell\",\n      onClick: !disabled && onSelectYear ? this._onClick : undefined,\n      onKeyDown: !disabled && onSelectYear ? this._onKeyDown : undefined,\n      disabled: disabled,\n      \"aria-label\": String(year),\n      \"aria-selected\": selected,\n      ref: this._buttonRef\n    }, this._onRenderYear());\n  };\n\n  return CalendarYearGridCell;\n}(React.Component);\n\nvar CalendarYearGrid =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearGrid, _super);\n\n  function CalendarYearGrid() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._selectedCellRef = React.createRef();\n    _this._currentCellRef = React.createRef();\n\n    _this._renderCell = function (year) {\n      var selected = year === _this.props.selectedYear;\n      var _a = _this.props,\n          minYear = _a.minYear,\n          maxYear = _a.maxYear,\n          onSelectYear = _a.onSelectYear;\n      var disabled = minYear !== undefined && year < minYear || maxYear !== undefined && year > maxYear;\n      var current = year === new Date().getFullYear();\n      return React.createElement(CalendarYearGridCell, {\n        key: year,\n        year: year,\n        selected: selected,\n        current: current,\n        disabled: disabled,\n        onSelectYear: onSelectYear,\n        ref: selected ? _this._selectedCellRef : current ? _this._currentCellRef : undefined\n      });\n    };\n\n    return _this;\n  }\n\n  CalendarYearGrid.prototype.focus = function () {\n    if (this._selectedCellRef.current) {\n      this._selectedCellRef.current.focus();\n    } else if (this._currentCellRef.current) {\n      this._currentCellRef.current.focus();\n    }\n  };\n\n  CalendarYearGrid.prototype.render = function () {\n    var _a = this.props,\n        fromYear = _a.fromYear,\n        toYear = _a.toYear;\n    var year = fromYear;\n    var cells = [];\n\n    while (year <= toYear) {\n      cells.push(this._renderCell(year));\n      year++;\n    }\n\n    return React.createElement(FocusZone, null, React.createElement(\"div\", {\n      className: css('ms-DatePicker-optionGrid', styles.optionGrid),\n      role: \"grid\"\n    }, React.createElement(\"div\", {\n      role: \"row\"\n    }, cells)));\n  };\n\n  return CalendarYearGrid;\n}(React.Component);\n\nvar CalendarYearNavPrev =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearNavPrev, _super);\n\n  function CalendarYearNavPrev() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onSelectPrev = function () {\n      if (!_this.isDisabled && _this.props.onSelectPrev) {\n        _this.props.onSelectPrev();\n      }\n    };\n\n    _this._onKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onSelectPrev();\n      }\n    };\n\n    return _this;\n  }\n\n  CalendarYearNavPrev.prototype.render = function () {\n    var _a;\n\n    var iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    var strings = this.props.strings || DefaultCalendarYearStrings;\n    var prevRangeAriaLabel = strings.prevRangeAriaLabel;\n    var prevRange = {\n      fromYear: this.props.fromYear - CELL_COUNT,\n      toYear: this.props.toYear - CELL_COUNT\n    };\n    var prevAriaLabel = prevRangeAriaLabel ? typeof prevRangeAriaLabel === 'string' ? prevRangeAriaLabel : prevRangeAriaLabel(prevRange) : undefined;\n    var disabled = this.isDisabled;\n    var onSelectPrev = this.props.onSelectPrev;\n    return React.createElement(\"button\", {\n      className: css('ms-DatePicker-prevDecade', styles.prevDecade, (_a = {}, _a['ms-DatePicker-prevDecade--disabled ' + styles.prevDecadeIsDisabled] = disabled, _a)),\n      onClick: !disabled && onSelectPrev ? this._onSelectPrev : undefined,\n      onKeyDown: !disabled && onSelectPrev ? this._onKeyDown : undefined,\n      type: \"button\",\n      tabIndex: 0,\n      title: prevAriaLabel,\n      disabled: disabled\n    }, React.createElement(Icon, {\n      iconName: getRTL() ? iconStrings.rightNavigation : iconStrings.leftNavigation\n    }));\n  };\n\n  Object.defineProperty(CalendarYearNavPrev.prototype, \"isDisabled\", {\n    get: function () {\n      var minYear = this.props.minYear;\n      return minYear !== undefined && this.props.fromYear < minYear;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CalendarYearNavPrev;\n}(React.Component);\n\nvar CalendarYearNavNext =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearNavNext, _super);\n\n  function CalendarYearNavNext() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onSelectNext = function () {\n      if (!_this.isDisabled && _this.props.onSelectNext) {\n        _this.props.onSelectNext();\n      }\n    };\n\n    _this._onKeyDown = function (ev) {\n      if (ev.which === KeyCodes.enter) {\n        _this._onSelectNext();\n      }\n    };\n\n    return _this;\n  }\n\n  CalendarYearNavNext.prototype.render = function () {\n    var _a;\n\n    var iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    var strings = this.props.strings || DefaultCalendarYearStrings;\n    var nextRangeAriaLabel = strings.nextRangeAriaLabel;\n    var nextRange = {\n      fromYear: this.props.fromYear + CELL_COUNT,\n      toYear: this.props.toYear + CELL_COUNT\n    };\n    var nextAriaLabel = nextRangeAriaLabel ? typeof nextRangeAriaLabel === 'string' ? nextRangeAriaLabel : nextRangeAriaLabel(nextRange) : undefined;\n    var onSelectNext = this.props.onSelectNext;\n    var disabled = this.isDisabled;\n    return React.createElement(\"button\", {\n      className: css('ms-DatePicker-nextDecade', styles.nextDecade, (_a = {}, _a['ms-DatePicker-nextDecade--disabled ' + styles.nextDecadeIsDisabled] = disabled, _a)),\n      onClick: !disabled && onSelectNext ? this._onSelectNext : undefined,\n      onKeyDown: !disabled && onSelectNext ? this._onKeyDown : undefined,\n      type: \"button\",\n      tabIndex: 0,\n      title: nextAriaLabel,\n      disabled: this.isDisabled\n    }, React.createElement(Icon, {\n      iconName: getRTL() ? iconStrings.leftNavigation : iconStrings.rightNavigation\n    }));\n  };\n\n  Object.defineProperty(CalendarYearNavNext.prototype, \"isDisabled\", {\n    get: function () {\n      var maxYear = this.props.maxYear;\n      return maxYear !== undefined && this.props.fromYear + CELL_COUNT > maxYear;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CalendarYearNavNext;\n}(React.Component);\n\nvar CalendarYearNav =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearNav, _super);\n\n  function CalendarYearNav() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CalendarYearNav.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-decadeComponents', styles.decadeComponents)\n    }, React.createElement(\"div\", {\n      className: css('ms-DatePicker-navContainer', styles.navContainer)\n    }, React.createElement(CalendarYearNavPrev, __assign({}, this.props)), React.createElement(CalendarYearNavNext, __assign({}, this.props))));\n  };\n\n  return CalendarYearNav;\n}(React.Component);\n\nvar CalendarYearTitle =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearTitle, _super);\n\n  function CalendarYearTitle() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onHeaderSelect = function () {\n      if (_this.props.onHeaderSelect) {\n        _this.props.onHeaderSelect(true);\n      }\n    };\n\n    _this._onHeaderKeyDown = function (ev) {\n      if (_this.props.onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n        _this.props.onHeaderSelect(true);\n      }\n    };\n\n    _this._onRenderYear = function (year) {\n      if (_this.props.onRenderYear) {\n        return _this.props.onRenderYear(year);\n      }\n\n      return year;\n    };\n\n    return _this;\n  }\n\n  CalendarYearTitle.prototype.render = function () {\n    var _a = this.props,\n        fromYear = _a.fromYear,\n        toYear = _a.toYear,\n        onHeaderSelect = _a.onHeaderSelect;\n\n    if (onHeaderSelect) {\n      var strings = this.props.strings || DefaultCalendarYearStrings;\n      var rangeAriaLabel = strings.rangeAriaLabel;\n      var currentDateRange = rangeAriaLabel ? typeof rangeAriaLabel === 'string' ? rangeAriaLabel : rangeAriaLabel(this.props) : undefined;\n      var ariaLabel = strings.headerAriaLabelFormatString ? format(strings.headerAriaLabelFormatString, currentDateRange) : currentDateRange;\n      return React.createElement(\"div\", {\n        className: css('ms-DatePicker-currentDecade js-showYearPicker', styles.currentDecade, styles.headerToggleView),\n        onClick: this._onHeaderSelect,\n        onKeyDown: this._onHeaderKeyDown,\n        \"aria-label\": ariaLabel,\n        role: \"button\",\n        \"aria-atomic\": true,\n        \"aria-live\": \"polite\",\n        tabIndex: 0\n      }, this._onRenderYear(fromYear), \" - \", this._onRenderYear(toYear));\n    }\n\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-currentDecade js-showYearPicker', styles.currentDecade)\n    }, this._onRenderYear(fromYear), \" - \", this._onRenderYear(toYear));\n  };\n\n  return CalendarYearTitle;\n}(React.Component);\n\nvar CalendarYearHeader =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYearHeader, _super);\n\n  function CalendarYearHeader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onRenderTitle = function () {\n      if (_this.props.onRenderTitle) {\n        return _this.props.onRenderTitle(_this.props);\n      }\n\n      return React.createElement(CalendarYearTitle, __assign({}, _this.props));\n    };\n\n    _this._onRenderNav = function () {\n      return React.createElement(CalendarYearNav, __assign({}, _this.props));\n    };\n\n    return _this;\n  }\n\n  CalendarYearHeader.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-header', styles.header)\n    }, this._onRenderTitle(), this._onRenderNav());\n  };\n\n  return CalendarYearHeader;\n}(React.Component);\n\nvar CalendarYear =\n/** @class */\nfunction (_super) {\n  __extends(CalendarYear, _super);\n\n  function CalendarYear(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._gridRef = React.createRef();\n\n    _this._onNavNext = function () {\n      _this.setState({\n        fromYear: _this.state.fromYear + CELL_COUNT\n      });\n    };\n\n    _this._onNavPrev = function () {\n      _this.setState({\n        fromYear: _this.state.fromYear - CELL_COUNT\n      });\n    };\n\n    _this._renderHeader = function () {\n      return React.createElement(CalendarYearHeader, __assign({}, _this.props, {\n        fromYear: _this.state.fromYear,\n        toYear: _this.state.fromYear + CELL_COUNT - 1,\n        onSelectPrev: _this._onNavPrev,\n        onSelectNext: _this._onNavNext\n      }));\n    };\n\n    _this._renderGrid = function () {\n      return React.createElement(CalendarYearGrid, __assign({}, _this.props, {\n        fromYear: _this.state.fromYear,\n        toYear: _this.state.fromYear + CELL_COUNT - 1,\n        ref: _this._gridRef\n      }));\n    };\n\n    _this.state = _this._calculateInitialStateFromProps(props);\n    return _this;\n  }\n\n  CalendarYear.prototype.focus = function () {\n    if (this._gridRef.current) {\n      this._gridRef.current.focus();\n    }\n  };\n\n  CalendarYear.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: css('ms-DatePicker-yearPicker', styles.yearPicker)\n    }, this._renderHeader(), this._renderGrid());\n  };\n\n  CalendarYear.prototype._calculateInitialStateFromProps = function (props) {\n    var selectedYear = props.selectedYear,\n        navigatedYear = props.navigatedYear;\n    var rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n    var fromYear = Math.floor(rangeYear / 10) * 10;\n    return {\n      fromYear: fromYear,\n      navigatedYear: navigatedYear,\n      selectedYear: selectedYear\n    };\n  };\n\n  return CalendarYear;\n}(React.Component);\n\nexport { CalendarYear };","map":{"version":3,"sources":["components/Calendar/CalendarYear.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { KeyCodes, css, getRTL, format } from '../../Utilities';\nimport { ICalendarIconStrings } from './Calendar.types';\nimport { FocusZone } from '../../FocusZone';\nimport * as stylesImport from './Calendar.scss';\nimport { Icon } from '../../Icon';\n\nconst styles: any = stylesImport;\n\nconst CELL_COUNT = 12;\n\nexport interface ICalendarYearRange {\n  fromYear: number;\n  toYear: number;\n}\n\nexport interface ICalendarYearRangeToString {\n  (range: ICalendarYearRange): string;\n}\n\nexport interface ICalendarYearStrings {\n  rangeAriaLabel?: string | ICalendarYearRangeToString;\n  prevRangeAriaLabel?: string | ICalendarYearRangeToString;\n  nextRangeAriaLabel?: string | ICalendarYearRangeToString;\n  headerAriaLabelFormatString?: string;\n}\n\nexport interface ICalendarYear {\n  focus(): void;\n}\n\nexport interface ICalendarYearProps {\n  navigationIcons?: ICalendarIconStrings;\n  navigatedYear?: number;\n  selectedYear?: number;\n  minYear?: number;\n  maxYear?: number;\n  onHeaderSelect?: (focus: boolean) => void;\n  onSelectYear?: (year: number) => void;\n  onRenderTitle?: (props: ICalendarYearHeaderProps) => React.ReactNode;\n  onRenderYear?: (year: number) => React.ReactNode;\n  className?: string;\n  strings?: ICalendarYearStrings;\n}\n\nconst DefaultCalendarYearStrings: ICalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined,\n};\n\nconst DefaultNavigationIcons: ICalendarIconStrings = {\n  leftNavigation: 'Up',\n  rightNavigation: 'Down',\n  closeIcon: 'CalculatorMultiply',\n};\n\ninterface ICalendarYearGridCell {\n  focus(): void;\n}\n\ninterface ICalendarYearGridCellProps {\n  year: number;\n  current?: boolean;\n  selected?: boolean;\n  disabled?: boolean;\n  onSelectYear?: (year: number) => void;\n  onRenderYear?: (year: number) => React.ReactNode;\n}\n\nclass CalendarYearGridCell extends React.Component<ICalendarYearGridCellProps, {}> implements ICalendarYearGridCell {\n  private _buttonRef = React.createRef<HTMLButtonElement>();\n\n  public focus() {\n    if (this._buttonRef.current) {\n      this._buttonRef.current.focus();\n    }\n  }\n\n  public render() {\n    const { year, selected, disabled, onSelectYear } = this.props;\n    return (\n      <button\n        className={css('ms-DatePicker-yearOption', styles.yearOption, {\n          ['ms-DatePicker-day--highlighted ' + styles.yearIsHighlighted]: selected,\n          ['ms-DatePicker-yearOption--disabled ' + styles.yearOptionIsDisabled]: disabled,\n        })}\n        type=\"button\"\n        role=\"gridcell\"\n        onClick={!disabled && onSelectYear ? this._onClick : undefined}\n        onKeyDown={!disabled && onSelectYear ? this._onKeyDown : undefined}\n        disabled={disabled}\n        aria-label={String(year)}\n        aria-selected={selected}\n        ref={this._buttonRef}\n      >\n        {this._onRenderYear()}\n      </button>\n    );\n  }\n\n  private _onRenderYear = () => {\n    const { year, onRenderYear } = this.props;\n    if (onRenderYear) {\n      return onRenderYear(year);\n    }\n    return year;\n  };\n\n  private _onClick = () => {\n    if (this.props.onSelectYear) {\n      this.props.onSelectYear(this.props.year);\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (this.props.onSelectYear && ev.which === KeyCodes.enter) {\n      this.props.onSelectYear(this.props.year);\n    }\n  };\n}\n\ninterface ICalendarYearGrid {\n  focus(): void;\n}\n\ninterface ICalendarYearGridProps extends ICalendarYearProps, ICalendarYearRange {\n  selectedYear?: number;\n}\n\nclass CalendarYearGrid extends React.Component<ICalendarYearGridProps, {}> implements ICalendarYearGrid {\n  private _selectedCellRef = React.createRef<CalendarYearGridCell>();\n  private _currentCellRef = React.createRef<CalendarYearGridCell>();\n\n  public focus() {\n    if (this._selectedCellRef.current) {\n      this._selectedCellRef.current.focus();\n    } else if (this._currentCellRef.current) {\n      this._currentCellRef.current.focus();\n    }\n  }\n\n  public render() {\n    const { fromYear, toYear } = this.props;\n    let year = fromYear;\n    const cells = [];\n    while (year <= toYear) {\n      cells.push(this._renderCell(year));\n      year++;\n    }\n    return (\n      <FocusZone>\n        <div className={css('ms-DatePicker-optionGrid', styles.optionGrid)} role=\"grid\">\n          <div role=\"row\">{cells}</div>\n        </div>\n      </FocusZone>\n    );\n  }\n\n  private _renderCell = (year: number): React.ReactNode => {\n    const selected = year === this.props.selectedYear;\n    const { minYear, maxYear, onSelectYear } = this.props;\n    const disabled = (minYear !== undefined && year < minYear) || (maxYear !== undefined && year > maxYear);\n    const current = year === new Date().getFullYear();\n    return (\n      <CalendarYearGridCell\n        key={year}\n        year={year}\n        selected={selected}\n        current={current}\n        disabled={disabled}\n        onSelectYear={onSelectYear}\n        ref={selected ? this._selectedCellRef : current ? this._currentCellRef : undefined}\n      />\n    );\n  };\n}\n\nexport interface ICalendarYearHeaderProps extends ICalendarYearProps, ICalendarYearRange {\n  onSelectPrev?: () => void;\n  onSelectNext?: () => void;\n}\n\nclass CalendarYearNavPrev extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    const iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    const strings = this.props.strings || DefaultCalendarYearStrings;\n    const prevRangeAriaLabel = strings.prevRangeAriaLabel;\n    const prevRange = { fromYear: this.props.fromYear - CELL_COUNT, toYear: this.props.toYear - CELL_COUNT };\n    const prevAriaLabel = prevRangeAriaLabel\n      ? typeof prevRangeAriaLabel === 'string'\n        ? (prevRangeAriaLabel as string)\n        : (prevRangeAriaLabel as ICalendarYearRangeToString)(prevRange)\n      : undefined;\n    const disabled = this.isDisabled;\n    const { onSelectPrev } = this.props;\n    return (\n      <button\n        className={css('ms-DatePicker-prevDecade', styles.prevDecade, {\n          ['ms-DatePicker-prevDecade--disabled ' + styles.prevDecadeIsDisabled]: disabled,\n        })}\n        onClick={!disabled && onSelectPrev ? this._onSelectPrev : undefined}\n        onKeyDown={!disabled && onSelectPrev ? this._onKeyDown : undefined}\n        type=\"button\"\n        tabIndex={0}\n        title={prevAriaLabel}\n        disabled={disabled}\n      >\n        <Icon iconName={getRTL() ? iconStrings.rightNavigation : iconStrings.leftNavigation} />\n      </button>\n    );\n  }\n\n  public get isDisabled() {\n    const { minYear } = this.props;\n    return minYear !== undefined && this.props.fromYear < minYear;\n  }\n\n  private _onSelectPrev = () => {\n    if (!this.isDisabled && this.props.onSelectPrev) {\n      this.props.onSelectPrev();\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.which === KeyCodes.enter) {\n      this._onSelectPrev();\n    }\n  };\n}\n\nclass CalendarYearNavNext extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    const iconStrings = this.props.navigationIcons || DefaultNavigationIcons;\n    const strings = this.props.strings || DefaultCalendarYearStrings;\n    const nextRangeAriaLabel = strings.nextRangeAriaLabel;\n    const nextRange = { fromYear: this.props.fromYear + CELL_COUNT, toYear: this.props.toYear + CELL_COUNT };\n    const nextAriaLabel = nextRangeAriaLabel\n      ? typeof nextRangeAriaLabel === 'string'\n        ? (nextRangeAriaLabel as string)\n        : (nextRangeAriaLabel as ICalendarYearRangeToString)(nextRange)\n      : undefined;\n    const { onSelectNext } = this.props;\n    const disabled = this.isDisabled;\n    return (\n      <button\n        className={css('ms-DatePicker-nextDecade', styles.nextDecade, {\n          ['ms-DatePicker-nextDecade--disabled ' + styles.nextDecadeIsDisabled]: disabled,\n        })}\n        onClick={!disabled && onSelectNext ? this._onSelectNext : undefined}\n        onKeyDown={!disabled && onSelectNext ? this._onKeyDown : undefined}\n        type=\"button\"\n        tabIndex={0}\n        title={nextAriaLabel}\n        disabled={this.isDisabled}\n      >\n        <Icon iconName={getRTL() ? iconStrings.leftNavigation : iconStrings.rightNavigation} />\n      </button>\n    );\n  }\n\n  public get isDisabled() {\n    const { maxYear } = this.props;\n    return maxYear !== undefined && this.props.fromYear + CELL_COUNT > maxYear;\n  }\n\n  private _onSelectNext = () => {\n    if (!this.isDisabled && this.props.onSelectNext) {\n      this.props.onSelectNext();\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (ev.which === KeyCodes.enter) {\n      this._onSelectNext();\n    }\n  };\n}\n\nclass CalendarYearNav extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    return (\n      <div className={css('ms-DatePicker-decadeComponents', styles.decadeComponents)}>\n        <div className={css('ms-DatePicker-navContainer', styles.navContainer)}>\n          <CalendarYearNavPrev {...this.props} />\n          <CalendarYearNavNext {...this.props} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass CalendarYearTitle extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    const { fromYear, toYear, onHeaderSelect } = this.props;\n    if (onHeaderSelect) {\n      const strings = this.props.strings || DefaultCalendarYearStrings;\n      const rangeAriaLabel = strings.rangeAriaLabel;\n      const currentDateRange = rangeAriaLabel\n        ? typeof rangeAriaLabel === 'string'\n          ? (rangeAriaLabel as string)\n          : (rangeAriaLabel as ICalendarYearRangeToString)(this.props)\n        : undefined;\n\n      const ariaLabel = strings.headerAriaLabelFormatString\n        ? format(strings.headerAriaLabelFormatString, currentDateRange)\n        : currentDateRange;\n\n      return (\n        <div\n          className={css(\n            'ms-DatePicker-currentDecade js-showYearPicker',\n            styles.currentDecade,\n            styles.headerToggleView,\n          )}\n          onClick={this._onHeaderSelect}\n          onKeyDown={this._onHeaderKeyDown}\n          aria-label={ariaLabel}\n          role=\"button\"\n          aria-atomic={true}\n          aria-live=\"polite\"\n          tabIndex={0}\n        >\n          {this._onRenderYear(fromYear)} - {this._onRenderYear(toYear)}\n        </div>\n      );\n    }\n    return (\n      <div className={css('ms-DatePicker-currentDecade js-showYearPicker', styles.currentDecade)}>\n        {this._onRenderYear(fromYear)} - {this._onRenderYear(toYear)}\n      </div>\n    );\n  }\n\n  private _onHeaderSelect = () => {\n    if (this.props.onHeaderSelect) {\n      this.props.onHeaderSelect(true);\n    }\n  };\n\n  private _onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    if (this.props.onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      this.props.onHeaderSelect(true);\n    }\n  };\n\n  private _onRenderYear = (year: number) => {\n    if (this.props.onRenderYear) {\n      return this.props.onRenderYear(year);\n    }\n    return year;\n  };\n}\n\nclass CalendarYearHeader extends React.Component<ICalendarYearHeaderProps, any> {\n  public render() {\n    return (\n      <div className={css('ms-DatePicker-header', styles.header)}>\n        {this._onRenderTitle()}\n        {this._onRenderNav()}\n      </div>\n    );\n  }\n\n  private _onRenderTitle = () => {\n    if (this.props.onRenderTitle) {\n      return this.props.onRenderTitle(this.props);\n    }\n    return <CalendarYearTitle {...this.props} />;\n  };\n\n  private _onRenderNav = () => {\n    return <CalendarYearNav {...this.props} />;\n  };\n}\n\nexport interface ICalendarYearState {\n  fromYear: number;\n  navigatedYear?: number;\n  selectedYear?: number;\n}\n\nexport class CalendarYear extends React.Component<ICalendarYearProps, ICalendarYearState> implements ICalendarYear {\n  private _gridRef = React.createRef<CalendarYearGrid>();\n\n  public constructor(props: ICalendarYearProps) {\n    super(props);\n    this.state = this._calculateInitialStateFromProps(props);\n  }\n\n  public focus() {\n    if (this._gridRef.current) {\n      this._gridRef.current.focus();\n    }\n  }\n\n  public render() {\n    return (\n      <div className={css('ms-DatePicker-yearPicker', styles.yearPicker)}>\n        {this._renderHeader()}\n        {this._renderGrid()}\n      </div>\n    );\n  }\n\n  private _onNavNext = () => {\n    this.setState({ fromYear: this.state.fromYear + CELL_COUNT });\n  };\n\n  private _onNavPrev = () => {\n    this.setState({ fromYear: this.state.fromYear - CELL_COUNT });\n  };\n\n  private _renderHeader = (): React.ReactNode => {\n    return (\n      <CalendarYearHeader\n        {...this.props}\n        fromYear={this.state.fromYear}\n        toYear={this.state.fromYear + CELL_COUNT - 1}\n        onSelectPrev={this._onNavPrev}\n        onSelectNext={this._onNavNext}\n      />\n    );\n  };\n\n  private _renderGrid = (): React.ReactNode => {\n    return (\n      <CalendarYearGrid\n        {...this.props}\n        fromYear={this.state.fromYear}\n        toYear={this.state.fromYear + CELL_COUNT - 1}\n        ref={this._gridRef}\n      />\n    );\n  };\n\n  private _calculateInitialStateFromProps(props: ICalendarYearProps): ICalendarYearState {\n    const { selectedYear, navigatedYear } = props;\n    const rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n    const fromYear = Math.floor(rangeYear / 10) * 10;\n    return {\n      fromYear: fromYear,\n      navigatedYear: navigatedYear,\n      selectedYear: selectedYear,\n    };\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}