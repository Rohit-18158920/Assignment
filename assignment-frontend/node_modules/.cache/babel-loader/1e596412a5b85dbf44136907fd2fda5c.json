{"ast":null,"code":"/**\n * Detects whether an element's content has horizontal overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasHorizontalOverflow(element) {\n  return element.clientWidth < element.scrollWidth;\n}\n/**\n * Detects whether an element's content has vertical overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\n\nexport function hasVerticalOverflow(element) {\n  return element.clientHeight < element.scrollHeight;\n}\n/**\n * Detects whether an element's content has overflow in any direction\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\n\nexport function hasOverflow(element) {\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\n}","map":{"version":3,"sources":["overflow.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;AACH,OAAM,SAAU,qBAAV,CAAgC,OAAhC,EAAoD;AACxD,SAAO,OAAO,CAAC,WAAR,GAAsB,OAAO,CAAC,WAArC;AACD;AAED;;;;;;AAMG;;AACH,OAAM,SAAU,mBAAV,CAA8B,OAA9B,EAAkD;AACtD,SAAO,OAAO,CAAC,YAAR,GAAuB,OAAO,CAAC,YAAtC;AACD;AAED;;;;;;AAMG;;AACH,OAAM,SAAU,WAAV,CAAsB,OAAtB,EAA0C;AAC9C,SAAO,qBAAqB,CAAC,OAAD,CAArB,IAAkC,mBAAmB,CAAC,OAAD,CAA5D;AACD","sourcesContent":["/**\n * Detects whether an element's content has horizontal overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasHorizontalOverflow(element: HTMLElement): boolean {\n  return element.clientWidth < element.scrollWidth;\n}\n\n/**\n * Detects whether an element's content has vertical overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasVerticalOverflow(element: HTMLElement): boolean {\n  return element.clientHeight < element.scrollHeight;\n}\n\n/**\n * Detects whether an element's content has overflow in any direction\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasOverflow(element: HTMLElement): boolean {\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}