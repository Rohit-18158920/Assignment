{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport { PersonaPresence as PersonaPresenceEnum } from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\nvar coinSizeFontScaleFactor = 6;\nvar coinSizePresenceScaleFactor = 3;\nvar presenceMaxSize = 40;\nvar presenceFontMaxSize = 20;\nvar getClassNames = classNamesFunction({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\n\nvar PersonaPresenceBase =\n/** @class */\nfunction (_super) {\n  __extends(PersonaPresenceBase, _super);\n\n  function PersonaPresenceBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onRenderIcon = function (className, style) {\n      return React.createElement(Icon, {\n        className: className,\n        iconName: determineIcon(_this.props.presence, _this.props.isOutOfOffice),\n        style: style\n      });\n    };\n\n    return _this;\n  }\n\n  PersonaPresenceBase.prototype.render = function () {\n    var _a = this.props,\n        coinSize = _a.coinSize,\n        isOutOfOffice = _a.isOutOfOffice,\n        styles = _a.styles,\n        // Use getStyles from props.\n    presence = _a.presence,\n        theme = _a.theme,\n        presenceTitle = _a.presenceTitle,\n        presenceColors = _a.presenceColors;\n    var size = sizeBoolean(this.props.size); // Render Presence Icon if Persona is above size 32.\n\n    var renderIcon = !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) && (coinSize ? coinSize > 32 : true);\n    var presenceHeightWidth = coinSize ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize ? coinSize / coinSizePresenceScaleFactor + 'px' : presenceMaxSize + 'px' : '';\n    var presenceFontSize = coinSize ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize ? coinSize / coinSizeFontScaleFactor + 'px' : presenceFontMaxSize + 'px' : '';\n    var coinSizeWithPresenceIconStyle = coinSize ? {\n      fontSize: presenceFontSize,\n      lineHeight: presenceHeightWidth\n    } : undefined;\n    var coinSizeWithPresenceStyle = coinSize ? {\n      width: presenceHeightWidth,\n      height: presenceHeightWidth\n    } : undefined; // Use getStyles from props, or fall back to getStyles from styles file.\n\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      presence: presence,\n      size: this.props.size,\n      isOutOfOffice: isOutOfOffice,\n      presenceColors: presenceColors\n    });\n\n    if (presence === PersonaPresenceEnum.none) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      role: \"presentation\",\n      className: classNames.presence,\n      style: coinSizeWithPresenceStyle,\n      title: presenceTitle\n    }, renderIcon && this._onRenderIcon(classNames.presenceIcon, coinSizeWithPresenceIconStyle));\n  };\n\n  return PersonaPresenceBase;\n}(React.Component);\n\nexport { PersonaPresenceBase };\n\nfunction determineIcon(presence, isOutOfOffice) {\n  if (!presence) {\n    return undefined;\n  }\n\n  var oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n\n    case 'dnd':\n      return 'SkypeMinus';\n\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}","map":{"version":3,"sources":["components/Persona/PersonaPresence/PersonaPresence.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport {\n  IPersonaPresenceProps,\n  IPersonaPresenceStyleProps,\n  IPersonaPresenceStyles,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\n\nconst coinSizeFontScaleFactor = 6;\nconst coinSizePresenceScaleFactor = 3;\nconst presenceMaxSize = 40;\nconst presenceFontMaxSize = 20;\n\nconst getClassNames = classNamesFunction<IPersonaPresenceStyleProps, IPersonaPresenceStyles>({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport class PersonaPresenceBase extends React.Component<IPersonaPresenceProps, {}> {\n  constructor(props: IPersonaPresenceProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      coinSize,\n      isOutOfOffice,\n      styles, // Use getStyles from props.\n      presence,\n      theme,\n      presenceTitle,\n      presenceColors,\n    } = this.props;\n    const size = sizeBoolean(this.props.size as PersonaSize);\n\n    // Render Presence Icon if Persona is above size 32.\n    const renderIcon =\n      !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) &&\n      (coinSize ? coinSize > 32 : true);\n\n    const presenceHeightWidth: string = coinSize\n      ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize\n        ? coinSize / coinSizePresenceScaleFactor + 'px'\n        : presenceMaxSize + 'px'\n      : '';\n    const presenceFontSize: string = coinSize\n      ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize\n        ? coinSize / coinSizeFontScaleFactor + 'px'\n        : presenceFontMaxSize + 'px'\n      : '';\n    const coinSizeWithPresenceIconStyle = coinSize\n      ? { fontSize: presenceFontSize, lineHeight: presenceHeightWidth }\n      : undefined;\n    const coinSizeWithPresenceStyle = coinSize\n      ? { width: presenceHeightWidth, height: presenceHeightWidth }\n      : undefined;\n\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      presence,\n      size: this.props.size,\n      isOutOfOffice,\n      presenceColors,\n    });\n\n    if (presence === PersonaPresenceEnum.none) {\n      return null;\n    }\n\n    return (\n      <div role=\"presentation\" className={classNames.presence} style={coinSizeWithPresenceStyle} title={presenceTitle}>\n        {renderIcon && this._onRenderIcon(classNames.presenceIcon, coinSizeWithPresenceIconStyle)}\n      </div>\n    );\n  }\n\n  private _onRenderIcon = (className?: string, style?: React.CSSProperties): JSX.Element => (\n    <Icon className={className} iconName={determineIcon(this.props.presence, this.props.isOutOfOffice)} style={style} />\n  );\n}\n\nfunction determineIcon(\n  presence: PersonaPresenceEnum | undefined,\n  isOutOfOffice: boolean | undefined,\n): string | undefined {\n  if (!presence) {\n    return undefined;\n  }\n\n  const oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n    case 'dnd':\n      return 'SkypeMinus';\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}