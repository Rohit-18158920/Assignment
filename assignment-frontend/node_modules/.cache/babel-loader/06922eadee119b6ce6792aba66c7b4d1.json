{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseSelectedItemsList } from '../BaseSelectedItemsList';\nimport { ExtendedSelectedItem } from './Items/ExtendedSelectedItem';\nimport { SelectedItemWithContextMenu } from './Items/SelectedItemWithContextMenu';\nimport { EditingItem } from './Items/EditingItem';\n/**\n * {@docCategory SelectedPeopleList}\n */\n\nvar BasePeopleSelectedItemsList =\n/** @class */\nfunction (_super) {\n  __extends(BasePeopleSelectedItemsList, _super);\n\n  function BasePeopleSelectedItemsList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return BasePeopleSelectedItemsList;\n}(BaseSelectedItemsList);\n\nexport { BasePeopleSelectedItemsList };\n/**\n * Standard People Picker.\n */\n\nvar SelectedPeopleList =\n/** @class */\nfunction (_super) {\n  __extends(SelectedPeopleList, _super);\n\n  function SelectedPeopleList() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderItems = function () {\n      var items = _this.state.items;\n      return items.map(function (item, index) {\n        return _this._renderItem(item, index);\n      });\n    };\n\n    _this._beginEditing = function (item) {\n      item.isEditing = true;\n\n      _this.forceUpdate();\n    };\n\n    _this._completeEditing = function (oldItem, newItem) {\n      oldItem.isEditing = false;\n\n      _this.replaceItem(oldItem, newItem);\n    };\n\n    return _this;\n  }\n\n  SelectedPeopleList.prototype._renderItem = function (item, index) {\n    var _this = this;\n\n    var removeButtonAriaLabel = this.props.removeButtonAriaLabel;\n    var expandGroup = this.props.onExpandGroup;\n    var props = {\n      item: item,\n      index: index,\n      key: item.key ? item.key : index,\n      selected: this.selection.isIndexSelected(index),\n      onRemoveItem: function () {\n        return _this.removeItem(item);\n      },\n      onItemChange: this.onItemChange,\n      removeButtonAriaLabel: removeButtonAriaLabel,\n      onCopyItem: function (itemToCopy) {\n        return _this.copyItems([itemToCopy]);\n      },\n      onExpandItem: expandGroup ? function () {\n        return expandGroup(item);\n      } : undefined,\n      menuItems: this._createMenuItems(item)\n    };\n    var hasContextMenu = props.menuItems.length > 0;\n\n    if (item.isEditing && hasContextMenu) {\n      return React.createElement(EditingItem, __assign({}, props, {\n        onRenderFloatingPicker: this.props.onRenderFloatingPicker,\n        floatingPickerProps: this.props.floatingPickerProps,\n        onEditingComplete: this._completeEditing,\n        getEditingItemText: this.props.getEditingItemText\n      }));\n    } else {\n      // This cast is here because we are guaranteed that onRenderItem is set\n      // from static defaultProps\n      // TODO: Move this component to composition with required onRenderItem to remove\n      // this cast.\n      var onRenderItem = this.props.onRenderItem;\n      var renderedItem = onRenderItem(props);\n      return hasContextMenu ? React.createElement(SelectedItemWithContextMenu, {\n        key: props.key,\n        renderedItem: renderedItem,\n        beginEditing: this._beginEditing,\n        menuItems: this._createMenuItems(props.item),\n        item: props.item\n      }) : renderedItem;\n    }\n  };\n\n  SelectedPeopleList.prototype._createMenuItems = function (item) {\n    var _this = this;\n\n    var menuItems = [];\n\n    if (this.props.editMenuItemText && this.props.getEditingItemText) {\n      menuItems.push({\n        key: 'Edit',\n        text: this.props.editMenuItemText,\n        onClick: function (ev, menuItem) {\n          _this._beginEditing(menuItem.data);\n        },\n        data: item\n      });\n    }\n\n    if (this.props.removeMenuItemText) {\n      menuItems.push({\n        key: 'Remove',\n        text: this.props.removeMenuItemText,\n        onClick: function (ev, menuItem) {\n          _this.removeItem(menuItem.data);\n        },\n        data: item\n      });\n    }\n\n    if (this.props.copyMenuItemText) {\n      menuItems.push({\n        key: 'Copy',\n        text: this.props.copyMenuItemText,\n        onClick: function (ev, menuItem) {\n          if (_this.props.onCopyItems) {\n            _this.copyItems([menuItem.data]);\n          }\n        },\n        data: item\n      });\n    }\n\n    return menuItems;\n  };\n\n  SelectedPeopleList.defaultProps = {\n    onRenderItem: function (props) {\n      return React.createElement(ExtendedSelectedItem, __assign({}, props));\n    }\n  };\n  return SelectedPeopleList;\n}(BasePeopleSelectedItemsList);\n\nexport { SelectedPeopleList };","map":{"version":3,"sources":["components/SelectedItemsList/SelectedPeopleList/SelectedPeopleList.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { BaseSelectedItemsList } from '../BaseSelectedItemsList';\nimport { IBaseSelectedItemsListProps, ISelectedItemProps } from '../BaseSelectedItemsList.types';\nimport { IPersonaProps } from '../../../Persona';\nimport { ExtendedSelectedItem } from './Items/ExtendedSelectedItem';\nimport { SelectedItemWithContextMenu } from './Items/SelectedItemWithContextMenu';\nimport { IRenderFunction } from '../../../Utilities';\nimport { IContextualMenuItem } from '../../../ContextualMenu';\nimport { IBaseFloatingPickerProps } from '../../../FloatingPicker';\nimport { EditingItem } from './Items/EditingItem';\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport interface IExtendedPersonaProps extends IPersonaProps {\n  key?: React.Key;\n  isValid: boolean;\n  blockRecipientRemoval?: boolean;\n  shouldBlockSelection?: boolean;\n  canExpand?: boolean;\n  isEditing?: boolean;\n}\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport interface ISelectedPeopleItemProps extends ISelectedItemProps<IExtendedPersonaProps> {\n  onExpandItem?: () => void;\n  renderPersonaCoin?: IRenderFunction<IPersonaProps>;\n  renderPrimaryText?: IRenderFunction<IPersonaProps>;\n}\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport interface ISelectedPeopleProps extends IBaseSelectedItemsListProps<IExtendedPersonaProps> {\n  onExpandGroup?: (item: IExtendedPersonaProps) => void;\n  removeMenuItemText?: string;\n  copyMenuItemText?: string;\n  editMenuItemText?: string;\n  getEditingItemText?: (item: IExtendedPersonaProps) => string;\n  onRenderFloatingPicker?: React.ComponentType<IBaseFloatingPickerProps<IPersonaProps>>;\n  floatingPickerProps?: IBaseFloatingPickerProps<IPersonaProps>;\n}\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport class BasePeopleSelectedItemsList extends BaseSelectedItemsList<IExtendedPersonaProps, ISelectedPeopleProps> {}\n\n/**\n * Standard People Picker.\n */\nexport class SelectedPeopleList extends BasePeopleSelectedItemsList {\n  public static defaultProps: any = {\n    onRenderItem: (props: ISelectedPeopleItemProps) => <ExtendedSelectedItem {...props} />,\n  };\n\n  protected renderItems = (): JSX.Element[] => {\n    const { items } = this.state;\n    return items.map((item: IExtendedPersonaProps, index: number) => this._renderItem(item, index));\n  };\n\n  private _renderItem(item: IExtendedPersonaProps, index: number): JSX.Element {\n    const { removeButtonAriaLabel } = this.props;\n    const expandGroup = this.props.onExpandGroup;\n    const props = {\n      item,\n      index,\n      key: item.key ? item.key : index,\n      selected: this.selection.isIndexSelected(index),\n      onRemoveItem: () => this.removeItem(item),\n      onItemChange: this.onItemChange,\n      removeButtonAriaLabel: removeButtonAriaLabel,\n      onCopyItem: (itemToCopy: IExtendedPersonaProps) => this.copyItems([itemToCopy]),\n      onExpandItem: expandGroup ? () => expandGroup(item) : undefined,\n      menuItems: this._createMenuItems(item),\n    };\n\n    const hasContextMenu = props.menuItems.length > 0;\n    if ((item as IExtendedPersonaProps).isEditing && hasContextMenu) {\n      return (\n        <EditingItem\n          {...props}\n          onRenderFloatingPicker={this.props.onRenderFloatingPicker}\n          floatingPickerProps={this.props.floatingPickerProps}\n          onEditingComplete={this._completeEditing}\n          getEditingItemText={this.props.getEditingItemText}\n        />\n      );\n    } else {\n      // This cast is here because we are guaranteed that onRenderItem is set\n      // from static defaultProps\n      // TODO: Move this component to composition with required onRenderItem to remove\n      // this cast.\n      const onRenderItem = this.props.onRenderItem as (props: ISelectedPeopleItemProps) => JSX.Element;\n      const renderedItem = onRenderItem(props);\n      return hasContextMenu ? (\n        <SelectedItemWithContextMenu\n          key={props.key}\n          renderedItem={renderedItem}\n          beginEditing={this._beginEditing}\n          menuItems={this._createMenuItems(props.item)}\n          item={props.item}\n        />\n      ) : (\n        renderedItem\n      );\n    }\n  }\n\n  private _beginEditing = (item: IExtendedPersonaProps): void => {\n    item.isEditing = true;\n    this.forceUpdate();\n  };\n\n  private _completeEditing = (oldItem: any, newItem: any): void => {\n    oldItem.isEditing = false;\n    this.replaceItem(oldItem, newItem);\n  };\n\n  private _createMenuItems(item: any): IContextualMenuItem[] {\n    const menuItems: IContextualMenuItem[] = [];\n\n    if (this.props.editMenuItemText && this.props.getEditingItemText) {\n      menuItems.push({\n        key: 'Edit',\n        text: this.props.editMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          this._beginEditing(menuItem.data);\n        },\n        data: item,\n      });\n    }\n\n    if (this.props.removeMenuItemText) {\n      menuItems.push({\n        key: 'Remove',\n        text: this.props.removeMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          this.removeItem(menuItem.data as IExtendedPersonaProps);\n        },\n        data: item,\n      });\n    }\n\n    if (this.props.copyMenuItemText) {\n      menuItems.push({\n        key: 'Copy',\n        text: this.props.copyMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          if (this.props.onCopyItems) {\n            (this.copyItems as (items: IExtendedPersonaProps[]) => void)([menuItem.data] as IExtendedPersonaProps[]);\n          }\n        },\n        data: item,\n      });\n    }\n\n    return menuItems;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}