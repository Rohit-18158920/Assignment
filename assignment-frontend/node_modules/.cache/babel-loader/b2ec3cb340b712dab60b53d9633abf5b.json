{"ast":null,"code":"import { AnimationClassNames } from '../../Styling';\nexport var getStyles = function (props) {\n  var className = props.className,\n      _a = props.beakWidth,\n      beakWidth = _a === void 0 ? 16 : _a,\n      _b = props.gapSpace,\n      gapSpace = _b === void 0 ? 0 : _b,\n      maxWidth = props.maxWidth,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts,\n      effects = theme.effects; // The math here is done to account for the 45 degree rotation of the beak\n  // and sub-pixel rounding that differs across browsers, which is more noticeable when\n  // the device pixel ratio is larger\n\n  var tooltipGapSpace = -(Math.sqrt(beakWidth * beakWidth / 2) + gapSpace) + 1 / window.devicePixelRatio;\n  return {\n    root: ['ms-Tooltip', theme.fonts.medium, AnimationClassNames.fadeIn200, {\n      background: semanticColors.menuBackground,\n      boxShadow: effects.elevation8,\n      padding: '8px',\n      maxWidth: maxWidth,\n      selectors: {\n        ':after': {\n          content: \"''\",\n          position: 'absolute',\n          bottom: tooltipGapSpace,\n          left: tooltipGapSpace,\n          right: tooltipGapSpace,\n          top: tooltipGapSpace,\n          zIndex: 0\n        }\n      }\n    }, className],\n    content: ['ms-Tooltip-content', fonts.small, {\n      position: 'relative',\n      zIndex: 1,\n      color: semanticColors.menuItemText,\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      overflow: 'hidden'\n    }],\n    subText: ['ms-Tooltip-subtext', {\n      // Using inherit here to avoid unintentional global overrides of the <p> tag.\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      color: 'inherit',\n      margin: 0\n    }]\n  };\n};","map":{"version":3,"sources":["components/Tooltip/Tooltip.styles.ts"],"names":[],"mappings":"AACA,SAAS,mBAAT,QAAoC,eAApC;AAEA,OAAO,IAAM,SAAS,GAAG,UAAC,KAAD,EAA0B;AACzC,MAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AAAA,MAAW,EAAA,GAAA,KAAA,CAAA,SAAX;AAAA,MAAW,SAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAX;AAAA,MAA2B,EAAA,GAAA,KAAA,CAAA,QAA3B;AAAA,MAA2B,QAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAA3B;AAAA,MAAyC,QAAA,GAAA,KAAA,CAAA,QAAzC;AAAA,MAAmD,KAAA,GAAA,KAAA,CAAA,KAAnD;AACA,MAAA,cAAA,GAAA,KAAA,CAAA,cAAA;AAAA,MAAgB,KAAA,GAAA,KAAA,CAAA,KAAhB;AAAA,MAAuB,OAAA,GAAA,KAAA,CAAA,OAAvB,CAFyC,CAIjD;AACA;AACA;;AACA,MAAM,eAAe,GAAG,EAAE,IAAI,CAAC,IAAL,CAAW,SAAS,GAAG,SAAb,GAA0B,CAApC,IAAyC,QAA3C,IAAuD,IAAI,MAAM,CAAC,gBAA1F;AAEA,SAAO;AACL,IAAA,IAAI,EAAE,CACJ,YADI,EAEJ,KAAK,CAAC,KAAN,CAAY,MAFR,EAGJ,mBAAmB,CAAC,SAHhB,EAIJ;AACE,MAAA,UAAU,EAAE,cAAc,CAAC,cAD7B;AAEE,MAAA,SAAS,EAAE,OAAO,CAAC,UAFrB;AAGE,MAAA,OAAO,EAAE,KAHX;AAIE,MAAA,QAAQ,EAAE,QAJZ;AAKE,MAAA,SAAS,EAAE;AACT,kBAAU;AACR,UAAA,OAAO,EAAE,IADD;AAER,UAAA,QAAQ,EAAE,UAFF;AAGR,UAAA,MAAM,EAAE,eAHA;AAIR,UAAA,IAAI,EAAE,eAJE;AAKR,UAAA,KAAK,EAAE,eALC;AAMR,UAAA,GAAG,EAAE,eANG;AAOR,UAAA,MAAM,EAAE;AAPA;AADD;AALb,KAJI,EAqBJ,SArBI,CADD;AAwBL,IAAA,OAAO,EAAE,CACP,oBADO,EAEP,KAAK,CAAC,KAFC,EAGP;AACE,MAAA,QAAQ,EAAE,UADZ;AAEE,MAAA,MAAM,EAAE,CAFV;AAGE,MAAA,KAAK,EAAE,cAAc,CAAC,YAHxB;AAIE,MAAA,QAAQ,EAAE,YAJZ;AAKE,MAAA,YAAY,EAAE,YALhB;AAME,MAAA,QAAQ,EAAE;AANZ,KAHO,CAxBJ;AAoCL,IAAA,OAAO,EAAE,CACP,oBADO,EAEP;AACE;AACA,MAAA,QAAQ,EAAE,SAFZ;AAGE,MAAA,UAAU,EAAE,SAHd;AAIE,MAAA,KAAK,EAAE,SAJT;AAKE,MAAA,MAAM,EAAE;AALV,KAFO;AApCJ,GAAP;AA+CD,CAxDM","sourcesContent":["import { ITooltipStyleProps, ITooltipStyles } from './Tooltip.types';\nimport { AnimationClassNames } from '../../Styling';\n\nexport const getStyles = (props: ITooltipStyleProps): ITooltipStyles => {\n  const { className, beakWidth = 16, gapSpace = 0, maxWidth, theme } = props;\n  const { semanticColors, fonts, effects } = theme;\n\n  // The math here is done to account for the 45 degree rotation of the beak\n  // and sub-pixel rounding that differs across browsers, which is more noticeable when\n  // the device pixel ratio is larger\n  const tooltipGapSpace = -(Math.sqrt((beakWidth * beakWidth) / 2) + gapSpace) + 1 / window.devicePixelRatio;\n\n  return {\n    root: [\n      'ms-Tooltip',\n      theme.fonts.medium,\n      AnimationClassNames.fadeIn200,\n      {\n        background: semanticColors.menuBackground,\n        boxShadow: effects.elevation8,\n        padding: '8px',\n        maxWidth: maxWidth,\n        selectors: {\n          ':after': {\n            content: `''`,\n            position: 'absolute',\n            bottom: tooltipGapSpace,\n            left: tooltipGapSpace,\n            right: tooltipGapSpace,\n            top: tooltipGapSpace,\n            zIndex: 0,\n          },\n        },\n      },\n      className,\n    ],\n    content: [\n      'ms-Tooltip-content',\n      fonts.small,\n      {\n        position: 'relative',\n        zIndex: 1,\n        color: semanticColors.menuItemText,\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n        overflow: 'hidden',\n      },\n    ],\n    subText: [\n      'ms-Tooltip-subtext',\n      {\n        // Using inherit here to avoid unintentional global overrides of the <p> tag.\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        color: 'inherit',\n        margin: 0,\n      },\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}