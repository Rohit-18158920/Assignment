{"ast":null,"code":"var _a;\n\nimport { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { Async, css, divProperties, elementContains, focusFirstChild, getDocument, getNativeProps, getWindow, on, shallowCompare } from '../../Utilities';\nimport { positionCallout, getMaxHeight, RectangleEdge, positionCard, getBoundsFromTargetWindow } from '../../utilities/positioning';\nimport { Popup } from '../../Popup';\nimport { classNamesFunction } from '../../Utilities';\nimport { AnimationClassNames } from '../../Styling';\nvar ANIMATIONS = (_a = {}, _a[RectangleEdge.top] = AnimationClassNames.slideUpIn10, _a[RectangleEdge.bottom] = AnimationClassNames.slideDownIn10, _a[RectangleEdge.left] = AnimationClassNames.slideLeftIn10, _a[RectangleEdge.right] = AnimationClassNames.slideRightIn10, _a);\nvar getClassNames = classNamesFunction({\n  disableCaching: true\n});\nvar BEAK_ORIGIN_POSITION = {\n  top: 0,\n  left: 0\n}; // Microsoft Edge will overwrite inline styles if there is an animation pertaining to that style.\n// To help ensure that edge will respect the offscreen style opacity\n// filter needs to be added as an additional way to set opacity.\n// Also set pointer-events: none so that the callout will not occlude the element it is\n// going to be positioned against\n\nvar OFF_SCREEN_STYLE = {\n  opacity: 0,\n  filter: 'opacity(0)',\n  pointerEvents: 'none'\n}; // role and role description go hand-in-hand. Both would be included by spreading getNativeProps for a basic element\n// This constant array can be used to filter these out of native props spread on callout root and apply them together on\n// calloutMain (the Popup component within the callout)\n\nvar ARIA_ROLE_ATTRIBUTES = ['role', 'aria-roledescription'];\n\nvar CalloutContentBase =\n/** @class */\nfunction (_super) {\n  __extends(CalloutContentBase, _super);\n\n  function CalloutContentBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._hostElement = React.createRef();\n    _this._calloutElement = React.createRef();\n    _this._hasListeners = false;\n    _this._disposables = [];\n\n    _this.dismiss = function (ev) {\n      var onDismiss = _this.props.onDismiss;\n\n      if (onDismiss) {\n        onDismiss(ev);\n      }\n    };\n\n    _this._dismissOnScroll = function (ev) {\n      // eslint-disable-next-line deprecation/deprecation\n      var _a = _this.props,\n          preventDismissOnEvent = _a.preventDismissOnEvent,\n          preventDismissOnScroll = _a.preventDismissOnScroll;\n\n      if (_this.state.positions && (preventDismissOnEvent && !preventDismissOnEvent(ev) || !preventDismissOnEvent && !preventDismissOnScroll)) {\n        _this._dismissOnClickOrScroll(ev);\n      }\n    };\n\n    _this._dismissOnResize = function (ev) {\n      // eslint-disable-next-line deprecation/deprecation\n      var _a = _this.props,\n          preventDismissOnEvent = _a.preventDismissOnEvent,\n          preventDismissOnResize = _a.preventDismissOnResize;\n\n      if (preventDismissOnEvent && !preventDismissOnEvent(ev) || !preventDismissOnEvent && !preventDismissOnResize) {\n        _this.dismiss(ev);\n      }\n    };\n\n    _this._dismissOnLostFocus = function (ev) {\n      // eslint-disable-next-line deprecation/deprecation\n      var _a = _this.props,\n          preventDismissOnEvent = _a.preventDismissOnEvent,\n          preventDismissOnLostFocus = _a.preventDismissOnLostFocus;\n\n      if (preventDismissOnEvent && !preventDismissOnEvent(ev) || !preventDismissOnEvent && !preventDismissOnLostFocus) {\n        _this._dismissOnClickOrScroll(ev);\n      }\n    };\n\n    _this._setInitialFocus = function () {\n      if (_this.props.setInitialFocus && !_this._didSetInitialFocus && _this.state.positions && _this._calloutElement.current) {\n        _this._didSetInitialFocus = true;\n\n        _this._async.requestAnimationFrame(function () {\n          return focusFirstChild(_this._calloutElement.current);\n        }, _this._calloutElement.current);\n      }\n    };\n\n    _this._onComponentDidMount = function () {\n      _this._addListeners();\n\n      if (_this.props.onLayerMounted) {\n        _this.props.onLayerMounted();\n      }\n\n      _this._updateAsyncPosition();\n\n      _this._setHeightOffsetEveryFrame();\n    };\n\n    _this._dismissOnTargetWindowBlur = function (ev) {\n      // eslint-disable-next-line deprecation/deprecation\n      var _a = _this.props,\n          preventDismissOnEvent = _a.preventDismissOnEvent,\n          preventDismissOnLostFocus = _a.preventDismissOnLostFocus,\n          shouldDismissOnWindowFocus = _a.shouldDismissOnWindowFocus; // Do nothing\n\n      if (!shouldDismissOnWindowFocus) {\n        return;\n      }\n\n      if ((preventDismissOnEvent && !preventDismissOnEvent(ev) || !preventDismissOnEvent && !preventDismissOnLostFocus) && !_this._targetWindow.document.hasFocus() && ev.relatedTarget === null) {\n        _this.dismiss(ev);\n      }\n    };\n\n    _this._mouseDownOnPopup = function () {\n      _this._isMouseDownOnPopup = true;\n    };\n\n    _this._mouseUpOnPopup = function () {\n      _this._isMouseDownOnPopup = false;\n    };\n\n    _this._async = new Async(_this);\n    _this._didSetInitialFocus = false;\n    _this.state = {\n      positions: undefined,\n      slideDirectionalClassName: undefined,\n      // @TODO it looks like this is not even being used anymore.\n      calloutElementRect: undefined,\n      heightOffset: 0\n    };\n    _this._positionAttempts = 0;\n    return _this;\n  }\n\n  CalloutContentBase.prototype.componentDidUpdate = function () {\n    if (!this.props.hidden) {\n      this._setInitialFocus();\n\n      if (!this._hasListeners) {\n        this._addListeners();\n      }\n\n      this._updateAsyncPosition();\n    } else {\n      if (this._hasListeners) {\n        this._removeListeners();\n      }\n    }\n  };\n\n  CalloutContentBase.prototype.shouldComponentUpdate = function (newProps, newState) {\n    if (!newProps.shouldUpdateWhenHidden && this.props.hidden && newProps.hidden) {\n      // Do not update when hidden.\n      return false;\n    }\n\n    return !shallowCompare(this.props, newProps) || !shallowCompare(this.state, newState);\n  };\n\n  CalloutContentBase.prototype.UNSAFE_componentWillMount = function () {\n    this._setTargetWindowAndElement(this._getTarget());\n  };\n\n  CalloutContentBase.prototype.componentWillUnmount = function () {\n    this._async.dispose();\n\n    this._disposables.forEach(function (dispose) {\n      return dispose();\n    });\n  };\n\n  CalloutContentBase.prototype.UNSAFE_componentWillUpdate = function (newProps) {\n    // If the target element changed, find the new one. If we are tracking target with class name, always find element\n    // because we do not know if fabric has rendered a new element and disposed the old element.\n    var newTarget = this._getTarget(newProps);\n\n    var oldTarget = this._getTarget();\n\n    if ((newTarget !== oldTarget || typeof newTarget === 'string' || newTarget instanceof String) && !this._blockResetHeight) {\n      this._maxHeight = undefined;\n\n      this._setTargetWindowAndElement(newTarget);\n    }\n\n    if (newProps.gapSpace !== this.props.gapSpace || this.props.beakWidth !== newProps.beakWidth) {\n      this._maxHeight = undefined;\n    }\n\n    if (newProps.finalHeight !== this.props.finalHeight) {\n      this._setHeightOffsetEveryFrame();\n    } // Ensure positioning is recalculated when we are about to show a persisted menu.\n\n\n    if (this._didPositionPropsChange(newProps, this.props)) {\n      this._maxHeight = undefined; // Target might have been updated while hidden.\n\n      this._setTargetWindowAndElement(newTarget);\n\n      this.setState({\n        positions: undefined\n      });\n      this._didSetInitialFocus = false;\n      this._bounds = undefined;\n    }\n\n    this._blockResetHeight = false;\n  };\n\n  CalloutContentBase.prototype.componentDidMount = function () {\n    if (!this.props.hidden) {\n      this._onComponentDidMount();\n    }\n  };\n\n  CalloutContentBase.prototype.render = function () {\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\n    if (!this._targetWindow) {\n      return null;\n    }\n\n    var target = this.props.target;\n    var _a = this.props,\n        styles = _a.styles,\n        style = _a.style,\n        ariaLabel = _a.ariaLabel,\n        ariaDescribedBy = _a.ariaDescribedBy,\n        ariaLabelledBy = _a.ariaLabelledBy,\n        className = _a.className,\n        isBeakVisible = _a.isBeakVisible,\n        children = _a.children,\n        beakWidth = _a.beakWidth,\n        calloutWidth = _a.calloutWidth,\n        calloutMaxWidth = _a.calloutMaxWidth,\n        calloutMinWidth = _a.calloutMinWidth,\n        finalHeight = _a.finalHeight,\n        _b = _a.hideOverflow,\n        hideOverflow = _b === void 0 ? !!finalHeight : _b,\n        backgroundColor = _a.backgroundColor,\n        calloutMaxHeight = _a.calloutMaxHeight,\n        onScroll = _a.onScroll,\n        // eslint-disable-next-line deprecation/deprecation\n    _c = _a.shouldRestoreFocus,\n        // eslint-disable-next-line deprecation/deprecation\n    shouldRestoreFocus = _c === void 0 ? true : _c;\n    target = this._getTarget();\n    var positions = this.state.positions;\n    var getContentMaxHeight = this._getMaxHeight() ? this._getMaxHeight() + this.state.heightOffset : undefined;\n    var contentMaxHeight = calloutMaxHeight && getContentMaxHeight && calloutMaxHeight < getContentMaxHeight ? calloutMaxHeight : getContentMaxHeight;\n    var overflowYHidden = hideOverflow;\n    var beakVisible = isBeakVisible && !!target;\n    this._classNames = getClassNames(styles, {\n      theme: this.props.theme,\n      className: className,\n      overflowYHidden: overflowYHidden,\n      calloutWidth: calloutWidth,\n      positions: positions,\n      beakWidth: beakWidth,\n      backgroundColor: backgroundColor,\n      calloutMinWidth: calloutMinWidth,\n      calloutMaxWidth: calloutMaxWidth\n    });\n\n    var overflowStyle = __assign(__assign(__assign({}, style), {\n      maxHeight: contentMaxHeight\n    }), overflowYHidden && {\n      overflowY: 'hidden'\n    });\n\n    var visibilityStyle = this.props.hidden ? {\n      visibility: 'hidden'\n    } : undefined; // React.CSSProperties does not understand IRawStyle, so the inline animations will need to be cast as any for now.\n\n    var content = React.createElement(\"div\", {\n      ref: this._hostElement,\n      className: this._classNames.container,\n      style: visibilityStyle\n    }, React.createElement(\"div\", __assign({}, getNativeProps(this.props, divProperties, ARIA_ROLE_ATTRIBUTES), {\n      className: css(this._classNames.root, positions && positions.targetEdge && ANIMATIONS[positions.targetEdge]),\n      style: positions ? positions.elementPosition : OFF_SCREEN_STYLE,\n      // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n      // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n      tabIndex: -1,\n      ref: this._calloutElement\n    }), beakVisible && React.createElement(\"div\", {\n      className: this._classNames.beak,\n      style: this._getBeakPosition()\n    }), beakVisible && React.createElement(\"div\", {\n      className: this._classNames.beakCurtain\n    }), React.createElement(Popup, __assign({}, getNativeProps(this.props, ARIA_ROLE_ATTRIBUTES), {\n      ariaLabel: ariaLabel,\n      onRestoreFocus: this.props.onRestoreFocus,\n      ariaDescribedBy: ariaDescribedBy,\n      ariaLabelledBy: ariaLabelledBy,\n      className: this._classNames.calloutMain,\n      onDismiss: this.dismiss,\n      onScroll: onScroll,\n      shouldRestoreFocus: shouldRestoreFocus,\n      style: overflowStyle,\n      onMouseDown: this._mouseDownOnPopup,\n      onMouseUp: this._mouseUpOnPopup\n    }), children)));\n    return content;\n  };\n\n  CalloutContentBase.prototype._dismissOnClickOrScroll = function (ev) {\n    var target = ev.target;\n    var isEventTargetOutsideCallout = this._hostElement.current && !elementContains(this._hostElement.current, target); // If mouse is pressed down on callout but moved outside then released, don't dismiss the callout.\n\n    if (isEventTargetOutsideCallout && this._isMouseDownOnPopup) {\n      this._isMouseDownOnPopup = false;\n      return;\n    }\n\n    if (!this._target && isEventTargetOutsideCallout || ev.target !== this._targetWindow && isEventTargetOutsideCallout && (this._target.stopPropagation || !this._target || this.props.dismissOnTargetClick || target !== this._target && !elementContains(this._target, target))) {\n      this.dismiss(ev);\n    }\n  };\n\n  CalloutContentBase.prototype._addListeners = function () {\n    var _this = this; // This is added so the callout will dismiss when the window is scrolled\n    // but not when something inside the callout is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the callout.\n\n\n    this._async.setTimeout(function () {\n      _this._disposables.push(on(_this._targetWindow, 'scroll', _this._dismissOnScroll, true), on(_this._targetWindow, 'resize', _this._dismissOnResize, true), on(_this._targetWindow.document.documentElement, 'focus', _this._dismissOnLostFocus, true), on(_this._targetWindow.document.documentElement, 'click', _this._dismissOnLostFocus, true), on(_this._targetWindow, 'blur', _this._dismissOnTargetWindowBlur, true));\n\n      _this._hasListeners = true;\n    }, 0);\n  };\n\n  CalloutContentBase.prototype._removeListeners = function () {\n    this._disposables.forEach(function (dispose) {\n      return dispose();\n    });\n\n    this._disposables = [];\n    this._hasListeners = false;\n  };\n\n  CalloutContentBase.prototype._updateAsyncPosition = function () {\n    var _this = this;\n\n    this._async.requestAnimationFrame(function () {\n      return _this._updatePosition();\n    }, this._calloutElement.current);\n  };\n\n  CalloutContentBase.prototype._getBeakPosition = function () {\n    var positions = this.state.positions;\n\n    var beakPostionStyle = __assign({}, positions && positions.beakPosition ? positions.beakPosition.elementPosition : null);\n\n    if (!beakPostionStyle.top && !beakPostionStyle.bottom && !beakPostionStyle.left && !beakPostionStyle.right) {\n      beakPostionStyle.left = BEAK_ORIGIN_POSITION.left;\n      beakPostionStyle.top = BEAK_ORIGIN_POSITION.top;\n    }\n\n    return beakPostionStyle;\n  };\n\n  CalloutContentBase.prototype._updatePosition = function () {\n    // Try to update the target, page might have changed\n    this._setTargetWindowAndElement(this._getTarget());\n\n    var positions = this.state.positions;\n    var hostElement = this._hostElement.current;\n    var calloutElement = this._calloutElement.current; // If we expect a target element to position against, we need to wait until `this._target` is resolved. Otherwise\n    // we can try to position.\n\n    var expectsTarget = !!this.props.target;\n\n    if (hostElement && calloutElement && (!expectsTarget || this._target)) {\n      var currentProps = __assign({}, this.props);\n\n      currentProps.bounds = this._getBounds();\n      currentProps.target = this._target; // If there is a finalHeight given then we assume that the user knows and will handle\n      // additional positioning adjustments so we should call positionCard\n\n      var newPositions = this.props.finalHeight ? positionCard(currentProps, hostElement, calloutElement, positions) : positionCallout(currentProps, hostElement, calloutElement, positions); // Set the new position only when the positions are not exists or one of the new callout positions are different.\n      // The position should not change if the position is within 2 decimal places.\n\n      if (!positions && newPositions || positions && newPositions && !this._arePositionsEqual(positions, newPositions) && this._positionAttempts < 5) {\n        // We should not reposition the callout more than a few times, if it is then the content is likely resizing\n        // and we should stop trying to reposition to prevent a stack overflow.\n        this._positionAttempts++;\n        this.setState({\n          positions: newPositions\n        });\n      } else if (this._positionAttempts > 0) {\n        // Only call the onPositioned callback if the callout has been re-positioned at least once.\n        this._positionAttempts = 0;\n\n        if (this.props.onPositioned) {\n          this.props.onPositioned(this.state.positions);\n        }\n      }\n    }\n  };\n\n  CalloutContentBase.prototype._getBounds = function () {\n    if (!this._bounds) {\n      var bounds = this.props.bounds;\n      var currentBounds = typeof bounds === 'function' ? bounds(this.props.target, this._targetWindow) : bounds;\n\n      if (!currentBounds) {\n        currentBounds = getBoundsFromTargetWindow(this._target, this._targetWindow);\n        currentBounds = {\n          top: currentBounds.top + this.props.minPagePadding,\n          left: currentBounds.left + this.props.minPagePadding,\n          right: currentBounds.right - this.props.minPagePadding,\n          bottom: currentBounds.bottom - this.props.minPagePadding,\n          width: currentBounds.width - this.props.minPagePadding * 2,\n          height: currentBounds.height - this.props.minPagePadding * 2\n        };\n      }\n\n      this._bounds = currentBounds;\n    }\n\n    return this._bounds;\n  }; // Max height should remain as synchronous as possible, which is why it is not done using set state.\n  // It needs to be synchronous since it will impact the ultimate position of the callout.\n\n\n  CalloutContentBase.prototype._getMaxHeight = function () {\n    var _this = this;\n\n    if (!this._maxHeight) {\n      if (this.props.directionalHintFixed && this._target) {\n        var beakWidth = this.props.isBeakVisible ? this.props.beakWidth : 0;\n        var gapSpace = this.props.gapSpace ? this.props.gapSpace : 0; // Since the callout cannot measure it's border size it must be taken into account here. Otherwise it will\n        // overlap with the target.\n\n        var totalGap_1 = gapSpace + beakWidth;\n\n        this._async.requestAnimationFrame(function () {\n          if (_this._target) {\n            _this._maxHeight = getMaxHeight(_this._target, _this.props.directionalHint, totalGap_1, _this._getBounds(), _this.props.coverTarget);\n            _this._blockResetHeight = true;\n\n            _this.forceUpdate();\n          }\n        }, this._target);\n      } else {\n        this._maxHeight = this._getBounds().height;\n      }\n    }\n\n    return this._maxHeight;\n  };\n\n  CalloutContentBase.prototype._arePositionsEqual = function (positions, newPosition) {\n    return this._comparePositions(positions.elementPosition, newPosition.elementPosition) && this._comparePositions(positions.beakPosition.elementPosition, newPosition.beakPosition.elementPosition);\n  };\n\n  CalloutContentBase.prototype._comparePositions = function (oldPositions, newPositions) {\n    for (var key in newPositions) {\n      if (newPositions.hasOwnProperty(key)) {\n        var oldPositionEdge = oldPositions[key];\n        var newPositionEdge = newPositions[key];\n\n        if (oldPositionEdge !== undefined && newPositionEdge !== undefined) {\n          if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  CalloutContentBase.prototype._setTargetWindowAndElement = function (target) {\n    var currentElement = this._calloutElement.current;\n\n    if (target) {\n      if (typeof target === 'string') {\n        var currentDoc = getDocument(currentElement);\n        this._target = currentDoc ? currentDoc.querySelector(target) : null;\n        this._targetWindow = getWindow(currentElement); // Cast to any prevents error about stopPropagation always existing\n      } else if (target.stopPropagation) {\n        this._targetWindow = getWindow(target.target);\n        this._target = target; // Same reason here\n      } else if (target.getBoundingClientRect) {\n        var targetElement = target;\n        this._targetWindow = getWindow(targetElement);\n        this._target = targetElement;\n      } else if (target.current !== undefined) {\n        this._target = target.current;\n        this._targetWindow = getWindow(this._target); // HTMLImgElements can have x and y values. The check for it being a point must go last.\n      } else {\n        this._targetWindow = getWindow(currentElement);\n        this._target = target;\n      }\n    } else {\n      this._targetWindow = getWindow(currentElement);\n    }\n  };\n\n  CalloutContentBase.prototype._setHeightOffsetEveryFrame = function () {\n    var _this = this;\n\n    if (this._calloutElement.current && this.props.finalHeight) {\n      this._setHeightOffsetTimer = this._async.requestAnimationFrame(function () {\n        var calloutMainElem = _this._calloutElement.current && _this._calloutElement.current.lastChild;\n\n        if (!calloutMainElem) {\n          return;\n        }\n\n        var cardScrollHeight = calloutMainElem.scrollHeight;\n        var cardCurrHeight = calloutMainElem.offsetHeight;\n        var scrollDiff = cardScrollHeight - cardCurrHeight;\n\n        _this.setState({\n          heightOffset: _this.state.heightOffset + scrollDiff\n        });\n\n        if (calloutMainElem.offsetHeight < _this.props.finalHeight) {\n          _this._setHeightOffsetEveryFrame();\n        } else {\n          _this._async.cancelAnimationFrame(_this._setHeightOffsetTimer, _this._calloutElement.current);\n        }\n      }, this._calloutElement.current);\n    }\n  }; // Whether or not the current positions should be reset\n\n\n  CalloutContentBase.prototype._didPositionPropsChange = function (newProps, oldProps) {\n    return !newProps.hidden && newProps.hidden !== oldProps.hidden || newProps.directionalHint !== oldProps.directionalHint;\n  };\n\n  CalloutContentBase.prototype._getTarget = function (props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    var target = props.target;\n    return target;\n  };\n\n  CalloutContentBase.defaultProps = {\n    preventDismissOnLostFocus: false,\n    preventDismissOnScroll: false,\n    preventDismissOnResize: false,\n    isBeakVisible: true,\n    beakWidth: 16,\n    gapSpace: 0,\n    minPagePadding: 8,\n    directionalHint: DirectionalHint.bottomAutoEdge\n  };\n  return CalloutContentBase;\n}(React.Component);\n\nexport { CalloutContentBase };","map":{"version":3,"sources":["components/Callout/CalloutContent.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ICalloutProps, ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport {\n  Async,\n  Point,\n  IRectangle,\n  css,\n  divProperties,\n  elementContains,\n  focusFirstChild,\n  getDocument,\n  getNativeProps,\n  getWindow,\n  on,\n  shallowCompare,\n} from '../../Utilities';\nimport {\n  positionCallout,\n  ICalloutPositionedInfo,\n  IPositionProps,\n  getMaxHeight,\n  IPosition,\n  RectangleEdge,\n  positionCard,\n  getBoundsFromTargetWindow,\n} from '../../utilities/positioning';\nimport { Popup } from '../../Popup';\nimport { classNamesFunction } from '../../Utilities';\nimport { AnimationClassNames } from '../../Styling';\nimport { Target } from '@uifabric/react-hooks';\n\nconst ANIMATIONS: { [key: number]: string | undefined } = {\n  [RectangleEdge.top]: AnimationClassNames.slideUpIn10,\n  [RectangleEdge.bottom]: AnimationClassNames.slideDownIn10,\n  [RectangleEdge.left]: AnimationClassNames.slideLeftIn10,\n  [RectangleEdge.right]: AnimationClassNames.slideRightIn10,\n};\n\nconst getClassNames = classNamesFunction<ICalloutContentStyleProps, ICalloutContentStyles>({\n  disableCaching: true, // disabling caching because stylesProp.position mutates often\n});\n\nconst BEAK_ORIGIN_POSITION = { top: 0, left: 0 };\n// Microsoft Edge will overwrite inline styles if there is an animation pertaining to that style.\n// To help ensure that edge will respect the offscreen style opacity\n// filter needs to be added as an additional way to set opacity.\n// Also set pointer-events: none so that the callout will not occlude the element it is\n// going to be positioned against\nconst OFF_SCREEN_STYLE: React.CSSProperties = { opacity: 0, filter: 'opacity(0)', pointerEvents: 'none' };\n// role and role description go hand-in-hand. Both would be included by spreading getNativeProps for a basic element\n// This constant array can be used to filter these out of native props spread on callout root and apply them together on\n// calloutMain (the Popup component within the callout)\nconst ARIA_ROLE_ATTRIBUTES = ['role', 'aria-roledescription'];\n\nexport interface ICalloutState {\n  positions?: ICalloutPositionedInfo;\n  slideDirectionalClassName?: string;\n  calloutElementRect?: ClientRect;\n  heightOffset?: number;\n}\n\nexport class CalloutContentBase extends React.Component<ICalloutProps, ICalloutState> {\n  public static defaultProps = {\n    preventDismissOnLostFocus: false,\n    preventDismissOnScroll: false,\n    preventDismissOnResize: false,\n    isBeakVisible: true,\n    beakWidth: 16,\n    gapSpace: 0,\n    minPagePadding: 8,\n    directionalHint: DirectionalHint.bottomAutoEdge,\n  };\n\n  private _classNames: { [key in keyof ICalloutContentStyles]: string };\n  private _didSetInitialFocus: boolean;\n  private _hostElement = React.createRef<HTMLDivElement>();\n  private _calloutElement = React.createRef<HTMLDivElement>();\n  private _targetWindow: Window;\n  private _bounds: IRectangle | undefined;\n  private _positionAttempts: number;\n  private _target: Element | MouseEvent | Point | null;\n  private _setHeightOffsetTimer: number;\n  private _hasListeners = false;\n  private _maxHeight: number | undefined;\n  private _blockResetHeight: boolean;\n  private _isMouseDownOnPopup: boolean;\n\n  private _async: Async;\n  private _disposables: (() => void)[] = [];\n\n  constructor(props: ICalloutProps) {\n    super(props);\n\n    this._async = new Async(this);\n    this._didSetInitialFocus = false;\n    this.state = {\n      positions: undefined,\n      slideDirectionalClassName: undefined,\n      // @TODO it looks like this is not even being used anymore.\n      calloutElementRect: undefined,\n      heightOffset: 0,\n    };\n    this._positionAttempts = 0;\n  }\n\n  public componentDidUpdate() {\n    if (!this.props.hidden) {\n      this._setInitialFocus();\n      if (!this._hasListeners) {\n        this._addListeners();\n      }\n      this._updateAsyncPosition();\n    } else {\n      if (this._hasListeners) {\n        this._removeListeners();\n      }\n    }\n  }\n\n  public shouldComponentUpdate(newProps: ICalloutProps, newState: ICalloutState): boolean {\n    if (!newProps.shouldUpdateWhenHidden && this.props.hidden && newProps.hidden) {\n      // Do not update when hidden.\n      return false;\n    }\n\n    return !shallowCompare(this.props, newProps) || !shallowCompare(this.state, newState);\n  }\n\n  public UNSAFE_componentWillMount() {\n    this._setTargetWindowAndElement(this._getTarget());\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n    this._disposables.forEach((dispose: () => void) => dispose());\n  }\n\n  public UNSAFE_componentWillUpdate(newProps: ICalloutProps): void {\n    // If the target element changed, find the new one. If we are tracking target with class name, always find element\n    // because we do not know if fabric has rendered a new element and disposed the old element.\n    const newTarget = this._getTarget(newProps);\n    const oldTarget = this._getTarget();\n    if (\n      (newTarget !== oldTarget || typeof newTarget === 'string' || newTarget instanceof String) &&\n      !this._blockResetHeight\n    ) {\n      this._maxHeight = undefined;\n      this._setTargetWindowAndElement(newTarget!);\n    }\n    if (newProps.gapSpace !== this.props.gapSpace || this.props.beakWidth !== newProps.beakWidth) {\n      this._maxHeight = undefined;\n    }\n\n    if (newProps.finalHeight !== this.props.finalHeight) {\n      this._setHeightOffsetEveryFrame();\n    }\n\n    // Ensure positioning is recalculated when we are about to show a persisted menu.\n    if (this._didPositionPropsChange(newProps, this.props)) {\n      this._maxHeight = undefined;\n      // Target might have been updated while hidden.\n      this._setTargetWindowAndElement(newTarget);\n      this.setState({\n        positions: undefined,\n      });\n      this._didSetInitialFocus = false;\n      this._bounds = undefined;\n    }\n\n    this._blockResetHeight = false;\n  }\n\n  public componentDidMount(): void {\n    if (!this.props.hidden) {\n      this._onComponentDidMount();\n    }\n  }\n\n  public render(): JSX.Element | null {\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\n    if (!this._targetWindow) {\n      return null;\n    }\n    let { target } = this.props;\n    const {\n      styles,\n      style,\n      ariaLabel,\n      ariaDescribedBy,\n      ariaLabelledBy,\n      className,\n      isBeakVisible,\n      children,\n      beakWidth,\n      calloutWidth,\n      calloutMaxWidth,\n      calloutMinWidth,\n      finalHeight,\n      hideOverflow = !!finalHeight,\n      backgroundColor,\n      calloutMaxHeight,\n      onScroll,\n      // eslint-disable-next-line deprecation/deprecation\n      shouldRestoreFocus = true,\n    } = this.props;\n    target = this._getTarget();\n    const { positions } = this.state;\n\n    const getContentMaxHeight: number | undefined = this._getMaxHeight()\n      ? this._getMaxHeight()! + this.state.heightOffset!\n      : undefined;\n    const contentMaxHeight: number | undefined =\n      calloutMaxHeight! && getContentMaxHeight && calloutMaxHeight! < getContentMaxHeight\n        ? calloutMaxHeight!\n        : getContentMaxHeight!;\n    const overflowYHidden = hideOverflow;\n\n    const beakVisible = isBeakVisible && !!target;\n    this._classNames = getClassNames(styles!, {\n      theme: this.props.theme!,\n      className,\n      overflowYHidden: overflowYHidden,\n      calloutWidth,\n      positions,\n      beakWidth,\n      backgroundColor,\n      calloutMinWidth,\n      calloutMaxWidth,\n    });\n\n    const overflowStyle: React.CSSProperties = {\n      ...style,\n      maxHeight: contentMaxHeight,\n      ...(overflowYHidden && { overflowY: 'hidden' }),\n    };\n\n    const visibilityStyle: React.CSSProperties | undefined = this.props.hidden ? { visibility: 'hidden' } : undefined;\n    // React.CSSProperties does not understand IRawStyle, so the inline animations will need to be cast as any for now.\n    const content = (\n      <div ref={this._hostElement} className={this._classNames.container} style={visibilityStyle}>\n        <div\n          {...getNativeProps(this.props, divProperties, ARIA_ROLE_ATTRIBUTES)}\n          className={css(this._classNames.root, positions && positions.targetEdge && ANIMATIONS[positions.targetEdge!])}\n          style={positions ? positions.elementPosition : OFF_SCREEN_STYLE}\n          // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n          // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n          tabIndex={-1}\n          ref={this._calloutElement}\n        >\n          {beakVisible && <div className={this._classNames.beak} style={this._getBeakPosition()} />}\n          {beakVisible && <div className={this._classNames.beakCurtain} />}\n          <Popup\n            {...getNativeProps(this.props, ARIA_ROLE_ATTRIBUTES)}\n            ariaLabel={ariaLabel}\n            onRestoreFocus={this.props.onRestoreFocus}\n            ariaDescribedBy={ariaDescribedBy}\n            ariaLabelledBy={ariaLabelledBy}\n            className={this._classNames.calloutMain}\n            onDismiss={this.dismiss}\n            onScroll={onScroll}\n            shouldRestoreFocus={shouldRestoreFocus}\n            style={overflowStyle}\n            onMouseDown={this._mouseDownOnPopup}\n            onMouseUp={this._mouseUpOnPopup}\n          >\n            {children}\n          </Popup>\n        </div>\n      </div>\n    );\n\n    return content;\n  }\n\n  public dismiss = (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const { onDismiss } = this.props;\n\n    if (onDismiss) {\n      onDismiss(ev);\n    }\n  };\n\n  protected _dismissOnScroll = (ev: Event) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { preventDismissOnEvent, preventDismissOnScroll } = this.props;\n    if (\n      this.state.positions &&\n      ((preventDismissOnEvent && !preventDismissOnEvent(ev)) || (!preventDismissOnEvent && !preventDismissOnScroll))\n    ) {\n      this._dismissOnClickOrScroll(ev);\n    }\n  };\n\n  protected _dismissOnResize = (ev: Event) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { preventDismissOnEvent, preventDismissOnResize } = this.props;\n    if ((preventDismissOnEvent && !preventDismissOnEvent(ev)) || (!preventDismissOnEvent && !preventDismissOnResize)) {\n      this.dismiss(ev);\n    }\n  };\n\n  protected _dismissOnLostFocus = (ev: Event) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { preventDismissOnEvent, preventDismissOnLostFocus } = this.props;\n    if (\n      (preventDismissOnEvent && !preventDismissOnEvent(ev)) ||\n      (!preventDismissOnEvent && !preventDismissOnLostFocus)\n    ) {\n      this._dismissOnClickOrScroll(ev);\n    }\n  };\n\n  protected _setInitialFocus = (): void => {\n    if (\n      this.props.setInitialFocus &&\n      !this._didSetInitialFocus &&\n      this.state.positions &&\n      this._calloutElement.current\n    ) {\n      this._didSetInitialFocus = true;\n      this._async.requestAnimationFrame(\n        () => focusFirstChild(this._calloutElement.current!),\n        this._calloutElement.current,\n      );\n    }\n  };\n\n  protected _onComponentDidMount = (): void => {\n    this._addListeners();\n\n    if (this.props.onLayerMounted) {\n      this.props.onLayerMounted();\n    }\n\n    this._updateAsyncPosition();\n    this._setHeightOffsetEveryFrame();\n  };\n\n  private _dismissOnClickOrScroll(ev: Event) {\n    const target = ev.target as HTMLElement;\n    const isEventTargetOutsideCallout =\n      this._hostElement.current && !elementContains(this._hostElement.current, target);\n\n    // If mouse is pressed down on callout but moved outside then released, don't dismiss the callout.\n    if (isEventTargetOutsideCallout && this._isMouseDownOnPopup) {\n      this._isMouseDownOnPopup = false;\n      return;\n    }\n\n    if (\n      (!this._target && isEventTargetOutsideCallout) ||\n      (ev.target !== this._targetWindow &&\n        isEventTargetOutsideCallout &&\n        ((this._target as MouseEvent).stopPropagation ||\n          !this._target ||\n          this.props.dismissOnTargetClick ||\n          (target !== this._target && !elementContains(this._target as HTMLElement, target))))\n    ) {\n      this.dismiss(ev);\n    }\n  }\n\n  private _dismissOnTargetWindowBlur = (ev: FocusEvent) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { preventDismissOnEvent, preventDismissOnLostFocus, shouldDismissOnWindowFocus } = this.props;\n\n    // Do nothing\n    if (!shouldDismissOnWindowFocus) {\n      return;\n    }\n\n    if (\n      ((preventDismissOnEvent && !preventDismissOnEvent(ev)) ||\n        (!preventDismissOnEvent && !preventDismissOnLostFocus)) &&\n      !this._targetWindow.document.hasFocus() &&\n      ev.relatedTarget === null\n    ) {\n      this.dismiss(ev);\n    }\n  };\n\n  private _addListeners() {\n    // This is added so the callout will dismiss when the window is scrolled\n    // but not when something inside the callout is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the callout.\n    this._async.setTimeout(() => {\n      this._disposables.push(\n        on(this._targetWindow, 'scroll', this._dismissOnScroll, true),\n        on(this._targetWindow, 'resize', this._dismissOnResize, true),\n        on(this._targetWindow.document.documentElement, 'focus', this._dismissOnLostFocus, true),\n        on(this._targetWindow.document.documentElement, 'click', this._dismissOnLostFocus, true),\n        on(this._targetWindow, 'blur', this._dismissOnTargetWindowBlur, true),\n      );\n      this._hasListeners = true;\n    }, 0);\n  }\n\n  private _removeListeners() {\n    this._disposables.forEach((dispose: () => void) => dispose());\n    this._disposables = [];\n    this._hasListeners = false;\n  }\n\n  private _updateAsyncPosition(): void {\n    this._async.requestAnimationFrame(() => this._updatePosition(), this._calloutElement.current);\n  }\n\n  private _getBeakPosition(): React.CSSProperties {\n    const { positions } = this.state;\n    const beakPostionStyle: React.CSSProperties = {\n      ...(positions && positions.beakPosition ? positions.beakPosition.elementPosition : null),\n    };\n\n    if (!beakPostionStyle.top && !beakPostionStyle.bottom && !beakPostionStyle.left && !beakPostionStyle.right) {\n      beakPostionStyle.left = BEAK_ORIGIN_POSITION.left;\n      beakPostionStyle.top = BEAK_ORIGIN_POSITION.top;\n    }\n\n    return beakPostionStyle;\n  }\n\n  private _updatePosition(): void {\n    // Try to update the target, page might have changed\n    this._setTargetWindowAndElement(this._getTarget());\n\n    const { positions } = this.state;\n    const hostElement: HTMLElement | null = this._hostElement.current;\n    const calloutElement: HTMLElement | null = this._calloutElement.current;\n\n    // If we expect a target element to position against, we need to wait until `this._target` is resolved. Otherwise\n    // we can try to position.\n    const expectsTarget = !!this.props.target;\n\n    if (hostElement && calloutElement && (!expectsTarget || this._target)) {\n      const currentProps: IPositionProps = { ...(this.props as any) };\n      currentProps.bounds = this._getBounds();\n      currentProps.target = this._target!;\n      // If there is a finalHeight given then we assume that the user knows and will handle\n      // additional positioning adjustments so we should call positionCard\n      const newPositions: ICalloutPositionedInfo = this.props.finalHeight\n        ? positionCard(currentProps, hostElement, calloutElement, positions)\n        : positionCallout(currentProps, hostElement, calloutElement, positions);\n\n      // Set the new position only when the positions are not exists or one of the new callout positions are different.\n      // The position should not change if the position is within 2 decimal places.\n      if (\n        (!positions && newPositions) ||\n        (positions && newPositions && !this._arePositionsEqual(positions, newPositions) && this._positionAttempts < 5)\n      ) {\n        // We should not reposition the callout more than a few times, if it is then the content is likely resizing\n        // and we should stop trying to reposition to prevent a stack overflow.\n        this._positionAttempts++;\n        this.setState({\n          positions: newPositions,\n        });\n      } else if (this._positionAttempts > 0) {\n        // Only call the onPositioned callback if the callout has been re-positioned at least once.\n        this._positionAttempts = 0;\n        if (this.props.onPositioned) {\n          this.props.onPositioned(this.state.positions);\n        }\n      }\n    }\n  }\n\n  private _getBounds(): IRectangle {\n    if (!this._bounds) {\n      const bounds = this.props.bounds;\n      let currentBounds = typeof bounds === 'function' ? bounds(this.props.target, this._targetWindow) : bounds;\n\n      if (!currentBounds) {\n        currentBounds = getBoundsFromTargetWindow(this._target, this._targetWindow);\n        currentBounds = {\n          top: currentBounds.top + this.props.minPagePadding!,\n          left: currentBounds.left + this.props.minPagePadding!,\n          right: currentBounds.right! - this.props.minPagePadding!,\n          bottom: currentBounds.bottom! - this.props.minPagePadding!,\n          width: currentBounds.width - this.props.minPagePadding! * 2,\n          height: currentBounds.height - this.props.minPagePadding! * 2,\n        };\n      }\n      this._bounds = currentBounds;\n    }\n    return this._bounds;\n  }\n\n  // Max height should remain as synchronous as possible, which is why it is not done using set state.\n  // It needs to be synchronous since it will impact the ultimate position of the callout.\n  private _getMaxHeight(): number | undefined {\n    if (!this._maxHeight) {\n      if (this.props.directionalHintFixed && this._target) {\n        const beakWidth = this.props.isBeakVisible ? this.props.beakWidth : 0;\n        const gapSpace = this.props.gapSpace ? this.props.gapSpace : 0;\n        // Since the callout cannot measure it's border size it must be taken into account here. Otherwise it will\n        // overlap with the target.\n        const totalGap = gapSpace + beakWidth!;\n        this._async.requestAnimationFrame(() => {\n          if (this._target) {\n            this._maxHeight = getMaxHeight(\n              this._target,\n              this.props.directionalHint!,\n              totalGap,\n              this._getBounds(),\n              this.props.coverTarget,\n            );\n            this._blockResetHeight = true;\n            this.forceUpdate();\n          }\n        }, this._target as Element);\n      } else {\n        this._maxHeight = this._getBounds().height!;\n      }\n    }\n    return this._maxHeight!;\n  }\n\n  private _arePositionsEqual(positions: ICalloutPositionedInfo, newPosition: ICalloutPositionedInfo): boolean {\n    return (\n      this._comparePositions(positions.elementPosition, newPosition.elementPosition) &&\n      this._comparePositions(positions.beakPosition.elementPosition, newPosition.beakPosition.elementPosition)\n    );\n  }\n\n  private _comparePositions(oldPositions: IPosition, newPositions: IPosition): boolean {\n    for (const key in newPositions) {\n      if (newPositions.hasOwnProperty(key)) {\n        const oldPositionEdge = oldPositions[key];\n        const newPositionEdge = newPositions[key];\n\n        if (oldPositionEdge !== undefined && newPositionEdge !== undefined) {\n          if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  private _setTargetWindowAndElement(target: Target): void {\n    const currentElement = this._calloutElement.current;\n\n    if (target) {\n      if (typeof target === 'string') {\n        const currentDoc: Document = getDocument(currentElement)!;\n        this._target = currentDoc ? (currentDoc.querySelector(target) as Element) : null;\n        this._targetWindow = getWindow(currentElement)!;\n        // Cast to any prevents error about stopPropagation always existing\n      } else if ((target as any).stopPropagation) {\n        this._targetWindow = getWindow((target as MouseEvent).target as HTMLElement)!;\n        this._target = target as MouseEvent;\n        // Same reason here\n      } else if ((target as any).getBoundingClientRect) {\n        const targetElement: Element = target as Element;\n        this._targetWindow = getWindow(targetElement)!;\n        this._target = targetElement;\n      } else if ((target as React.RefObject<Element>).current !== undefined) {\n        this._target = (target as React.RefObject<Element>).current;\n        this._targetWindow = getWindow(this._target)!;\n        // HTMLImgElements can have x and y values. The check for it being a point must go last.\n      } else {\n        this._targetWindow = getWindow(currentElement)!;\n        this._target = target as Point;\n      }\n    } else {\n      this._targetWindow = getWindow(currentElement)!;\n    }\n  }\n\n  private _setHeightOffsetEveryFrame(): void {\n    if (this._calloutElement.current && this.props.finalHeight) {\n      this._setHeightOffsetTimer = this._async.requestAnimationFrame(() => {\n        const calloutMainElem = this._calloutElement.current && (this._calloutElement.current.lastChild as HTMLElement);\n\n        if (!calloutMainElem) {\n          return;\n        }\n\n        const cardScrollHeight: number = calloutMainElem.scrollHeight;\n        const cardCurrHeight: number = calloutMainElem.offsetHeight;\n        const scrollDiff: number = cardScrollHeight - cardCurrHeight;\n\n        this.setState({\n          heightOffset: this.state.heightOffset! + scrollDiff,\n        });\n\n        if (calloutMainElem.offsetHeight < this.props.finalHeight!) {\n          this._setHeightOffsetEveryFrame();\n        } else {\n          this._async.cancelAnimationFrame(this._setHeightOffsetTimer, this._calloutElement.current);\n        }\n      }, this._calloutElement.current);\n    }\n  }\n\n  // Whether or not the current positions should be reset\n  private _didPositionPropsChange(newProps: ICalloutProps, oldProps: ICalloutProps): boolean {\n    return (\n      (!newProps.hidden && newProps.hidden !== oldProps.hidden) || newProps.directionalHint !== oldProps.directionalHint\n    );\n  }\n\n  private _getTarget(props: ICalloutProps = this.props): Target {\n    const { target } = props;\n    return target!;\n  }\n\n  private _mouseDownOnPopup = () => {\n    this._isMouseDownOnPopup = true;\n  };\n\n  private _mouseUpOnPopup = () => {\n    this._isMouseDownOnPopup = false;\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}