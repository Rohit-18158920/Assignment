{"ast":null,"code":"var _vendorSettings;\n\nexport function getVendorSettings() {\n  if (!_vendorSettings) {\n    var doc = typeof document !== 'undefined' ? document : undefined;\n    var nav = typeof navigator !== 'undefined' ? navigator : undefined;\n    var userAgent = nav ? nav.userAgent.toLowerCase() : undefined;\n\n    if (!doc) {\n      _vendorSettings = {\n        isWebkit: true,\n        isMoz: true,\n        isOpera: true,\n        isMs: true\n      };\n    } else {\n      _vendorSettings = {\n        isWebkit: !!(doc && 'WebkitAppearance' in doc.documentElement.style),\n        isMoz: !!(userAgent && userAgent.indexOf('firefox') > -1),\n        isOpera: !!(userAgent && userAgent.indexOf('opera') > -1),\n        isMs: !!(nav && (/rv:11.0/i.test(nav.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)))\n      };\n    }\n  }\n\n  return _vendorSettings;\n}\n/**\n * Sets the vendor settings for prefixing and vendor specific operations.\n */\n\nexport function setVendorSettings(vendorSettings) {\n  _vendorSettings = vendorSettings;\n}","map":{"version":3,"sources":["getVendorSettings.ts"],"names":[],"mappings":"AAOA,IAAI,eAAJ;;AAEA,OAAM,SAAU,iBAAV,GAA2B;AAC/B,MAAI,CAAC,eAAL,EAAsB;AACpB,QAAM,GAAG,GAAG,OAAO,QAAP,KAAoB,WAApB,GAAkC,QAAlC,GAA6C,SAAzD;AACA,QAAM,GAAG,GAAG,OAAO,SAAP,KAAqB,WAArB,GAAmC,SAAnC,GAA+C,SAA3D;AACA,QAAM,SAAS,GAAG,GAAG,GAAG,GAAG,CAAC,SAAJ,CAAc,WAAd,EAAH,GAAiC,SAAtD;;AAEA,QAAI,CAAC,GAAL,EAAU;AACR,MAAA,eAAe,GAAG;AAChB,QAAA,QAAQ,EAAE,IADM;AAEhB,QAAA,KAAK,EAAE,IAFS;AAGhB,QAAA,OAAO,EAAE,IAHO;AAIhB,QAAA,IAAI,EAAE;AAJU,OAAlB;AAMD,KAPD,MAOO;AACL,MAAA,eAAe,GAAG;AAChB,QAAA,QAAQ,EAAE,CAAC,EAAE,GAAG,IAAI,sBAAsB,GAAG,CAAC,eAAJ,CAAoB,KAAnD,CADK;AAEhB,QAAA,KAAK,EAAE,CAAC,EAAE,SAAS,IAAI,SAAS,CAAC,OAAV,CAAkB,SAAlB,IAA+B,CAAC,CAA/C,CAFQ;AAGhB,QAAA,OAAO,EAAE,CAAC,EAAE,SAAS,IAAI,SAAS,CAAC,OAAV,CAAkB,OAAlB,IAA6B,CAAC,CAA7C,CAHM;AAIhB,QAAA,IAAI,EAAE,CAAC,EAAE,GAAG,KAAK,WAAW,IAAX,CAAgB,GAAG,CAAC,SAApB,KAAkC,aAAa,IAAb,CAAkB,SAAS,CAAC,SAA5B,CAAvC,CAAL;AAJS,OAAlB;AAMD;AACF;;AAED,SAAO,eAAP;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,iBAAV,CAA4B,cAA5B,EAA4D;AAChE,EAAA,eAAe,GAAG,cAAlB;AACD","sourcesContent":["export interface IVendorSettings {\n  isWebkit?: boolean;\n  isMoz?: boolean;\n  isMs?: boolean;\n  isOpera?: boolean;\n}\n\nlet _vendorSettings: IVendorSettings | undefined;\n\nexport function getVendorSettings(): IVendorSettings {\n  if (!_vendorSettings) {\n    const doc = typeof document !== 'undefined' ? document : undefined;\n    const nav = typeof navigator !== 'undefined' ? navigator : undefined;\n    const userAgent = nav ? nav.userAgent.toLowerCase() : undefined;\n\n    if (!doc) {\n      _vendorSettings = {\n        isWebkit: true,\n        isMoz: true,\n        isOpera: true,\n        isMs: true,\n      };\n    } else {\n      _vendorSettings = {\n        isWebkit: !!(doc && 'WebkitAppearance' in doc.documentElement.style),\n        isMoz: !!(userAgent && userAgent.indexOf('firefox') > -1),\n        isOpera: !!(userAgent && userAgent.indexOf('opera') > -1),\n        isMs: !!(nav && (/rv:11.0/i.test(nav.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent))),\n      };\n    }\n  }\n\n  return _vendorSettings;\n}\n\n/**\n * Sets the vendor settings for prefixing and vendor specific operations.\n */\nexport function setVendorSettings(vendorSettings?: IVendorSettings): void {\n  _vendorSettings = vendorSettings;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}