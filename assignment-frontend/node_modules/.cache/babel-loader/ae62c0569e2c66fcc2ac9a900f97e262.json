{"ast":null,"code":"import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\n\nexport function elementContains(parent, child, allowVirtualParents) {\n  if (allowVirtualParents === void 0) {\n    allowVirtualParents = true;\n  }\n\n  var isContained = false;\n\n  if (parent && child) {\n    if (allowVirtualParents) {\n      if (parent === child) {\n        isContained = true;\n      } else {\n        isContained = false;\n\n        while (child) {\n          var nextParent = getParent(child);\n\n          if (nextParent === parent) {\n            isContained = true;\n            break;\n          }\n\n          child = nextParent;\n        }\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n\n  return isContained;\n}","map":{"version":3,"sources":["elementContains.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,aAA1B;AACA;;;;;;AAMG;;AACH,OAAM,SAAU,eAAV,CACJ,MADI,EAEJ,KAFI,EAGJ,mBAHI,EAG+B;AAAnC,MAAA,mBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,IAAA;AAAmC;;AAEnC,MAAI,WAAW,GAAG,KAAlB;;AAEA,MAAI,MAAM,IAAI,KAAd,EAAqB;AACnB,QAAI,mBAAJ,EAAyB;AACvB,UAAI,MAAM,KAAK,KAAf,EAAsB;AACpB,QAAA,WAAW,GAAG,IAAd;AACD,OAFD,MAEO;AACL,QAAA,WAAW,GAAG,KAAd;;AAEA,eAAO,KAAP,EAAc;AACZ,cAAM,UAAU,GAAuB,SAAS,CAAC,KAAD,CAAhD;;AAEA,cAAI,UAAU,KAAK,MAAnB,EAA2B;AACzB,YAAA,WAAW,GAAG,IAAd;AACA;AACD;;AAED,UAAA,KAAK,GAAG,UAAR;AACD;AACF;AACF,KAjBD,MAiBO,IAAI,MAAM,CAAC,QAAX,EAAqB;AAC1B,MAAA,WAAW,GAAG,MAAM,CAAC,QAAP,CAAgB,KAAhB,CAAd;AACD;AACF;;AAED,SAAO,WAAP;AACD","sourcesContent":["import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\nexport function elementContains(\n  parent: HTMLElement | null,\n  child: HTMLElement | null,\n  allowVirtualParents: boolean = true,\n): boolean {\n  let isContained = false;\n\n  if (parent && child) {\n    if (allowVirtualParents) {\n      if (parent === child) {\n        isContained = true;\n      } else {\n        isContained = false;\n\n        while (child) {\n          const nextParent: HTMLElement | null = getParent(child);\n\n          if (nextParent === parent) {\n            isContained = true;\n            break;\n          }\n\n          child = nextParent;\n        }\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n\n  return isContained;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}