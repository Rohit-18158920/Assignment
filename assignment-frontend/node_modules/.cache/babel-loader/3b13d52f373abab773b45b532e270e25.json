{"ast":null,"code":"import { getFocusStyle, hiddenContentStyle, HighContrastSelector, getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-RatingStar-root',\n  rootIsSmall: 'ms-RatingStar-root--small',\n  rootIsLarge: 'ms-RatingStar-root--large',\n  ratingStar: 'ms-RatingStar-container',\n  ratingStarBack: 'ms-RatingStar-back',\n  ratingStarFront: 'ms-RatingStar-front',\n  ratingButton: 'ms-Rating-button',\n  ratingStarIsSmall: 'ms-Rating--small',\n  ratingStartIsLarge: 'ms-Rating--large',\n  labelText: 'ms-Rating-labelText',\n  ratingFocusZone: 'ms-Rating-focuszone'\n};\n\nfunction _getColorWithHighContrast(color, highContrastColor) {\n  var _a;\n\n  return {\n    color: color,\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      color: highContrastColor\n    }, _a)\n  };\n}\n\nexport function getStyles(props) {\n  var disabled = props.disabled,\n      readOnly = props.readOnly,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors,\n      palette = theme.palette;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var ratingSmallIconSize = 16;\n  var ratingLargeIconSize = 20;\n  var ratingVerticalPadding = 8;\n  var ratingHorizontalPadding = 2;\n  var ratingStarUncheckedColor = palette.neutralSecondary;\n  var ratingStarUncheckedHoverColor = palette.themePrimary;\n  var ratingStarUncheckedHoverSelectedColor = palette.themeDark;\n  var ratingStarCheckedColor = palette.neutralPrimary;\n  var ratingStarDisabledColor = semanticColors.disabledBodySubtext;\n  return {\n    root: [classNames.root, theme.fonts.medium, !disabled && !readOnly && {\n      selectors: {\n        // This is part 1 of highlighting all stars up to the one the user is hovering over\n        '&:hover': {\n          selectors: {\n            '.ms-RatingStar-back': _getColorWithHighContrast(ratingStarCheckedColor, 'Highlight')\n          }\n        }\n      }\n    }],\n    rootIsSmall: [classNames.rootIsSmall, {\n      height: ratingSmallIconSize + ratingVerticalPadding * 2 + 'px'\n    }],\n    rootIsLarge: [classNames.rootIsLarge, {\n      height: ratingLargeIconSize + ratingVerticalPadding * 2 + 'px'\n    }],\n    ratingStar: [classNames.ratingStar, {\n      display: 'inline-block',\n      position: 'relative',\n      height: 'inherit'\n    }],\n    ratingStarBack: [classNames.ratingStarBack, {\n      // TODO: Use a proper semantic color for this\n      color: ratingStarUncheckedColor,\n      width: '100%'\n    }, disabled && _getColorWithHighContrast(ratingStarDisabledColor, 'GrayText')],\n    ratingStarFront: [classNames.ratingStarFront, {\n      position: 'absolute',\n      height: '100 %',\n      left: '0',\n      top: '0',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      overflow: 'hidden'\n    }, _getColorWithHighContrast(ratingStarCheckedColor, 'Highlight')],\n    ratingButton: [getFocusStyle(theme), classNames.ratingButton, {\n      backgroundColor: 'transparent',\n      padding: ratingVerticalPadding + \"px \" + ratingHorizontalPadding + \"px\",\n      boxSizing: 'content-box',\n      margin: '0px',\n      border: 'none',\n      cursor: 'pointer',\n      selectors: {\n        '&:disabled': {\n          cursor: 'default'\n        },\n        '&[disabled]': {\n          cursor: 'default'\n        }\n      }\n    }, !disabled && !readOnly && {\n      selectors: {\n        // This is part 2 of highlighting all stars up to the one the user is hovering over\n        '&:hover ~ .ms-Rating-button': {\n          selectors: {\n            '.ms-RatingStar-back': _getColorWithHighContrast(ratingStarUncheckedColor, 'WindowText'),\n            '.ms-RatingStar-front': _getColorWithHighContrast(ratingStarUncheckedColor, 'WindowText')\n          }\n        },\n        '&:hover': {\n          selectors: {\n            '.ms-RatingStar-back': {\n              color: ratingStarUncheckedHoverColor\n            },\n            '.ms-RatingStar-front': {\n              color: ratingStarUncheckedHoverSelectedColor\n            }\n          }\n        }\n      }\n    }, disabled && {\n      cursor: 'default'\n    }],\n    ratingStarIsSmall: [classNames.ratingStarIsSmall, {\n      fontSize: ratingSmallIconSize + 'px',\n      lineHeight: ratingSmallIconSize + 'px',\n      height: ratingSmallIconSize + 'px'\n    }],\n    ratingStarIsLarge: [classNames.ratingStartIsLarge, {\n      fontSize: ratingLargeIconSize + 'px',\n      lineHeight: ratingLargeIconSize + 'px',\n      height: ratingLargeIconSize + 'px'\n    }],\n    labelText: [classNames.labelText, hiddenContentStyle],\n    ratingFocusZone: [getFocusStyle(theme), classNames.ratingFocusZone, {\n      display: 'inline-block'\n    }]\n  };\n}","map":{"version":3,"sources":["components/Rating/Rating.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { getFocusStyle, hiddenContentStyle, HighContrastSelector, getGlobalClassNames } from '../../Styling';\nimport { IRatingStyleProps, IRatingStyles } from './Rating.types';\n\nconst GlobalClassNames = {\n  root: 'ms-RatingStar-root',\n  rootIsSmall: 'ms-RatingStar-root--small',\n  rootIsLarge: 'ms-RatingStar-root--large',\n  ratingStar: 'ms-RatingStar-container',\n  ratingStarBack: 'ms-RatingStar-back',\n  ratingStarFront: 'ms-RatingStar-front',\n  ratingButton: 'ms-Rating-button',\n  ratingStarIsSmall: 'ms-Rating--small',\n  ratingStartIsLarge: 'ms-Rating--large',\n  labelText: 'ms-Rating-labelText',\n  ratingFocusZone: 'ms-Rating-focuszone',\n};\n\nfunction _getColorWithHighContrast(color: string, highContrastColor: string) {\n  return {\n    color: color,\n    selectors: {\n      [HighContrastSelector]: {\n        color: highContrastColor,\n      },\n    },\n  };\n}\n\nexport function getStyles(props: IRatingStyleProps): IRatingStyles {\n  const { disabled, readOnly, theme } = props;\n\n  const { semanticColors, palette } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ratingSmallIconSize = 16;\n  const ratingLargeIconSize = 20;\n  const ratingVerticalPadding = 8;\n  const ratingHorizontalPadding = 2;\n\n  const ratingStarUncheckedColor = palette.neutralSecondary;\n  const ratingStarUncheckedHoverColor = palette.themePrimary;\n  const ratingStarUncheckedHoverSelectedColor = palette.themeDark;\n  const ratingStarCheckedColor = palette.neutralPrimary;\n  const ratingStarDisabledColor = semanticColors.disabledBodySubtext;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      !disabled &&\n        !readOnly && {\n          selectors: {\n            // This is part 1 of highlighting all stars up to the one the user is hovering over\n            '&:hover': {\n              selectors: {\n                '.ms-RatingStar-back': _getColorWithHighContrast(ratingStarCheckedColor, 'Highlight'),\n              },\n            },\n          },\n        },\n    ],\n    rootIsSmall: [\n      classNames.rootIsSmall,\n      {\n        height: ratingSmallIconSize + ratingVerticalPadding * 2 + 'px',\n      },\n    ],\n    rootIsLarge: [\n      classNames.rootIsLarge,\n      {\n        height: ratingLargeIconSize + ratingVerticalPadding * 2 + 'px',\n      },\n    ],\n    ratingStar: [\n      classNames.ratingStar,\n      {\n        display: 'inline-block',\n        position: 'relative',\n        height: 'inherit',\n      },\n    ],\n    ratingStarBack: [\n      classNames.ratingStarBack,\n      {\n        // TODO: Use a proper semantic color for this\n        color: ratingStarUncheckedColor,\n        width: '100%',\n      },\n      disabled && _getColorWithHighContrast(ratingStarDisabledColor, 'GrayText'),\n    ],\n    ratingStarFront: [\n      classNames.ratingStarFront,\n      {\n        position: 'absolute',\n        height: '100 %',\n        left: '0',\n        top: '0',\n        textAlign: 'center',\n        verticalAlign: 'middle',\n        overflow: 'hidden',\n      },\n      _getColorWithHighContrast(ratingStarCheckedColor, 'Highlight'),\n    ],\n    ratingButton: [\n      getFocusStyle(theme),\n      classNames.ratingButton,\n      {\n        backgroundColor: 'transparent',\n        padding: `${ratingVerticalPadding}px ${ratingHorizontalPadding}px`,\n        boxSizing: 'content-box',\n        margin: '0px',\n        border: 'none',\n        cursor: 'pointer',\n        selectors: {\n          '&:disabled': {\n            cursor: 'default',\n          },\n          '&[disabled]': {\n            cursor: 'default',\n          },\n        },\n      },\n      !disabled &&\n        !readOnly && {\n          selectors: {\n            // This is part 2 of highlighting all stars up to the one the user is hovering over\n            '&:hover ~ .ms-Rating-button': {\n              selectors: {\n                '.ms-RatingStar-back': _getColorWithHighContrast(ratingStarUncheckedColor, 'WindowText'),\n                '.ms-RatingStar-front': _getColorWithHighContrast(ratingStarUncheckedColor, 'WindowText'),\n              },\n            },\n            '&:hover': {\n              selectors: {\n                '.ms-RatingStar-back': {\n                  color: ratingStarUncheckedHoverColor,\n                },\n                '.ms-RatingStar-front': {\n                  color: ratingStarUncheckedHoverSelectedColor,\n                },\n              },\n            },\n          },\n        },\n      disabled && {\n        cursor: 'default',\n      },\n    ],\n    ratingStarIsSmall: [\n      classNames.ratingStarIsSmall,\n      {\n        fontSize: ratingSmallIconSize + 'px',\n        lineHeight: ratingSmallIconSize + 'px',\n        height: ratingSmallIconSize + 'px',\n      },\n    ],\n    ratingStarIsLarge: [\n      classNames.ratingStartIsLarge,\n      {\n        fontSize: ratingLargeIconSize + 'px',\n        lineHeight: ratingLargeIconSize + 'px',\n        height: ratingLargeIconSize + 'px',\n      },\n    ],\n    labelText: [classNames.labelText, hiddenContentStyle],\n    ratingFocusZone: [\n      getFocusStyle(theme),\n      classNames.ratingFocusZone,\n      {\n        display: 'inline-block',\n      },\n    ],\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}