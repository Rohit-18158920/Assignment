{"ast":null,"code":"import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { getRTL } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected'\n};\nvar TAG_HEIGHT = 26;\nexport function getStyles(props) {\n  var _a, _b, _c, _d;\n\n  var className = props.className,\n      theme = props.theme,\n      selected = props.selected,\n      disabled = props.disabled;\n  var palette = theme.palette,\n      effects = theme.effects,\n      fonts = theme.fonts,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, fonts.medium, getFocusStyle(theme), {\n      boxSizing: 'content-box',\n      flexShrink: '1',\n      margin: 2,\n      height: TAG_HEIGHT,\n      lineHeight: TAG_HEIGHT,\n      cursor: 'default',\n      userSelect: 'none',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      maxWidth: 300,\n      minWidth: 0,\n      borderRadius: effects.roundedCorner2,\n      color: semanticColors.inputText,\n      background: !selected || disabled ? palette.neutralLighter : palette.themePrimary,\n      selectors: (_a = {\n        ':hover': [!disabled && !selected && {\n          color: palette.neutralDark,\n          background: palette.neutralLight,\n          selectors: {\n            '.ms-TagItem-close': {\n              color: palette.neutralPrimary\n            }\n          }\n        }, disabled && {\n          background: palette.neutralLighter\n        }, selected && !disabled && {\n          background: palette.themePrimary\n        }]\n      }, _a[HighContrastSelector] = {\n        border: \"1px solid \" + (!selected ? 'WindowText' : 'WindowFrame')\n      }, _a)\n    }, disabled && {\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _b)\n    }, selected && !disabled && [classNames.isSelected, {\n      color: palette.white\n    }], className],\n    text: [classNames.text, {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      minWidth: 30,\n      margin: '0 8px'\n    }, disabled && {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _c)\n    }],\n    close: [classNames.close, {\n      color: palette.neutralSecondary,\n      width: 30,\n      height: '100%',\n      flex: '0 0 auto',\n      borderRadius: getRTL(theme) ? effects.roundedCorner2 + \" 0 0 \" + effects.roundedCorner2 : \"0 \" + effects.roundedCorner2 + \" \" + effects.roundedCorner2 + \" 0\",\n      selectors: {\n        ':hover': {\n          background: palette.neutralQuaternaryAlt,\n          color: palette.neutralPrimary\n        },\n        ':active': {\n          color: palette.white,\n          backgroundColor: palette.themeDark\n        }\n      }\n    }, selected && {\n      color: palette.white,\n      selectors: {\n        ':hover': {\n          color: palette.white,\n          background: palette.themeDark\n        }\n      }\n    }, disabled && {\n      selectors: (_d = {}, _d[\".\" + ButtonGlobalClassNames.msButtonIcon] = {\n        color: palette.neutralSecondary\n      }, _d)\n    }]\n  };\n}","map":{"version":3,"sources":["components/pickers/TagPicker/TagItem.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\nimport { getRTL } from '../../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected',\n};\n\nconst TAG_HEIGHT = 26;\n\nexport function getStyles(props: ITagItemStyleProps): ITagItemStyles {\n  const { className, theme, selected, disabled } = props;\n\n  const { palette, effects, fonts, semanticColors } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      getFocusStyle(theme),\n      {\n        boxSizing: 'content-box',\n        flexShrink: '1',\n        margin: 2,\n        height: TAG_HEIGHT,\n        lineHeight: TAG_HEIGHT,\n        cursor: 'default',\n        userSelect: 'none',\n        display: 'flex',\n        flexWrap: 'nowrap',\n        maxWidth: 300,\n        minWidth: 0, // needed to prevent long tags from overflowing container\n        borderRadius: effects.roundedCorner2,\n        color: semanticColors.inputText,\n        background: !selected || disabled ? palette.neutralLighter : palette.themePrimary,\n        selectors: {\n          ':hover': [\n            !disabled &&\n              !selected && {\n                color: palette.neutralDark,\n                background: palette.neutralLight,\n                selectors: {\n                  '.ms-TagItem-close': {\n                    color: palette.neutralPrimary,\n                  },\n                },\n              },\n            disabled && { background: palette.neutralLighter },\n            selected && !disabled && { background: palette.themePrimary },\n          ],\n          [HighContrastSelector]: {\n            border: `1px solid ${!selected ? 'WindowText' : 'WindowFrame'}`,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n      selected &&\n        !disabled && [\n          classNames.isSelected,\n          {\n            color: palette.white,\n          },\n        ],\n      className,\n    ],\n    text: [\n      classNames.text,\n      {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        minWidth: 30,\n        margin: '0 8px',\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n    ],\n    close: [\n      classNames.close,\n      {\n        color: palette.neutralSecondary,\n        width: 30,\n        height: '100%',\n        flex: '0 0 auto',\n        borderRadius: getRTL(theme)\n          ? `${effects.roundedCorner2} 0 0 ${effects.roundedCorner2}`\n          : `0 ${effects.roundedCorner2} ${effects.roundedCorner2} 0`,\n        selectors: {\n          ':hover': {\n            background: palette.neutralQuaternaryAlt,\n            color: palette.neutralPrimary,\n          },\n          ':active': {\n            color: palette.white,\n            backgroundColor: palette.themeDark,\n          },\n        },\n      },\n      selected && {\n        color: palette.white,\n        selectors: {\n          ':hover': {\n            color: palette.white,\n            background: palette.themeDark,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: palette.neutralSecondary,\n          },\n        },\n      },\n    ],\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}