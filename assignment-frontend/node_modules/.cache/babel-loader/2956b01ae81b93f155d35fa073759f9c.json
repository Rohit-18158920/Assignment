{"ast":null,"code":"var _a;\n\nimport { KeyCodes } from './KeyCodes';\nvar DirectionalKeyCodes = (_a = {}, _a[KeyCodes.up] = 1, _a[KeyCodes.down] = 1, _a[KeyCodes.left] = 1, _a[KeyCodes.right] = 1, _a[KeyCodes.home] = 1, _a[KeyCodes.end] = 1, _a[KeyCodes.tab] = 1, _a[KeyCodes.pageUp] = 1, _a[KeyCodes.pageDown] = 1, _a);\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\n\nexport function isDirectionalKeyCode(which) {\n  return !!DirectionalKeyCodes[which];\n}\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\n\nexport function addDirectionalKeyCode(which) {\n  DirectionalKeyCodes[which] = 1;\n}","map":{"version":3,"sources":["keyboard.ts"],"names":[],"mappings":";;AAAA,SAAS,QAAT,QAAyB,YAAzB;AAEA,IAAM,mBAAmB,IAAA,EAAA,GAAA,EAAA,EACvB,EAAA,CAAC,QAAQ,CAAC,EAAV,CAAA,GAAe,CADQ,EAEvB,EAAA,CAAC,QAAQ,CAAC,IAAV,CAAA,GAAiB,CAFM,EAGvB,EAAA,CAAC,QAAQ,CAAC,IAAV,CAAA,GAAiB,CAHM,EAIvB,EAAA,CAAC,QAAQ,CAAC,KAAV,CAAA,GAAkB,CAJK,EAKvB,EAAA,CAAC,QAAQ,CAAC,IAAV,CAAA,GAAiB,CALM,EAMvB,EAAA,CAAC,QAAQ,CAAC,GAAV,CAAA,GAAgB,CANO,EAOvB,EAAA,CAAC,QAAQ,CAAC,GAAV,CAAA,GAAgB,CAPO,EAQvB,EAAA,CAAC,QAAQ,CAAC,MAAV,CAAA,GAAmB,CARI,EASvB,EAAA,CAAC,QAAQ,CAAC,QAAV,CAAA,GAAqB,CATE,EAUxB,EAVwB,CAAzB;AAYA;;AAEG;;AACH,OAAM,SAAU,oBAAV,CAA+B,KAA/B,EAA4C;AAChD,SAAO,CAAC,CAAC,mBAAmB,CAAC,KAAD,CAA5B;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,qBAAV,CAAgC,KAAhC,EAA6C;AACjD,EAAA,mBAAmB,CAAC,KAAD,CAAnB,GAA6B,CAA7B;AACD","sourcesContent":["import { KeyCodes } from './KeyCodes';\n\nconst DirectionalKeyCodes: { [key: number]: number } = {\n  [KeyCodes.up]: 1,\n  [KeyCodes.down]: 1,\n  [KeyCodes.left]: 1,\n  [KeyCodes.right]: 1,\n  [KeyCodes.home]: 1,\n  [KeyCodes.end]: 1,\n  [KeyCodes.tab]: 1,\n  [KeyCodes.pageUp]: 1,\n  [KeyCodes.pageDown]: 1,\n};\n\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\nexport function isDirectionalKeyCode(which: number): boolean {\n  return !!DirectionalKeyCodes[which];\n}\n\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function addDirectionalKeyCode(which: number): void {\n  DirectionalKeyCodes[which] = 1;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}