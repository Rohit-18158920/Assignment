{"ast":null,"code":"import _Object$assign from 'babel-runtime/core-js/object/assign';\nimport _Object$values from 'babel-runtime/core-js/object/values';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport uncontrollable from 'uncontrollable';\nimport warning from 'warning';\nimport { bsStyles, bsClass, getClassSet, splitBsPropsAndOmit } from './utils/bootstrapUtils';\nimport { State, Style } from './utils/StyleConfig';\nimport Body from './PanelBody';\nimport Heading from './PanelHeading';\nimport Title from './PanelTitle';\nimport Footer from './PanelFooter';\nimport Toggle from './PanelToggle';\nimport Collapse from './PanelCollapse';\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaultGetId = function defaultGetId(id, type) {\n  return id ? id + '--' + type : null;\n};\n\nvar propTypes = {\n  /**\n   * Controls the collapsed/expanded state ofthe Panel. Requires\n   * a `Panel.Collapse` or `<Panel.Body collapsible>` child component\n   * in order to actually animate out or in.\n   *\n   * @controllable onToggle\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * A callback fired when the collapse state changes.\n   *\n   * @controllable expanded\n   */\n  onToggle: PropTypes.func,\n  eventKey: PropTypes.any,\n\n  /**\n   * An HTML `id` attribute uniquely identifying the Panel component.\n   */\n  id: PropTypes.string\n};\nvar contextTypes = {\n  $bs_panelGroup: PropTypes.shape({\n    getId: PropTypes.func,\n    activeKey: PropTypes.any,\n    onToggle: PropTypes.func\n  })\n};\nvar childContextTypes = {\n  $bs_panel: PropTypes.shape({\n    headingId: PropTypes.string,\n    bodyId: PropTypes.string,\n    bsClass: PropTypes.string,\n    onToggle: PropTypes.func,\n    expanded: PropTypes.bool\n  })\n};\n\nvar Panel = function (_React$Component) {\n  _inherits(Panel, _React$Component);\n\n  function Panel() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Panel);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleToggle = function (e) {\n      var panelGroup = _this.context.$bs_panelGroup;\n      var expanded = !_this.getExpanded();\n\n      if (panelGroup && panelGroup.onToggle) {\n        panelGroup.onToggle(_this.props.eventKey, expanded, e);\n      } else {\n        _this.props.onToggle(expanded, e);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Panel.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        eventKey = _props.eventKey,\n        id = _props.id;\n    var idKey = eventKey == null ? id : eventKey;\n    var ids = void 0;\n\n    if (idKey !== null) {\n      var panelGroup = this.context.$bs_panelGroup;\n      var getId = panelGroup && panelGroup.getId || defaultGetId;\n      ids = {\n        headingId: getId(idKey, 'heading'),\n        bodyId: getId(idKey, 'body')\n      };\n    }\n\n    return {\n      $bs_panel: _extends({}, ids, {\n        bsClass: this.props.bsClass,\n        expanded: this.getExpanded(),\n        onToggle: this.handleToggle\n      })\n    };\n  };\n\n  Panel.prototype.getExpanded = function getExpanded() {\n    var panelGroup = this.context.$bs_panelGroup;\n\n    if (panelGroup && has.call(panelGroup, 'activeKey')) {\n      process.env.NODE_ENV !== 'production' ? warning(this.props.expanded == null, 'Specifying `<Panel>` `expanded` in the context of an accordion ' + '`<PanelGroup>` is not supported. Set `activeKey` on the ' + '`<PanelGroup>` instead.') : void 0;\n      return panelGroup.activeKey === this.props.eventKey;\n    }\n\n    return !!this.props.expanded;\n  };\n\n  Panel.prototype.render = function render() {\n    var _props2 = this.props,\n        className = _props2.className,\n        children = _props2.children;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(this.props, ['onToggle', 'eventKey', 'expanded']),\n        bsProps = _splitBsPropsAndOmit[0],\n        props = _splitBsPropsAndOmit[1];\n\n    return React.createElement('div', _extends({}, props, {\n      className: classNames(className, getClassSet(bsProps))\n    }), children);\n  };\n\n  return Panel;\n}(React.Component);\n\nPanel.propTypes = propTypes;\nPanel.contextTypes = contextTypes;\nPanel.childContextTypes = childContextTypes;\nvar UncontrolledPanel = uncontrollable(bsClass('panel', bsStyles([].concat(_Object$values(State), [Style.DEFAULT, Style.PRIMARY]), Style.DEFAULT, Panel)), {\n  expanded: 'onToggle'\n});\n\n_Object$assign(UncontrolledPanel, {\n  Heading: Heading,\n  Title: Title,\n  Body: Body,\n  Footer: Footer,\n  Toggle: Toggle,\n  Collapse: Collapse\n});\n\nexport default UncontrolledPanel;","map":{"version":3,"sources":["D:/personalWork/assignment-frontend/node_modules/react-bootstrap/es/Panel.js"],"names":["_Object$assign","_Object$values","_extends","_classCallCheck","_possibleConstructorReturn","_inherits","classNames","PropTypes","React","uncontrollable","warning","bsStyles","bsClass","getClassSet","splitBsPropsAndOmit","State","Style","Body","Heading","Title","Footer","Toggle","Collapse","has","Object","prototype","hasOwnProperty","defaultGetId","id","type","propTypes","expanded","bool","onToggle","func","eventKey","any","string","contextTypes","$bs_panelGroup","shape","getId","activeKey","childContextTypes","$bs_panel","headingId","bodyId","Panel","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","handleToggle","e","panelGroup","context","getExpanded","props","getChildContext","_props","idKey","ids","process","env","NODE_ENV","render","_props2","className","children","_splitBsPropsAndOmit","bsProps","createElement","Component","UncontrolledPanel","DEFAULT","PRIMARY"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,qCAA3B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,WAA5B,EAAyCC,mBAAzC,QAAoE,wBAApE;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,qBAA7B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,IAAIC,GAAG,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAA3B;;AAEA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,EAAtB,EAA0BC,IAA1B,EAAgC;AACjD,SAAOD,EAAE,GAAGA,EAAE,GAAG,IAAL,GAAYC,IAAf,GAAsB,IAA/B;AACD,CAFD;;AAIA,IAAIC,SAAS,GAAG;AACd;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,QAAQ,EAAExB,SAAS,CAACyB,IARN;;AASd;AACF;AACA;AACA;AACA;AACEC,EAAAA,QAAQ,EAAE1B,SAAS,CAAC2B,IAdN;AAedC,EAAAA,QAAQ,EAAE5B,SAAS,CAAC6B,GAfN;;AAiBd;AACF;AACA;AACER,EAAAA,EAAE,EAAErB,SAAS,CAAC8B;AApBA,CAAhB;AAuBA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAEhC,SAAS,CAACiC,KAAV,CAAgB;AAC9BC,IAAAA,KAAK,EAAElC,SAAS,CAAC2B,IADa;AAE9BQ,IAAAA,SAAS,EAAEnC,SAAS,CAAC6B,GAFS;AAG9BH,IAAAA,QAAQ,EAAE1B,SAAS,CAAC2B;AAHU,GAAhB;AADC,CAAnB;AAQA,IAAIS,iBAAiB,GAAG;AACtBC,EAAAA,SAAS,EAAErC,SAAS,CAACiC,KAAV,CAAgB;AACzBK,IAAAA,SAAS,EAAEtC,SAAS,CAAC8B,MADI;AAEzBS,IAAAA,MAAM,EAAEvC,SAAS,CAAC8B,MAFO;AAGzBzB,IAAAA,OAAO,EAAEL,SAAS,CAAC8B,MAHM;AAIzBJ,IAAAA,QAAQ,EAAE1B,SAAS,CAAC2B,IAJK;AAKzBH,IAAAA,QAAQ,EAAExB,SAAS,CAACyB;AALK,GAAhB;AADW,CAAxB;;AAUA,IAAIe,KAAK,GAAG,UAAUC,gBAAV,EAA4B;AACtC3C,EAAAA,SAAS,CAAC0C,KAAD,EAAQC,gBAAR,CAAT;;AAEA,WAASD,KAAT,GAAiB;AACf,QAAIE,KAAJ,EAAWC,KAAX,EAAkBC,IAAlB;;AAEAhD,IAAAA,eAAe,CAAC,IAAD,EAAO4C,KAAP,CAAf;;AAEA,SAAK,IAAIK,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAD,CAAzC,EAAiDK,IAAI,GAAG,CAA7D,EAAgEA,IAAI,GAAGL,IAAvE,EAA6EK,IAAI,EAAjF,EAAqF;AACnFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,WAAON,IAAI,IAAIF,KAAK,IAAIC,KAAK,GAAG9C,0BAA0B,CAAC,IAAD,EAAO4C,gBAAgB,CAACU,IAAjB,CAAsBC,KAAtB,CAA4BX,gBAA5B,EAA8C,CAAC,IAAD,EAAOY,MAAP,CAAcL,IAAd,CAA9C,CAAP,CAAlC,EAA8GL,KAAlH,CAAL,EAA+HA,KAAK,CAACW,YAAN,GAAqB,UAAUC,CAAV,EAAa;AAC9K,UAAIC,UAAU,GAAGb,KAAK,CAACc,OAAN,CAAczB,cAA/B;AACA,UAAIR,QAAQ,GAAG,CAACmB,KAAK,CAACe,WAAN,EAAhB;;AAEA,UAAIF,UAAU,IAAIA,UAAU,CAAC9B,QAA7B,EAAuC;AACrC8B,QAAAA,UAAU,CAAC9B,QAAX,CAAoBiB,KAAK,CAACgB,KAAN,CAAY/B,QAAhC,EAA0CJ,QAA1C,EAAoD+B,CAApD;AACD,OAFD,MAEO;AACLZ,QAAAA,KAAK,CAACgB,KAAN,CAAYjC,QAAZ,CAAqBF,QAArB,EAA+B+B,CAA/B;AACD;AACF,KATc,EASZb,KATQ,CAAJ,EASI7C,0BAA0B,CAAC8C,KAAD,EAAQC,IAAR,CATrC;AAUD;;AAEDJ,EAAAA,KAAK,CAACtB,SAAN,CAAgB0C,eAAhB,GAAkC,SAASA,eAAT,GAA2B;AAC3D,QAAIC,MAAM,GAAG,KAAKF,KAAlB;AAAA,QACI/B,QAAQ,GAAGiC,MAAM,CAACjC,QADtB;AAAA,QAEIP,EAAE,GAAGwC,MAAM,CAACxC,EAFhB;AAIA,QAAIyC,KAAK,GAAGlC,QAAQ,IAAI,IAAZ,GAAmBP,EAAnB,GAAwBO,QAApC;AAEA,QAAImC,GAAG,GAAG,KAAK,CAAf;;AAEA,QAAID,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAIN,UAAU,GAAG,KAAKC,OAAL,CAAazB,cAA9B;AACA,UAAIE,KAAK,GAAGsB,UAAU,IAAIA,UAAU,CAACtB,KAAzB,IAAkCd,YAA9C;AAEA2C,MAAAA,GAAG,GAAG;AACJzB,QAAAA,SAAS,EAAEJ,KAAK,CAAC4B,KAAD,EAAQ,SAAR,CADZ;AAEJvB,QAAAA,MAAM,EAAEL,KAAK,CAAC4B,KAAD,EAAQ,MAAR;AAFT,OAAN;AAID;;AAED,WAAO;AACLzB,MAAAA,SAAS,EAAE1C,QAAQ,CAAC,EAAD,EAAKoE,GAAL,EAAU;AAC3B1D,QAAAA,OAAO,EAAE,KAAKsD,KAAL,CAAWtD,OADO;AAE3BmB,QAAAA,QAAQ,EAAE,KAAKkC,WAAL,EAFiB;AAG3BhC,QAAAA,QAAQ,EAAE,KAAK4B;AAHY,OAAV;AADd,KAAP;AAOD,GA1BD;;AA4BAd,EAAAA,KAAK,CAACtB,SAAN,CAAgBwC,WAAhB,GAA8B,SAASA,WAAT,GAAuB;AACnD,QAAIF,UAAU,GAAG,KAAKC,OAAL,CAAazB,cAA9B;;AAEA,QAAIwB,UAAU,IAAIxC,GAAG,CAACmC,IAAJ,CAASK,UAAT,EAAqB,WAArB,CAAlB,EAAqD;AACnDQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/D,OAAO,CAAC,KAAKwD,KAAL,CAAWnC,QAAX,IAAuB,IAAxB,EAA8B,oEAAoE,0DAApE,GAAiI,yBAA/J,CAA/C,GAA2O,KAAK,CAAhP;AAEA,aAAOgC,UAAU,CAACrB,SAAX,KAAyB,KAAKwB,KAAL,CAAW/B,QAA3C;AACD;;AAED,WAAO,CAAC,CAAC,KAAK+B,KAAL,CAAWnC,QAApB;AACD,GAVD;;AAYAgB,EAAAA,KAAK,CAACtB,SAAN,CAAgBiD,MAAhB,GAAyB,SAASA,MAAT,GAAkB;AACzC,QAAIC,OAAO,GAAG,KAAKT,KAAnB;AAAA,QACIU,SAAS,GAAGD,OAAO,CAACC,SADxB;AAAA,QAEIC,QAAQ,GAAGF,OAAO,CAACE,QAFvB;;AAIA,QAAIC,oBAAoB,GAAGhE,mBAAmB,CAAC,KAAKoD,KAAN,EAAa,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,CAAb,CAA9C;AAAA,QACIa,OAAO,GAAGD,oBAAoB,CAAC,CAAD,CADlC;AAAA,QAEIZ,KAAK,GAAGY,oBAAoB,CAAC,CAAD,CAFhC;;AAIA,WAAOtE,KAAK,CAACwE,aAAN,CACL,KADK,EAEL9E,QAAQ,CAAC,EAAD,EAAKgE,KAAL,EAAY;AAAEU,MAAAA,SAAS,EAAEtE,UAAU,CAACsE,SAAD,EAAY/D,WAAW,CAACkE,OAAD,CAAvB;AAAvB,KAAZ,CAFH,EAGLF,QAHK,CAAP;AAKD,GAdD;;AAgBA,SAAO9B,KAAP;AACD,CAjFW,CAiFVvC,KAAK,CAACyE,SAjFI,CAAZ;;AAmFAlC,KAAK,CAACjB,SAAN,GAAkBA,SAAlB;AAEAiB,KAAK,CAACT,YAAN,GAAqBA,YAArB;AACAS,KAAK,CAACJ,iBAAN,GAA0BA,iBAA1B;AAEA,IAAIuC,iBAAiB,GAAGzE,cAAc,CAACG,OAAO,CAAC,OAAD,EAAUD,QAAQ,CAAC,GAAGiD,MAAH,CAAU3D,cAAc,CAACc,KAAD,CAAxB,EAAiC,CAACC,KAAK,CAACmE,OAAP,EAAgBnE,KAAK,CAACoE,OAAtB,CAAjC,CAAD,EAAmEpE,KAAK,CAACmE,OAAzE,EAAkFpC,KAAlF,CAAlB,CAAR,EAAqH;AAAEhB,EAAAA,QAAQ,EAAE;AAAZ,CAArH,CAAtC;;AAEA/B,cAAc,CAACkF,iBAAD,EAAoB;AAChChE,EAAAA,OAAO,EAAEA,OADuB;AAEhCC,EAAAA,KAAK,EAAEA,KAFyB;AAGhCF,EAAAA,IAAI,EAAEA,IAH0B;AAIhCG,EAAAA,MAAM,EAAEA,MAJwB;AAKhCC,EAAAA,MAAM,EAAEA,MALwB;AAMhCC,EAAAA,QAAQ,EAAEA;AANsB,CAApB,CAAd;;AASA,eAAe4D,iBAAf","sourcesContent":["import _Object$assign from 'babel-runtime/core-js/object/assign';\nimport _Object$values from 'babel-runtime/core-js/object/values';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport uncontrollable from 'uncontrollable';\nimport warning from 'warning';\n\nimport { bsStyles, bsClass, getClassSet, splitBsPropsAndOmit } from './utils/bootstrapUtils';\nimport { State, Style } from './utils/StyleConfig';\nimport Body from './PanelBody';\nimport Heading from './PanelHeading';\nimport Title from './PanelTitle';\nimport Footer from './PanelFooter';\nimport Toggle from './PanelToggle';\nimport Collapse from './PanelCollapse';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaultGetId = function defaultGetId(id, type) {\n  return id ? id + '--' + type : null;\n};\n\nvar propTypes = {\n  /**\n   * Controls the collapsed/expanded state ofthe Panel. Requires\n   * a `Panel.Collapse` or `<Panel.Body collapsible>` child component\n   * in order to actually animate out or in.\n   *\n   * @controllable onToggle\n   */\n  expanded: PropTypes.bool,\n  /**\n   * A callback fired when the collapse state changes.\n   *\n   * @controllable expanded\n   */\n  onToggle: PropTypes.func,\n  eventKey: PropTypes.any,\n\n  /**\n   * An HTML `id` attribute uniquely identifying the Panel component.\n   */\n  id: PropTypes.string\n};\n\nvar contextTypes = {\n  $bs_panelGroup: PropTypes.shape({\n    getId: PropTypes.func,\n    activeKey: PropTypes.any,\n    onToggle: PropTypes.func\n  })\n};\n\nvar childContextTypes = {\n  $bs_panel: PropTypes.shape({\n    headingId: PropTypes.string,\n    bodyId: PropTypes.string,\n    bsClass: PropTypes.string,\n    onToggle: PropTypes.func,\n    expanded: PropTypes.bool\n  })\n};\n\nvar Panel = function (_React$Component) {\n  _inherits(Panel, _React$Component);\n\n  function Panel() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Panel);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleToggle = function (e) {\n      var panelGroup = _this.context.$bs_panelGroup;\n      var expanded = !_this.getExpanded();\n\n      if (panelGroup && panelGroup.onToggle) {\n        panelGroup.onToggle(_this.props.eventKey, expanded, e);\n      } else {\n        _this.props.onToggle(expanded, e);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Panel.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        eventKey = _props.eventKey,\n        id = _props.id;\n\n    var idKey = eventKey == null ? id : eventKey;\n\n    var ids = void 0;\n\n    if (idKey !== null) {\n      var panelGroup = this.context.$bs_panelGroup;\n      var getId = panelGroup && panelGroup.getId || defaultGetId;\n\n      ids = {\n        headingId: getId(idKey, 'heading'),\n        bodyId: getId(idKey, 'body')\n      };\n    }\n\n    return {\n      $bs_panel: _extends({}, ids, {\n        bsClass: this.props.bsClass,\n        expanded: this.getExpanded(),\n        onToggle: this.handleToggle\n      })\n    };\n  };\n\n  Panel.prototype.getExpanded = function getExpanded() {\n    var panelGroup = this.context.$bs_panelGroup;\n\n    if (panelGroup && has.call(panelGroup, 'activeKey')) {\n      process.env.NODE_ENV !== 'production' ? warning(this.props.expanded == null, 'Specifying `<Panel>` `expanded` in the context of an accordion ' + '`<PanelGroup>` is not supported. Set `activeKey` on the ' + '`<PanelGroup>` instead.') : void 0;\n\n      return panelGroup.activeKey === this.props.eventKey;\n    }\n\n    return !!this.props.expanded;\n  };\n\n  Panel.prototype.render = function render() {\n    var _props2 = this.props,\n        className = _props2.className,\n        children = _props2.children;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(this.props, ['onToggle', 'eventKey', 'expanded']),\n        bsProps = _splitBsPropsAndOmit[0],\n        props = _splitBsPropsAndOmit[1];\n\n    return React.createElement(\n      'div',\n      _extends({}, props, { className: classNames(className, getClassSet(bsProps)) }),\n      children\n    );\n  };\n\n  return Panel;\n}(React.Component);\n\nPanel.propTypes = propTypes;\n\nPanel.contextTypes = contextTypes;\nPanel.childContextTypes = childContextTypes;\n\nvar UncontrolledPanel = uncontrollable(bsClass('panel', bsStyles([].concat(_Object$values(State), [Style.DEFAULT, Style.PRIMARY]), Style.DEFAULT, Panel)), { expanded: 'onToggle' });\n\n_Object$assign(UncontrolledPanel, {\n  Heading: Heading,\n  Title: Title,\n  Body: Body,\n  Footer: Footer,\n  Toggle: Toggle,\n  Collapse: Collapse\n});\n\nexport default UncontrolledPanel;"]},"metadata":{},"sourceType":"module"}