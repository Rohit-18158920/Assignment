{"ast":null,"code":"export function getAllSelectedOptions(options, selectedIndices) {\n  var selectedOptions = [];\n\n  for (var _i = 0, selectedIndices_1 = selectedIndices; _i < selectedIndices_1.length; _i++) {\n    var index = selectedIndices_1[_i];\n    var option = options[index];\n\n    if (option) {\n      selectedOptions.push(option);\n    }\n  }\n\n  return selectedOptions;\n}","map":{"version":3,"sources":["utilities/selectableOption/SelectableOption.ts"],"names":[],"mappings":"AAEA,OAAM,SAAU,qBAAV,CAAgC,OAAhC,EAA8D,eAA9D,EAAuF;AAC3F,MAAM,eAAe,GAAwB,EAA7C;;AACA,OAAoB,IAAA,EAAA,GAAA,CAAA,EAAA,iBAAA,GAAA,eAApB,EAAoB,EAAA,GAAA,iBAAA,CAAA,MAApB,EAAoB,EAAA,EAApB,EAAqC;AAAhC,QAAM,KAAK,GAAA,iBAAA,CAAA,EAAA,CAAX;AACH,QAAM,MAAM,GAAG,OAAO,CAAC,KAAD,CAAtB;;AAEA,QAAI,MAAJ,EAAY;AACV,MAAA,eAAe,CAAC,IAAhB,CAAqB,MAArB;AACD;AACF;;AAED,SAAO,eAAP;AACD","sourcesContent":["import { ISelectableOption } from '../../utilities/selectableOption/SelectableOption.types';\n\nexport function getAllSelectedOptions(options: ISelectableOption[], selectedIndices: number[]): ISelectableOption[] {\n  const selectedOptions: ISelectableOption[] = [];\n  for (const index of selectedIndices) {\n    const option = options[index];\n\n    if (option) {\n      selectedOptions.push(option);\n    }\n  }\n\n  return selectedOptions;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}