{"ast":null,"code":"import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\n\nexport function getVirtualParent(child) {\n  var parent;\n\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n\n  return parent;\n}","map":{"version":3,"sources":["getVirtualParent.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,QAAiC,oBAAjC;AACA;;;;AAIG;;AACH,OAAM,SAAU,gBAAV,CAA2B,KAA3B,EAA6C;AACjD,MAAI,MAAJ;;AACA,MAAI,KAAK,IAAI,gBAAgB,CAAC,KAAD,CAA7B,EAAsC;AACpC,IAAA,MAAM,GAAG,KAAK,CAAC,QAAN,CAAe,MAAxB;AACD;;AACD,SAAO,MAAP;AACD","sourcesContent":["import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\nexport function getVirtualParent(child: HTMLElement): HTMLElement | undefined {\n  let parent: HTMLElement | undefined;\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n  return parent;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}