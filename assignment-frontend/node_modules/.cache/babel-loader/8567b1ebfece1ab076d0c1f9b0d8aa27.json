{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from './Button';\nimport SafeAnchor from './SafeAnchor';\nimport { bsClass as setBsClass } from './utils/bootstrapUtils';\nvar propTypes = {\n  noCaret: PropTypes.bool,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  useAnchor: PropTypes.bool\n};\nvar defaultProps = {\n  open: false,\n  useAnchor: false,\n  bsRole: 'toggle'\n};\n\nvar DropdownToggle = function (_React$Component) {\n  _inherits(DropdownToggle, _React$Component);\n\n  function DropdownToggle() {\n    _classCallCheck(this, DropdownToggle);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  DropdownToggle.prototype.render = function render() {\n    var _props = this.props,\n        noCaret = _props.noCaret,\n        open = _props.open,\n        useAnchor = _props.useAnchor,\n        bsClass = _props.bsClass,\n        className = _props.className,\n        children = _props.children,\n        props = _objectWithoutProperties(_props, ['noCaret', 'open', 'useAnchor', 'bsClass', 'className', 'children']);\n\n    delete props.bsRole;\n    var Component = useAnchor ? SafeAnchor : Button;\n    var useCaret = !noCaret; // This intentionally forwards bsSize and bsStyle (if set) to the\n    // underlying component, to allow it to render size and style variants.\n    // FIXME: Should this really fall back to `title` as children?\n\n    return React.createElement(Component, _extends({}, props, {\n      role: 'button',\n      className: classNames(className, bsClass),\n      'aria-haspopup': true,\n      'aria-expanded': open\n    }), children || props.title, useCaret && ' ', useCaret && React.createElement('span', {\n      className: 'caret'\n    }));\n  };\n\n  return DropdownToggle;\n}(React.Component);\n\nDropdownToggle.propTypes = propTypes;\nDropdownToggle.defaultProps = defaultProps;\nexport default setBsClass('dropdown-toggle', DropdownToggle);","map":{"version":3,"sources":["D:/personalWork/assignment-frontend/node_modules/react-bootstrap/es/DropdownToggle.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","React","PropTypes","classNames","Button","SafeAnchor","bsClass","setBsClass","propTypes","noCaret","bool","open","title","string","useAnchor","defaultProps","bsRole","DropdownToggle","_React$Component","apply","arguments","prototype","render","_props","props","className","children","Component","useCaret","createElement","role"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from './Button';\nimport SafeAnchor from './SafeAnchor';\n\nimport { bsClass as setBsClass } from './utils/bootstrapUtils';\n\nvar propTypes = {\n  noCaret: PropTypes.bool,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  useAnchor: PropTypes.bool\n};\n\nvar defaultProps = {\n  open: false,\n  useAnchor: false,\n  bsRole: 'toggle'\n};\n\nvar DropdownToggle = function (_React$Component) {\n  _inherits(DropdownToggle, _React$Component);\n\n  function DropdownToggle() {\n    _classCallCheck(this, DropdownToggle);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  DropdownToggle.prototype.render = function render() {\n    var _props = this.props,\n        noCaret = _props.noCaret,\n        open = _props.open,\n        useAnchor = _props.useAnchor,\n        bsClass = _props.bsClass,\n        className = _props.className,\n        children = _props.children,\n        props = _objectWithoutProperties(_props, ['noCaret', 'open', 'useAnchor', 'bsClass', 'className', 'children']);\n\n    delete props.bsRole;\n\n    var Component = useAnchor ? SafeAnchor : Button;\n    var useCaret = !noCaret;\n\n    // This intentionally forwards bsSize and bsStyle (if set) to the\n    // underlying component, to allow it to render size and style variants.\n\n    // FIXME: Should this really fall back to `title` as children?\n\n    return React.createElement(\n      Component,\n      _extends({}, props, {\n        role: 'button',\n        className: classNames(className, bsClass),\n        'aria-haspopup': true,\n        'aria-expanded': open\n      }),\n      children || props.title,\n      useCaret && ' ',\n      useCaret && React.createElement('span', { className: 'caret' })\n    );\n  };\n\n  return DropdownToggle;\n}(React.Component);\n\nDropdownToggle.propTypes = propTypes;\nDropdownToggle.defaultProps = defaultProps;\n\nexport default setBsClass('dropdown-toggle', DropdownToggle);"]},"metadata":{},"sourceType":"module"}