{"ast":null,"code":"var SuggestionsStore =\n/** @class */\nfunction () {\n  function SuggestionsStore(options) {\n    var _this = this;\n\n    this._isSuggestionModel = function (value) {\n      return value.item !== undefined;\n    };\n\n    this._ensureSuggestionModel = function (suggestion) {\n      if (_this._isSuggestionModel(suggestion)) {\n        return suggestion;\n      } else {\n        return {\n          item: suggestion,\n          selected: false,\n          ariaLabel: _this.getAriaLabel !== undefined ? _this.getAriaLabel(suggestion) : suggestion.name || suggestion.text || suggestion.primaryText\n        };\n      }\n    };\n\n    this.suggestions = [];\n    this.getAriaLabel = options && options.getAriaLabel;\n  }\n\n  SuggestionsStore.prototype.updateSuggestions = function (newSuggestions) {\n    if (newSuggestions && newSuggestions.length > 0) {\n      this.suggestions = this.convertSuggestionsToSuggestionItems(newSuggestions);\n    } else {\n      this.suggestions = [];\n    }\n  };\n\n  SuggestionsStore.prototype.getSuggestions = function () {\n    return this.suggestions;\n  };\n\n  SuggestionsStore.prototype.getSuggestionAtIndex = function (index) {\n    return this.suggestions[index];\n  };\n\n  SuggestionsStore.prototype.removeSuggestion = function (index) {\n    this.suggestions.splice(index, 1);\n  };\n\n  SuggestionsStore.prototype.convertSuggestionsToSuggestionItems = function (suggestions) {\n    return Array.isArray(suggestions) ? suggestions.map(this._ensureSuggestionModel) : [];\n  };\n\n  return SuggestionsStore;\n}();\n\nexport { SuggestionsStore };","map":{"version":3,"sources":["components/FloatingPicker/Suggestions/SuggestionsStore.ts"],"names":[],"mappings":"AAOA,IAAA,gBAAA;AAAA;AAAA,YAAA;AAIE,WAAA,gBAAA,CAAY,OAAZ,EAAgD;AAAhD,QAAA,KAAA,GAAA,IAAA;;AA6BQ,SAAA,kBAAA,GAAqB,UAAC,KAAD,EAA+B;AAC1D,aAA6B,KAAM,CAAC,IAAP,KAAgB,SAA7C;AACD,KAFO;;AAIA,SAAA,sBAAA,GAAyB,UAAC,UAAD,EAAoC;AACnE,UAAI,KAAI,CAAC,kBAAL,CAAwB,UAAxB,CAAJ,EAAyC;AACvC,eAAO,UAAP;AACD,OAFD,MAEO;AACL,eAAO;AACL,UAAA,IAAI,EAAE,UADD;AAEL,UAAA,QAAQ,EAAE,KAFL;AAGL,UAAA,SAAS,EACP,KAAI,CAAC,YAAL,KAAsB,SAAtB,GACI,KAAI,CAAC,YAAL,CAAkB,UAAlB,CADJ,GAEM,UAA2B,CAAC,IAA5B,IACc,UAAW,CAAC,IAD1B,IAEc,UAAW,CAAC;AAR7B,SAAP;AAUD;AACF,KAfO;;AAhCN,SAAK,WAAL,GAAmB,EAAnB;AACA,SAAK,YAAL,GAAoB,OAAO,IAAI,OAAO,CAAC,YAAvC;AACD;;AAEM,EAAA,gBAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,UAAyB,cAAzB,EAA4C;AAC1C,QAAI,cAAc,IAAI,cAAc,CAAC,MAAf,GAAwB,CAA9C,EAAiD;AAC/C,WAAK,WAAL,GAAmB,KAAK,mCAAL,CAAyC,cAAzC,CAAnB;AACD,KAFD,MAEO;AACL,WAAK,WAAL,GAAmB,EAAnB;AACD;AACF,GANM;;AAQA,EAAA,gBAAA,CAAA,SAAA,CAAA,cAAA,GAAP,YAAA;AACE,WAAO,KAAK,WAAZ;AACD,GAFM;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,oBAAA,GAAP,UAA4B,KAA5B,EAAyC;AACvC,WAAO,KAAK,WAAL,CAAiB,KAAjB,CAAP;AACD,GAFM;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,UAAwB,KAAxB,EAAqC;AACnC,SAAK,WAAL,CAAiB,MAAjB,CAAwB,KAAxB,EAA+B,CAA/B;AACD,GAFM;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,mCAAA,GAAP,UAA2C,WAA3C,EAAsF;AACpF,WAAO,KAAK,CAAC,OAAN,CAAc,WAAd,IAA6B,WAAW,CAAC,GAAZ,CAAgB,KAAK,sBAArB,CAA7B,GAA4E,EAAnF;AACD,GAFM;;AAwBT,SAAA,gBAAA;AAAC,CArDD,EAAA","sourcesContent":["import { ISuggestionModel, ITag } from '../../../Pickers';\nimport { IPersonaProps } from '../../../Persona';\n\nexport type SuggestionsStoreOptions<T> = {\n  getAriaLabel?: (item: T) => string;\n};\n\nexport class SuggestionsStore<T> {\n  public suggestions: ISuggestionModel<T>[];\n  private getAriaLabel?: (item: T) => string;\n\n  constructor(options?: SuggestionsStoreOptions<T>) {\n    this.suggestions = [];\n    this.getAriaLabel = options && options.getAriaLabel;\n  }\n\n  public updateSuggestions(newSuggestions: T[]): void {\n    if (newSuggestions && newSuggestions.length > 0) {\n      this.suggestions = this.convertSuggestionsToSuggestionItems(newSuggestions);\n    } else {\n      this.suggestions = [];\n    }\n  }\n\n  public getSuggestions(): ISuggestionModel<T>[] {\n    return this.suggestions;\n  }\n\n  public getSuggestionAtIndex(index: number): ISuggestionModel<T> {\n    return this.suggestions[index];\n  }\n\n  public removeSuggestion(index: number): void {\n    this.suggestions.splice(index, 1);\n  }\n\n  public convertSuggestionsToSuggestionItems(suggestions: Array<ISuggestionModel<T> | T>): ISuggestionModel<T>[] {\n    return Array.isArray(suggestions) ? suggestions.map(this._ensureSuggestionModel) : [];\n  }\n\n  private _isSuggestionModel = (value: ISuggestionModel<T> | T): value is ISuggestionModel<T> => {\n    return (<ISuggestionModel<T>>value).item !== undefined;\n  };\n\n  private _ensureSuggestionModel = (suggestion: ISuggestionModel<T> | T): ISuggestionModel<T> => {\n    if (this._isSuggestionModel(suggestion)) {\n      return suggestion;\n    } else {\n      return {\n        item: suggestion,\n        selected: false,\n        ariaLabel:\n          this.getAriaLabel !== undefined\n            ? this.getAriaLabel(suggestion)\n            : ((suggestion as any) as ITag).name ||\n              (<IPersonaProps>suggestion).text ||\n              (<IPersonaProps>suggestion).primaryText, // eslint-disable-line deprecation/deprecation\n      };\n    }\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}