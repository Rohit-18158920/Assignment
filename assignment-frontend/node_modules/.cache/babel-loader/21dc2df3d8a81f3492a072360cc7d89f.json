{"ast":null,"code":"import { _isSSR } from './setSSR';\n/**\n * Helper to get the document object. Note that in popup window cases, document\n * might be the wrong document, which is why we look at ownerDocument for the\n * truth. Also note that the SSR flag is used to test ssr scenarios even if\n * document is defined (from JSDOM for example.)\n *\n * @public\n */\n\nexport function getDocument(rootElement) {\n  if (_isSSR || typeof document === 'undefined') {\n    return undefined;\n  } else {\n    var el = rootElement;\n    return el && el.ownerDocument ? el.ownerDocument : document;\n  }\n}","map":{"version":3,"sources":["dom/getDocument.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,UAAvB;AAEA;;;;;;;AAOG;;AACH,OAAM,SAAU,WAAV,CAAsB,WAAtB,EAAsD;AAC1D,MAAI,MAAM,IAAI,OAAO,QAAP,KAAoB,WAAlC,EAA+C;AAC7C,WAAO,SAAP;AACD,GAFD,MAEO;AACL,QAAM,EAAE,GAAG,WAAX;AAEA,WAAO,EAAE,IAAI,EAAE,CAAC,aAAT,GAAyB,EAAE,CAAC,aAA5B,GAA4C,QAAnD;AACD;AACF","sourcesContent":["import { _isSSR } from './setSSR';\n\n/**\n * Helper to get the document object. Note that in popup window cases, document\n * might be the wrong document, which is why we look at ownerDocument for the\n * truth. Also note that the SSR flag is used to test ssr scenarios even if\n * document is defined (from JSDOM for example.)\n *\n * @public\n */\nexport function getDocument(rootElement?: HTMLElement | null): Document | undefined {\n  if (_isSSR || typeof document === 'undefined') {\n    return undefined;\n  } else {\n    const el = rootElement as Element;\n\n    return el && el.ownerDocument ? el.ownerDocument : document;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}