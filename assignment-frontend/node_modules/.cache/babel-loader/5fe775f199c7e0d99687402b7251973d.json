{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../../Utilities';\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { Callout, FocusTrapCallout } from '../../../Callout';\nexport var CardCallout = function (props) {\n  var _a = props.gapSpace,\n      gapSpace = _a === void 0 ? 0 : _a,\n      _b = props.directionalHint,\n      directionalHint = _b === void 0 ? DirectionalHint.bottomLeftEdge : _b,\n      directionalHintFixed = props.directionalHintFixed,\n      targetElement = props.targetElement,\n      firstFocus = props.firstFocus,\n      trapFocus = props.trapFocus,\n      onLeave = props.onLeave,\n      className = props.className,\n      finalHeight = props.finalHeight,\n      content = props.content,\n      calloutProps = props.calloutProps;\n\n  var mergedCalloutProps = __assign(__assign(__assign({}, getNativeProps(props, divProperties)), {\n    className: className,\n    target: targetElement,\n    isBeakVisible: false,\n    directionalHint: directionalHint,\n    directionalHintFixed: directionalHintFixed,\n    finalHeight: finalHeight,\n    minPagePadding: 24,\n    onDismiss: onLeave,\n    gapSpace: gapSpace\n  }), calloutProps);\n\n  return React.createElement(React.Fragment, null, trapFocus ? React.createElement(FocusTrapCallout, __assign({}, mergedCalloutProps, {\n    focusTrapProps: {\n      forceFocusInsideTrap: false,\n      isClickableOutsideFocusTrap: true,\n      disableFirstFocus: !firstFocus\n    }\n  }), content) : React.createElement(Callout, __assign({}, mergedCalloutProps), content));\n};","map":{"version":3,"sources":["components/HoverCard/CardCallout/CardCallout.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,aAAT,EAAwB,cAAxB,QAA8C,oBAA9C;AACA,SAAS,eAAT,QAAgC,iCAAhC;AAEA,SAAS,OAAT,EAAkB,gBAAlB,QAAyD,kBAAzD;AAOA,OAAO,IAAM,WAAW,GAAG,UAAC,KAAD,EAAyB;AAEhD,MAAA,EAAA,GAAA,KAAA,CAAA,QAAA;AAAA,MAAA,QAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,MACA,EAAA,GAAA,KAAA,CAAA,eADA;AAAA,MACA,eAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,eAAA,CAAA,cAAA,GAAA,EADA;AAAA,MAEA,oBAAA,GAAA,KAAA,CAAA,oBAFA;AAAA,MAGA,aAAA,GAAA,KAAA,CAAA,aAHA;AAAA,MAIA,UAAA,GAAA,KAAA,CAAA,UAJA;AAAA,MAKA,SAAA,GAAA,KAAA,CAAA,SALA;AAAA,MAMA,OAAA,GAAA,KAAA,CAAA,OANA;AAAA,MAOA,SAAA,GAAA,KAAA,CAAA,SAPA;AAAA,MAQA,WAAA,GAAA,KAAA,CAAA,WARA;AAAA,MASA,OAAA,GAAA,KAAA,CAAA,OATA;AAAA,MAUA,YAAA,GAAA,KAAA,CAAA,YAVA;;AAaF,MAAM,kBAAkB,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,cAAc,CAAC,KAAD,EAAQ,aAAR,CADK,CAAA,EACiB;AACvC,IAAA,SAAS,EAAE,SAD4B;AAEvC,IAAA,MAAM,EAAE,aAF+B;AAGvC,IAAA,aAAa,EAAE,KAHwB;AAIvC,IAAA,eAAe,EAAE,eAJsB;AAKvC,IAAA,oBAAoB,EAAE,oBALiB;AAMvC,IAAA,WAAW,EAAE,WAN0B;AAOvC,IAAA,cAAc,EAAE,EAPuB;AAQvC,IAAA,SAAS,EAAE,OAR4B;AASvC,IAAA,QAAQ,EAAE;AAT6B,GADjB,CAAA,EAWnB,YAXmB,CAAxB;;AAcA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,SAAS,GACR,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,QAAA,CAAA,EAAA,EACX,kBADW,EACO;AACtB,IAAA,cAAc,EAAE;AACd,MAAA,oBAAoB,EAAE,KADR;AAEd,MAAA,2BAA2B,EAAE,IAFf;AAGd,MAAA,iBAAiB,EAAE,CAAC;AAHN;AADM,GADP,CAAjB,EAQG,OARH,CADQ,GAYR,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,QAAA,CAAA,EAAA,EAAK,kBAAL,CAAR,EAAkC,OAAlC,CAbJ,CADF;AAkBD,CA/CM","sourcesContent":["import * as React from 'react';\n\nimport { divProperties, getNativeProps } from '../../../Utilities';\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { IBaseCardProps } from '../BaseCard.types';\nimport { Callout, FocusTrapCallout, ICalloutProps } from '../../../Callout';\n\nexport interface ICardCalloutProps extends IBaseCardProps<{}, {}, {}> {\n  finalHeight?: number;\n  content?: JSX.Element;\n}\n\nexport const CardCallout = (props: ICardCalloutProps) => {\n  const {\n    gapSpace = 0,\n    directionalHint = DirectionalHint.bottomLeftEdge,\n    directionalHintFixed,\n    targetElement,\n    firstFocus,\n    trapFocus,\n    onLeave,\n    className,\n    finalHeight,\n    content,\n    calloutProps,\n  } = props;\n\n  const mergedCalloutProps: ICalloutProps = {\n    ...getNativeProps(props, divProperties),\n    className: className,\n    target: targetElement,\n    isBeakVisible: false,\n    directionalHint: directionalHint,\n    directionalHintFixed: directionalHintFixed,\n    finalHeight: finalHeight,\n    minPagePadding: 24,\n    onDismiss: onLeave,\n    gapSpace: gapSpace,\n    ...calloutProps,\n  };\n\n  return (\n    <>\n      {trapFocus ? (\n        <FocusTrapCallout\n          {...mergedCalloutProps}\n          focusTrapProps={{\n            forceFocusInsideTrap: false,\n            isClickableOutsideFocusTrap: true,\n            disableFirstFocus: !firstFocus,\n          }}\n        >\n          {content}\n        </FocusTrapCallout>\n      ) : (\n        <Callout {...mergedCalloutProps}>{content}</Callout>\n      )}\n    </>\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}