{"ast":null,"code":"import { findElementRecursive } from './findElementRecursive';\nimport { DATA_PORTAL_ATTRIBUTE } from './setPortalAttribute';\n/**\n * Determine whether a target is within a portal from perspective of root or optional parent.\n * This function only works against portal components that use the setPortalAttribute function.\n * If both parent and child are within the same portal this function will return false.\n * @param target - Element to query portal containment status of.\n * @param parent - Optional parent perspective. Search for containing portal stops at parent\n * (or root if parent is undefined or invalid.)\n */\n\nexport function portalContainsElement(target, parent) {\n  var elementMatch = findElementRecursive(target, function (testElement) {\n    return parent === testElement || testElement.hasAttribute(DATA_PORTAL_ATTRIBUTE);\n  });\n  return elementMatch !== null && elementMatch.hasAttribute(DATA_PORTAL_ATTRIBUTE);\n}","map":{"version":3,"sources":["portalContainsElement.ts"],"names":[],"mappings":"AAAA,SAAS,oBAAT,QAAqC,wBAArC;AACA,SAAS,qBAAT,QAAsC,sBAAtC;AAEA;;;;;;;AAOG;;AACH,OAAM,SAAU,qBAAV,CAAgC,MAAhC,EAAqD,MAArD,EAAyE;AAC7E,MAAM,YAAY,GAAG,oBAAoB,CACvC,MADuC,EAEvC,UAAC,WAAD,EAAyB;AAAK,WAAA,MAAM,KAAK,WAAX,IAA0B,WAAW,CAAC,YAAZ,CAA1B,qBAA0B,CAA1B;AAAyE,GAFhE,CAAzC;AAIA,SAAO,YAAY,KAAK,IAAjB,IAAyB,YAAY,CAAC,YAAb,CAA0B,qBAA1B,CAAhC;AACD","sourcesContent":["import { findElementRecursive } from './findElementRecursive';\nimport { DATA_PORTAL_ATTRIBUTE } from './setPortalAttribute';\n\n/**\n * Determine whether a target is within a portal from perspective of root or optional parent.\n * This function only works against portal components that use the setPortalAttribute function.\n * If both parent and child are within the same portal this function will return false.\n * @param target - Element to query portal containment status of.\n * @param parent - Optional parent perspective. Search for containing portal stops at parent\n * (or root if parent is undefined or invalid.)\n */\nexport function portalContainsElement(target: HTMLElement, parent?: HTMLElement): boolean {\n  const elementMatch = findElementRecursive(\n    target,\n    (testElement: HTMLElement) => parent === testElement || testElement.hasAttribute(DATA_PORTAL_ATTRIBUTE),\n  );\n  return elementMatch !== null && elementMatch.hasAttribute(DATA_PORTAL_ATTRIBUTE);\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}