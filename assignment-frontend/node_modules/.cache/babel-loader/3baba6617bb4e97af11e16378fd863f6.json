{"ast":null,"code":"/**\n * Allows you to hoist static functions in components.\n * Created for the purpose of fixing broken static functions in classes\n * that utilize decorators.\n *\n * @public\n * @param source - The object where the methods are hoisted from.\n * @param dest - The object to hoist the methods onto.\n * @returns The dest object with methods added\n */\nexport function hoistStatics(source, dest) {\n  for (var name_1 in source) {\n    if (source.hasOwnProperty(name_1)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      dest[name_1] = source[name_1];\n    }\n  }\n\n  return dest;\n}","map":{"version":3,"sources":["hoistStatics.ts"],"names":[],"mappings":"AAAA;;;;;;;;;AASG;AAEH,OAAM,SAAU,YAAV,CAAsD,MAAtD,EAAuE,IAAvE,EAAkF;AACtF,OAAK,IAAM,MAAX,IAAmB,MAAnB,EAA2B;AACzB,QAAI,MAAM,CAAC,cAAP,CAAsB,MAAtB,CAAJ,EAAiC;AAC/B;AACC,MAAA,IAAY,CAAC,MAAD,CAAZ,GAAqB,MAAM,CAAC,MAAD,CAA3B;AACF;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["/**\n * Allows you to hoist static functions in components.\n * Created for the purpose of fixing broken static functions in classes\n * that utilize decorators.\n *\n * @public\n * @param source - The object where the methods are hoisted from.\n * @param dest - The object to hoist the methods onto.\n * @returns The dest object with methods added\n */\n\nexport function hoistStatics<TSource extends Object, TDest>(source: TSource, dest: TDest): TDest {\n  for (const name in source) {\n    if (source.hasOwnProperty(name)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (dest as any)[name] = source[name];\n    }\n  }\n\n  return dest;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}