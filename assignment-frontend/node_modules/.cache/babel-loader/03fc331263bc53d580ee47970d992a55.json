{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\nimport { Position } from '../../utilities/positioning';\nexport var getClassNames = memoizeFunction(function (styles, disabled, isFocused, keyboardSpinDirection, labelPosition, className) {\n  if (labelPosition === void 0) {\n    labelPosition = Position.start;\n  }\n\n  if (className === void 0) {\n    className = undefined;\n  }\n\n  return {\n    root: mergeStyles(styles.root, className),\n    labelWrapper: mergeStyles(styles.labelWrapper, _getStyleForLabelBasedOnPosition(labelPosition, styles)),\n    icon: mergeStyles(styles.icon, disabled && styles.iconDisabled),\n    label: mergeStyles(styles.label),\n    spinButtonWrapper: mergeStyles(styles.spinButtonWrapper, _getStyleForRootBasedOnPosition(labelPosition, styles), !disabled && [{\n      selectors: {\n        ':hover': styles.spinButtonWrapperHovered\n      }\n    }, isFocused && {\n      // This is to increase the specificity of the focus styles\n      // and make it equal to that of the hover styles.\n      selectors: {\n        '&&': styles.spinButtonWrapperFocused\n      }\n    }], disabled && styles.spinButtonWrapperDisabled),\n    input: mergeStyles('ms-spinButton-input', styles.input, !disabled && {\n      selectors: {\n        '::selection': styles.inputTextSelected\n      }\n    }, disabled && styles.inputDisabled),\n    arrowBox: mergeStyles(styles.arrowButtonsContainer, disabled && styles.arrowButtonsContainerDisabled)\n  };\n});\n/**\n * Returns the Style corresponding to the label position\n */\n\nfunction _getStyleForLabelBasedOnPosition(labelPosition, styles) {\n  switch (labelPosition) {\n    case Position.start:\n      return styles.labelWrapperStart;\n\n    case Position.end:\n      return styles.labelWrapperEnd;\n\n    case Position.top:\n      return styles.labelWrapperTop;\n\n    case Position.bottom:\n      return styles.labelWrapperBottom;\n  }\n}\n/**\n * Returns the Style corresponding to the label position\n */\n\n\nfunction _getStyleForRootBasedOnPosition(labelPosition, styles) {\n  switch (labelPosition) {\n    case Position.top:\n    case Position.bottom:\n      return styles.spinButtonWrapperTopBottom;\n\n    default:\n      return {};\n  }\n}","map":{"version":3,"sources":["components/SpinButton/SpinButton.classNames.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,QAAgC,iBAAhC;AACA,SAAS,WAAT,QAAoC,eAApC;AAGA,SAAS,QAAT,QAAyB,6BAAzB;AAEA,OAAO,IAAM,aAAa,GAAG,eAAe,CAC1C,UACE,MADF,EAEE,QAFF,EAGE,SAHF,EAIE,qBAJF,EAKE,aALF,EAME,SANF,EAM2C;AADzC,MAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAA0B,QAAQ,CAAC,KAAnC;AAAwC;;AACxC,MAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,SAAA;AAAyC;;AAEzC,SAAO;AACL,IAAA,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,SAAd,CADZ;AAEL,IAAA,YAAY,EAAE,WAAW,CAAC,MAAM,CAAC,YAAR,EAAsB,gCAAgC,CAAC,aAAD,EAAgB,MAAhB,CAAtD,CAFpB;AAGL,IAAA,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,QAAQ,IAAI,MAAM,CAAC,YAAjC,CAHZ;AAIL,IAAA,KAAK,EAAE,WAAW,CAAC,MAAM,CAAC,KAAR,CAJb;AAKL,IAAA,iBAAiB,EAAE,WAAW,CAC5B,MAAM,CAAC,iBADqB,EAE5B,+BAA+B,CAAC,aAAD,EAAgB,MAAhB,CAFH,EAG5B,CAAC,QAAD,IAAa,CACX;AACE,MAAA,SAAS,EAAE;AACT,kBAAU,MAAM,CAAC;AADR;AADb,KADW,EAMX,SAAS,IAAI;AACX;AACA;AACA,MAAA,SAAS,EAAE;AACT,cAAM,MAAM,CAAC;AADJ;AAHA,KANF,CAHe,EAiB5B,QAAQ,IAAI,MAAM,CAAC,yBAjBS,CALzB;AAwBL,IAAA,KAAK,EAAE,WAAW,CAChB,qBADgB,EAEhB,MAAM,CAAC,KAFS,EAGhB,CAAC,QAAD,IAAa;AACX,MAAA,SAAS,EAAE;AACT,uBAAe,MAAM,CAAC;AADb;AADA,KAHG,EAQhB,QAAQ,IAAI,MAAM,CAAC,aARH,CAxBb;AAkCL,IAAA,QAAQ,EAAE,WAAW,CAAC,MAAM,CAAC,qBAAR,EAA+B,QAAQ,IAAI,MAAM,CAAC,6BAAlD;AAlChB,GAAP;AAoCD,CA7CyC,CAArC;AAgDP;;AAEG;;AACH,SAAS,gCAAT,CAA0C,aAA1C,EAAmE,MAAnE,EAA4F;AAC1F,UAAQ,aAAR;AACE,SAAK,QAAQ,CAAC,KAAd;AACE,aAAO,MAAM,CAAC,iBAAd;;AACF,SAAK,QAAQ,CAAC,GAAd;AACE,aAAO,MAAM,CAAC,eAAd;;AACF,SAAK,QAAQ,CAAC,GAAd;AACE,aAAO,MAAM,CAAC,eAAd;;AACF,SAAK,QAAQ,CAAC,MAAd;AACE,aAAO,MAAM,CAAC,kBAAd;AARJ;AAUD;AAED;;AAEG;;;AACH,SAAS,+BAAT,CAAyC,aAAzC,EAAkE,MAAlE,EAA2F;AACzF,UAAQ,aAAR;AACE,SAAK,QAAQ,CAAC,GAAd;AACA,SAAK,QAAQ,CAAC,MAAd;AACE,aAAO,MAAM,CAAC,0BAAd;;AACF;AACE,aAAO,EAAP;AALJ;AAOD","sourcesContent":["import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles, IStyle } from '../../Styling';\nimport { ISpinButtonClassNames, ISpinButtonStyles } from './SpinButton.types';\nimport { KeyboardSpinDirection } from './SpinButton';\nimport { Position } from '../../utilities/positioning';\n\nexport const getClassNames = memoizeFunction(\n  (\n    styles: ISpinButtonStyles,\n    disabled: boolean,\n    isFocused: boolean,\n    keyboardSpinDirection: KeyboardSpinDirection,\n    labelPosition: Position = Position.start,\n    className: string | undefined = undefined,\n  ): ISpinButtonClassNames => {\n    return {\n      root: mergeStyles(styles.root, className),\n      labelWrapper: mergeStyles(styles.labelWrapper, _getStyleForLabelBasedOnPosition(labelPosition, styles)),\n      icon: mergeStyles(styles.icon, disabled && styles.iconDisabled),\n      label: mergeStyles(styles.label),\n      spinButtonWrapper: mergeStyles(\n        styles.spinButtonWrapper,\n        _getStyleForRootBasedOnPosition(labelPosition, styles),\n        !disabled && [\n          {\n            selectors: {\n              ':hover': styles.spinButtonWrapperHovered,\n            },\n          },\n          isFocused && {\n            // This is to increase the specificity of the focus styles\n            // and make it equal to that of the hover styles.\n            selectors: {\n              '&&': styles.spinButtonWrapperFocused,\n            },\n          },\n        ],\n        disabled && styles.spinButtonWrapperDisabled,\n      ),\n      input: mergeStyles(\n        'ms-spinButton-input',\n        styles.input,\n        !disabled && {\n          selectors: {\n            '::selection': styles.inputTextSelected,\n          },\n        },\n        disabled && styles.inputDisabled,\n      ),\n      arrowBox: mergeStyles(styles.arrowButtonsContainer, disabled && styles.arrowButtonsContainerDisabled),\n    };\n  },\n);\n\n/**\n * Returns the Style corresponding to the label position\n */\nfunction _getStyleForLabelBasedOnPosition(labelPosition: Position, styles: ISpinButtonStyles): IStyle {\n  switch (labelPosition) {\n    case Position.start:\n      return styles.labelWrapperStart;\n    case Position.end:\n      return styles.labelWrapperEnd;\n    case Position.top:\n      return styles.labelWrapperTop;\n    case Position.bottom:\n      return styles.labelWrapperBottom;\n  }\n}\n\n/**\n * Returns the Style corresponding to the label position\n */\nfunction _getStyleForRootBasedOnPosition(labelPosition: Position, styles: ISpinButtonStyles): IStyle {\n  switch (labelPosition) {\n    case Position.top:\n    case Position.bottom:\n      return styles.spinButtonWrapperTopBottom;\n    default:\n      return {};\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}