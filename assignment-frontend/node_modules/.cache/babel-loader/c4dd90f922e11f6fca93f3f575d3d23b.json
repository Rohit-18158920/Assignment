{"ast":null,"code":"import { __assign } from \"tslib\";\n/** Generates all the semantic slot colors based on the theme so far\n * We'll use these as fallbacks for semantic slots that the passed in theme did not define.\n * The caller must still mix in the customized semantic slots at the end.\n */\n\nexport function makeSemanticColors(p, e, s, isInverted, depComments) {\n  if (depComments === void 0) {\n    depComments = false;\n  }\n\n  var semanticColors = __assign({\n    primaryButtonBorder: 'transparent',\n    errorText: !isInverted ? '#a4262c' : '#F1707B',\n    messageText: !isInverted ? '#323130' : '#F3F2F1',\n    messageLink: !isInverted ? '#005A9E' : '#6CB8F6',\n    messageLinkHovered: !isInverted ? '#004578' : '#82C7FF',\n    infoIcon: !isInverted ? '#605e5c' : '#C8C6C4',\n    errorIcon: !isInverted ? '#A80000' : '#F1707B',\n    blockingIcon: !isInverted ? '#FDE7E9' : '#442726',\n    warningIcon: !isInverted ? '#797775' : '#C8C6C4',\n    severeWarningIcon: !isInverted ? '#D83B01' : '#FCE100',\n    successIcon: !isInverted ? '#107C10' : '#92C353',\n    infoBackground: !isInverted ? '#f3f2f1' : '#323130',\n    errorBackground: !isInverted ? '#FDE7E9' : '#442726',\n    blockingBackground: !isInverted ? '#FDE7E9' : '#442726',\n    warningBackground: !isInverted ? '#FFF4CE' : '#433519',\n    severeWarningBackground: !isInverted ? '#FED9CC' : '#4F2A0F',\n    successBackground: !isInverted ? '#DFF6DD' : '#393D1B',\n    // deprecated\n    warningHighlight: !isInverted ? '#ffb900' : '#fff100',\n    successText: !isInverted ? '#107C10' : '#92c353'\n  }, s);\n\n  var fullSemanticColors = getSemanticColors(p, e, semanticColors, isInverted);\n  return _fixDeprecatedSlots(fullSemanticColors, depComments);\n}\n/**\n * Map partial platte and effects to partial semantic colors.\n */\n\nexport function getSemanticColors(p, e, s, isInverted, depComments) {\n  if (depComments === void 0) {\n    depComments = false;\n  }\n\n  var _a, _b, _c;\n\n  var result = {}; // map palette\n\n  var _d = p || {},\n      white = _d.white,\n      black = _d.black,\n      themePrimary = _d.themePrimary,\n      themeDark = _d.themeDark,\n      themeDarker = _d.themeDarker,\n      themeDarkAlt = _d.themeDarkAlt,\n      themeLighter = _d.themeLighter,\n      neutralLight = _d.neutralLight,\n      neutralLighter = _d.neutralLighter,\n      neutralDark = _d.neutralDark,\n      neutralQuaternary = _d.neutralQuaternary,\n      neutralQuaternaryAlt = _d.neutralQuaternaryAlt,\n      neutralPrimary = _d.neutralPrimary,\n      neutralSecondary = _d.neutralSecondary,\n      neutralSecondaryAlt = _d.neutralSecondaryAlt,\n      neutralTertiary = _d.neutralTertiary,\n      neutralTertiaryAlt = _d.neutralTertiaryAlt,\n      neutralLighterAlt = _d.neutralLighterAlt,\n      accent = _d.accent;\n\n  if (white) {\n    result.bodyBackground = white;\n    result.bodyFrameBackground = white;\n    result.accentButtonText = white;\n    result.buttonBackground = white;\n    result.primaryButtonText = white;\n    result.primaryButtonTextHovered = white;\n    result.primaryButtonTextPressed = white;\n    result.inputBackground = white;\n    result.inputForegroundChecked = white;\n    result.listBackground = white;\n    result.menuBackground = white;\n    result.cardStandoutBackground = white;\n  }\n\n  if (black) {\n    result.bodyTextChecked = black;\n    result.buttonTextCheckedHovered = black;\n  }\n\n  if (themePrimary) {\n    result.link = themePrimary;\n    result.primaryButtonBackground = themePrimary;\n    result.inputBackgroundChecked = themePrimary;\n    result.inputIcon = themePrimary;\n    result.inputFocusBorderAlt = themePrimary;\n    result.menuIcon = themePrimary;\n    result.menuHeader = themePrimary;\n    result.accentButtonBackground = themePrimary;\n  }\n\n  if (themeDark) {\n    result.primaryButtonBackgroundPressed = themeDark;\n    result.inputBackgroundCheckedHovered = themeDark;\n    result.inputIconHovered = themeDark;\n  }\n\n  if (themeDarker) {\n    result.linkHovered = themeDarker;\n  }\n\n  if (themeDarkAlt) {\n    result.primaryButtonBackgroundHovered = themeDarkAlt;\n  }\n\n  if (themeLighter) {\n    result.inputPlaceholderBackgroundChecked = themeLighter;\n  }\n\n  if (neutralLight) {\n    result.bodyBackgroundChecked = neutralLight;\n    result.bodyFrameDivider = neutralLight;\n    result.bodyDivider = neutralLight;\n    result.variantBorder = neutralLight;\n    result.buttonBackgroundCheckedHovered = neutralLight;\n    result.buttonBackgroundPressed = neutralLight;\n    result.listItemBackgroundChecked = neutralLight;\n    result.listHeaderBackgroundPressed = neutralLight;\n    result.menuItemBackgroundPressed = neutralLight; // eslint-disable-next-line deprecation/deprecation\n\n    result.menuItemBackgroundChecked = neutralLight;\n  }\n\n  if (neutralLighter) {\n    result.bodyBackgroundHovered = neutralLighter;\n    result.buttonBackgroundHovered = neutralLighter;\n    result.buttonBackgroundDisabled = neutralLighter;\n    result.buttonBorderDisabled = neutralLighter;\n    result.primaryButtonBackgroundDisabled = neutralLighter;\n    result.disabledBackground = neutralLighter;\n    result.listItemBackgroundHovered = neutralLighter;\n    result.listHeaderBackgroundHovered = neutralLighter;\n    result.menuItemBackgroundHovered = neutralLighter;\n  }\n\n  if (neutralQuaternary) {\n    result.primaryButtonTextDisabled = neutralQuaternary;\n    result.disabledSubtext = neutralQuaternary;\n  }\n\n  if (neutralQuaternaryAlt) {\n    result.listItemBackgroundCheckedHovered = neutralQuaternaryAlt;\n  }\n\n  if (neutralTertiary) {\n    result.disabledBodyText = neutralTertiary;\n    result.variantBorderHovered = ((_a = s) === null || _a === void 0 ? void 0 : _a.variantBorderHovered) || neutralTertiary;\n    result.buttonTextDisabled = neutralTertiary;\n    result.inputIconDisabled = neutralTertiary;\n    result.disabledText = neutralTertiary;\n  }\n\n  if (neutralPrimary) {\n    result.bodyText = neutralPrimary;\n    result.actionLink = neutralPrimary;\n    result.buttonText = neutralPrimary;\n    result.inputBorderHovered = neutralPrimary;\n    result.inputText = neutralPrimary;\n    result.listText = neutralPrimary;\n    result.menuItemText = neutralPrimary;\n  }\n\n  if (neutralLighterAlt) {\n    result.bodyStandoutBackground = neutralLighterAlt;\n    result.defaultStateBackground = neutralLighterAlt;\n  }\n\n  if (neutralDark) {\n    result.actionLinkHovered = neutralDark;\n    result.buttonTextHovered = neutralDark;\n    result.buttonTextChecked = neutralDark;\n    result.buttonTextPressed = neutralDark;\n    result.inputTextHovered = neutralDark;\n    result.menuItemTextHovered = neutralDark;\n  }\n\n  if (neutralSecondary) {\n    result.bodySubtext = neutralSecondary;\n    result.focusBorder = neutralSecondary;\n    result.inputBorder = neutralSecondary;\n    result.smallInputBorder = neutralSecondary;\n    result.inputPlaceholderText = neutralSecondary;\n  }\n\n  if (neutralSecondaryAlt) {\n    result.buttonBorder = neutralSecondaryAlt;\n  }\n\n  if (neutralTertiaryAlt) {\n    result.disabledBodySubtext = neutralTertiaryAlt;\n    result.disabledBorder = neutralTertiaryAlt;\n    result.buttonBackgroundChecked = neutralTertiaryAlt;\n    result.menuDivider = neutralTertiaryAlt;\n  }\n\n  if (accent) {\n    result.accentButtonBackground = accent;\n  } // map effects\n\n\n  if ((_b = e) === null || _b === void 0 ? void 0 : _b.elevation4) {\n    result.cardShadow = e.elevation4;\n  }\n\n  if (!isInverted && ((_c = e) === null || _c === void 0 ? void 0 : _c.elevation8)) {\n    result.cardShadowHovered = e.elevation8;\n  } else if (result.variantBorderHovered) {\n    result.cardShadowHovered = '0 0 1px ' + result.variantBorderHovered;\n  }\n\n  result = __assign(__assign({}, result), s);\n  return result;\n}\n\nfunction _fixDeprecatedSlots(s, depComments) {\n  // Add @deprecated tag as comment if enabled\n  var dep = '';\n\n  if (depComments === true) {\n    dep = ' /* @deprecated */';\n  }\n  /* eslint-disable deprecation/deprecation */\n\n\n  s.listTextColor = s.listText + dep;\n  s.menuItemBackgroundChecked += dep;\n  s.warningHighlight += dep;\n  s.warningText = s.messageText + dep;\n  s.successText += dep;\n  /* eslint-enable deprecation/deprecation */\n\n  return s;\n}","map":{"version":3,"sources":["utilities/makeSemanticColors.ts"],"names":[],"mappings":"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","sourcesContent":["import { IEffects, IPalette, ISemanticColors } from '../types/index';\n\n/** Generates all the semantic slot colors based on the theme so far\n * We'll use these as fallbacks for semantic slots that the passed in theme did not define.\n * The caller must still mix in the customized semantic slots at the end.\n */\nexport function makeSemanticColors(\n  p: IPalette,\n  e: IEffects,\n  s: Partial<ISemanticColors> | undefined,\n  isInverted: boolean,\n  depComments: boolean = false,\n): ISemanticColors {\n  const semanticColors: Partial<ISemanticColors> = {\n    primaryButtonBorder: 'transparent',\n\n    errorText: !isInverted ? '#a4262c' : '#F1707B',\n\n    messageText: !isInverted ? '#323130' : '#F3F2F1',\n    messageLink: !isInverted ? '#005A9E' : '#6CB8F6',\n    messageLinkHovered: !isInverted ? '#004578' : '#82C7FF',\n\n    infoIcon: !isInverted ? '#605e5c' : '#C8C6C4',\n    errorIcon: !isInverted ? '#A80000' : '#F1707B',\n    blockingIcon: !isInverted ? '#FDE7E9' : '#442726',\n    warningIcon: !isInverted ? '#797775' : '#C8C6C4',\n    severeWarningIcon: !isInverted ? '#D83B01' : '#FCE100',\n    successIcon: !isInverted ? '#107C10' : '#92C353',\n\n    infoBackground: !isInverted ? '#f3f2f1' : '#323130',\n    errorBackground: !isInverted ? '#FDE7E9' : '#442726',\n    blockingBackground: !isInverted ? '#FDE7E9' : '#442726',\n    warningBackground: !isInverted ? '#FFF4CE' : '#433519',\n    severeWarningBackground: !isInverted ? '#FED9CC' : '#4F2A0F',\n    successBackground: !isInverted ? '#DFF6DD' : '#393D1B',\n\n    // deprecated\n    warningHighlight: !isInverted ? '#ffb900' : '#fff100',\n    successText: !isInverted ? '#107C10' : '#92c353',\n\n    ...s,\n  };\n\n  const fullSemanticColors = getSemanticColors<ISemanticColors>(p, e, semanticColors, isInverted);\n  return _fixDeprecatedSlots(fullSemanticColors, depComments);\n}\n\n/**\n * Map partial platte and effects to partial semantic colors.\n */\nexport function getSemanticColors<TResult = Partial<ISemanticColors>>(\n  p: Partial<IPalette> | undefined,\n  e: Partial<IEffects> | undefined,\n  s: Partial<ISemanticColors> | undefined,\n  isInverted: boolean,\n  depComments: boolean = false,\n): TResult {\n  let result: Partial<ISemanticColors> = {};\n\n  // map palette\n  const {\n    white,\n    black,\n    themePrimary,\n    themeDark,\n    themeDarker,\n    themeDarkAlt,\n    themeLighter,\n    neutralLight,\n    neutralLighter,\n    neutralDark,\n    neutralQuaternary,\n    neutralQuaternaryAlt,\n    neutralPrimary,\n    neutralSecondary,\n    neutralSecondaryAlt,\n    neutralTertiary,\n    neutralTertiaryAlt,\n    neutralLighterAlt,\n    accent,\n  } = p || {};\n\n  if (white) {\n    result.bodyBackground = white;\n    result.bodyFrameBackground = white;\n    result.accentButtonText = white;\n    result.buttonBackground = white;\n    result.primaryButtonText = white;\n    result.primaryButtonTextHovered = white;\n    result.primaryButtonTextPressed = white;\n    result.inputBackground = white;\n    result.inputForegroundChecked = white;\n    result.listBackground = white;\n    result.menuBackground = white;\n    result.cardStandoutBackground = white;\n  }\n  if (black) {\n    result.bodyTextChecked = black;\n    result.buttonTextCheckedHovered = black;\n  }\n  if (themePrimary) {\n    result.link = themePrimary;\n    result.primaryButtonBackground = themePrimary;\n    result.inputBackgroundChecked = themePrimary;\n    result.inputIcon = themePrimary;\n    result.inputFocusBorderAlt = themePrimary;\n    result.menuIcon = themePrimary;\n    result.menuHeader = themePrimary;\n    result.accentButtonBackground = themePrimary;\n  }\n  if (themeDark) {\n    result.primaryButtonBackgroundPressed = themeDark;\n    result.inputBackgroundCheckedHovered = themeDark;\n    result.inputIconHovered = themeDark;\n  }\n  if (themeDarker) {\n    result.linkHovered = themeDarker;\n  }\n  if (themeDarkAlt) {\n    result.primaryButtonBackgroundHovered = themeDarkAlt;\n  }\n  if (themeLighter) {\n    result.inputPlaceholderBackgroundChecked = themeLighter;\n  }\n  if (neutralLight) {\n    result.bodyBackgroundChecked = neutralLight;\n    result.bodyFrameDivider = neutralLight;\n    result.bodyDivider = neutralLight;\n    result.variantBorder = neutralLight;\n    result.buttonBackgroundCheckedHovered = neutralLight;\n    result.buttonBackgroundPressed = neutralLight;\n    result.listItemBackgroundChecked = neutralLight;\n    result.listHeaderBackgroundPressed = neutralLight;\n    result.menuItemBackgroundPressed = neutralLight;\n    // eslint-disable-next-line deprecation/deprecation\n    result.menuItemBackgroundChecked = neutralLight;\n  }\n  if (neutralLighter) {\n    result.bodyBackgroundHovered = neutralLighter;\n    result.buttonBackgroundHovered = neutralLighter;\n    result.buttonBackgroundDisabled = neutralLighter;\n    result.buttonBorderDisabled = neutralLighter;\n    result.primaryButtonBackgroundDisabled = neutralLighter;\n    result.disabledBackground = neutralLighter;\n    result.listItemBackgroundHovered = neutralLighter;\n    result.listHeaderBackgroundHovered = neutralLighter;\n    result.menuItemBackgroundHovered = neutralLighter;\n  }\n  if (neutralQuaternary) {\n    result.primaryButtonTextDisabled = neutralQuaternary;\n    result.disabledSubtext = neutralQuaternary;\n  }\n  if (neutralQuaternaryAlt) {\n    result.listItemBackgroundCheckedHovered = neutralQuaternaryAlt;\n  }\n  if (neutralTertiary) {\n    result.disabledBodyText = neutralTertiary;\n    result.variantBorderHovered = s?.variantBorderHovered || neutralTertiary;\n    result.buttonTextDisabled = neutralTertiary;\n    result.inputIconDisabled = neutralTertiary;\n    result.disabledText = neutralTertiary;\n  }\n  if (neutralPrimary) {\n    result.bodyText = neutralPrimary;\n    result.actionLink = neutralPrimary;\n    result.buttonText = neutralPrimary;\n    result.inputBorderHovered = neutralPrimary;\n    result.inputText = neutralPrimary;\n    result.listText = neutralPrimary;\n    result.menuItemText = neutralPrimary;\n  }\n  if (neutralLighterAlt) {\n    result.bodyStandoutBackground = neutralLighterAlt;\n    result.defaultStateBackground = neutralLighterAlt;\n  }\n  if (neutralDark) {\n    result.actionLinkHovered = neutralDark;\n    result.buttonTextHovered = neutralDark;\n    result.buttonTextChecked = neutralDark;\n    result.buttonTextPressed = neutralDark;\n    result.inputTextHovered = neutralDark;\n    result.menuItemTextHovered = neutralDark;\n  }\n  if (neutralSecondary) {\n    result.bodySubtext = neutralSecondary;\n    result.focusBorder = neutralSecondary;\n    result.inputBorder = neutralSecondary;\n    result.smallInputBorder = neutralSecondary;\n    result.inputPlaceholderText = neutralSecondary;\n  }\n  if (neutralSecondaryAlt) {\n    result.buttonBorder = neutralSecondaryAlt;\n  }\n  if (neutralTertiaryAlt) {\n    result.disabledBodySubtext = neutralTertiaryAlt;\n    result.disabledBorder = neutralTertiaryAlt;\n    result.buttonBackgroundChecked = neutralTertiaryAlt;\n    result.menuDivider = neutralTertiaryAlt;\n  }\n  if (accent) {\n    result.accentButtonBackground = accent;\n  }\n\n  // map effects\n  if (e?.elevation4) {\n    result.cardShadow = e.elevation4;\n  }\n  if (!isInverted && e?.elevation8) {\n    result.cardShadowHovered = e.elevation8;\n  } else if (result.variantBorderHovered) {\n    result.cardShadowHovered = '0 0 1px ' + result.variantBorderHovered;\n  }\n\n  result = {\n    ...result,\n    // mix in customized semantic slots\n    ...s,\n  };\n\n  return result as TResult;\n}\n\nfunction _fixDeprecatedSlots(s: ISemanticColors, depComments: boolean): ISemanticColors {\n  // Add @deprecated tag as comment if enabled\n  let dep = '';\n  if (depComments === true) {\n    dep = ' /* @deprecated */';\n  }\n\n  /* eslint-disable deprecation/deprecation */\n  s.listTextColor = s.listText + dep;\n  s.menuItemBackgroundChecked += dep;\n  s.warningHighlight += dep;\n  s.warningText = s.messageText + dep;\n  s.successText += dep;\n  /* eslint-enable deprecation/deprecation */\n  return s;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}