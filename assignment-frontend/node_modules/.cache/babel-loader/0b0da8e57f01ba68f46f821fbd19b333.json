{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport elementType from 'react-prop-types/lib/elementType';\nimport { prefix, splitBsProps, bsClass } from './utils/bootstrapUtils';\nimport PanelToggle from './PanelToggle';\nvar propTypes = {\n  componentClass: elementType,\n\n  /**\n   * A convenience prop that renders the Panel.Title as a panel collapse toggle component\n   * for the common use-case.\n   */\n  toggle: PropTypes.bool\n};\nvar contextTypes = {\n  $bs_panel: PropTypes.shape({\n    bsClass: PropTypes.string\n  })\n};\nvar defaultProps = {\n  componentClass: 'div'\n};\n\nvar PanelTitle = function (_React$Component) {\n  _inherits(PanelTitle, _React$Component);\n\n  function PanelTitle() {\n    _classCallCheck(this, PanelTitle);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  PanelTitle.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        className = _props.className,\n        toggle = _props.toggle,\n        Component = _props.componentClass,\n        props = _objectWithoutProperties(_props, ['children', 'className', 'toggle', 'componentClass']);\n\n    var _ref = this.context.$bs_panel || {},\n        _bsClass = _ref.bsClass;\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n\n    if (toggle) {\n      children = React.createElement(PanelToggle, null, children);\n    }\n\n    return React.createElement(Component, _extends({}, elementProps, {\n      className: cn(className, prefix(bsProps, 'title'))\n    }), children);\n  };\n\n  return PanelTitle;\n}(React.Component);\n\nPanelTitle.propTypes = propTypes;\nPanelTitle.defaultProps = defaultProps;\nPanelTitle.contextTypes = contextTypes;\nexport default bsClass('panel', PanelTitle);","map":{"version":3,"sources":["D:/personalWork/assignment-frontend/node_modules/react-bootstrap/es/PanelTitle.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","cn","PropTypes","React","elementType","prefix","splitBsProps","bsClass","PanelToggle","propTypes","componentClass","toggle","bool","contextTypes","$bs_panel","shape","string","defaultProps","PanelTitle","_React$Component","apply","arguments","prototype","render","_props","props","children","className","Component","_ref","context","_bsClass","_splitBsProps","bsProps","elementProps","createElement"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport elementType from 'react-prop-types/lib/elementType';\n\nimport { prefix, splitBsProps, bsClass } from './utils/bootstrapUtils';\nimport PanelToggle from './PanelToggle';\n\nvar propTypes = {\n  componentClass: elementType,\n  /**\n   * A convenience prop that renders the Panel.Title as a panel collapse toggle component\n   * for the common use-case.\n   */\n  toggle: PropTypes.bool\n};\n\nvar contextTypes = {\n  $bs_panel: PropTypes.shape({\n    bsClass: PropTypes.string\n  })\n};\n\nvar defaultProps = {\n  componentClass: 'div'\n};\n\nvar PanelTitle = function (_React$Component) {\n  _inherits(PanelTitle, _React$Component);\n\n  function PanelTitle() {\n    _classCallCheck(this, PanelTitle);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  PanelTitle.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        className = _props.className,\n        toggle = _props.toggle,\n        Component = _props.componentClass,\n        props = _objectWithoutProperties(_props, ['children', 'className', 'toggle', 'componentClass']);\n\n    var _ref = this.context.$bs_panel || {},\n        _bsClass = _ref.bsClass;\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n\n    if (toggle) {\n      children = React.createElement(\n        PanelToggle,\n        null,\n        children\n      );\n    }\n\n    return React.createElement(\n      Component,\n      _extends({}, elementProps, {\n        className: cn(className, prefix(bsProps, 'title'))\n      }),\n      children\n    );\n  };\n\n  return PanelTitle;\n}(React.Component);\n\nPanelTitle.propTypes = propTypes;\nPanelTitle.defaultProps = defaultProps;\nPanelTitle.contextTypes = contextTypes;\n\nexport default bsClass('panel', PanelTitle);"]},"metadata":{},"sourceType":"module"}