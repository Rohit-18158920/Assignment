{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\nexport var getClassNames = memoizeFunction(function (styles, className, isOpen, disabled, required, focused, allowFreeForm, hasErrorMessage) {\n  return {\n    container: mergeStyles('ms-ComboBox-container', className, styles.container),\n    label: mergeStyles(styles.label, disabled && styles.labelDisabled),\n    root: mergeStyles('ms-ComboBox', hasErrorMessage ? styles.rootError : isOpen && 'is-open', required && 'is-required', styles.root, !allowFreeForm && styles.rootDisallowFreeForm, hasErrorMessage && !focused ? styles.rootError : !disabled && focused && styles.rootFocused, !disabled && {\n      selectors: {\n        ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,\n        ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,\n        ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused\n      }\n    }, disabled && ['is-disabled', styles.rootDisabled]),\n    input: mergeStyles('ms-ComboBox-Input', styles.input, disabled && styles.inputDisabled),\n    errorMessage: mergeStyles(styles.errorMessage),\n    callout: mergeStyles('ms-ComboBox-callout', styles.callout),\n    optionsContainerWrapper: mergeStyles('ms-ComboBox-optionsContainerWrapper', styles.optionsContainerWrapper),\n    optionsContainer: mergeStyles('ms-ComboBox-optionsContainer', styles.optionsContainer),\n    header: mergeStyles('ms-ComboBox-header', styles.header),\n    divider: mergeStyles('ms-ComboBox-divider', styles.divider),\n    screenReaderText: mergeStyles(styles.screenReaderText)\n  };\n});\nexport var getComboBoxOptionClassNames = memoizeFunction(function (styles) {\n  return {\n    optionText: mergeStyles('ms-ComboBox-optionText', styles.optionText),\n    root: mergeStyles('ms-ComboBox-option', styles.root, {\n      selectors: {\n        ':hover': styles.rootHovered,\n        ':focus': styles.rootFocused,\n        ':active': styles.rootPressed\n      }\n    }),\n    optionTextWrapper: mergeStyles(styles.optionTextWrapper)\n  };\n});","map":{"version":3,"sources":["components/ComboBox/ComboBox.classNames.ts"],"names":[],"mappings":"AAMA,SAAS,eAAT,QAAgC,iBAAhC;AACA,SAAS,WAAT,QAA4B,eAA5B;AAEA,OAAO,IAAM,aAAa,GAAG,eAAe,CAC1C,UACE,MADF,EAEE,SAFF,EAGE,MAHF,EAIE,QAJF,EAKE,QALF,EAME,OANF,EAOE,aAPF,EAQE,eARF,EAQ0B;AAExB,SAAO;AACL,IAAA,SAAS,EAAE,WAAW,CAAC,uBAAD,EAA0B,SAA1B,EAAqC,MAAM,CAAC,SAA5C,CADjB;AAEL,IAAA,KAAK,EAAE,WAAW,CAAC,MAAM,CAAC,KAAR,EAAe,QAAQ,IAAI,MAAM,CAAC,aAAlC,CAFb;AAGL,IAAA,IAAI,EAAE,WAAW,CACf,aADe,EAEf,eAAe,GAAG,MAAM,CAAC,SAAV,GAAsB,MAAM,IAAI,SAFhC,EAGf,QAAQ,IAAI,aAHG,EAIf,MAAM,CAAC,IAJQ,EAKf,CAAC,aAAD,IAAkB,MAAM,CAAC,oBALV,EAMf,eAAe,IAAI,CAAC,OAApB,GAA8B,MAAM,CAAC,SAArC,GAAiD,CAAC,QAAD,IAAa,OAAb,IAAwB,MAAM,CAAC,WANjE,EAOf,CAAC,QAAD,IAAa;AACX,MAAA,SAAS,EAAE;AACT,kBAAU,eAAe,GAAG,MAAM,CAAC,SAAV,GAAsB,CAAC,MAAD,IAAW,CAAC,OAAZ,IAAuB,MAAM,CAAC,WADpE;AAET,mBAAW,eAAe,GAAG,MAAM,CAAC,SAAV,GAAsB,MAAM,CAAC,WAF9C;AAGT,kBAAU,eAAe,GAAG,MAAM,CAAC,SAAV,GAAsB,MAAM,CAAC;AAH7C;AADA,KAPE,EAcf,QAAQ,IAAI,CAAC,aAAD,EAAgB,MAAM,CAAC,YAAvB,CAdG,CAHZ;AAmBL,IAAA,KAAK,EAAE,WAAW,CAAC,mBAAD,EAAsB,MAAM,CAAC,KAA7B,EAAoC,QAAQ,IAAI,MAAM,CAAC,aAAvD,CAnBb;AAoBL,IAAA,YAAY,EAAE,WAAW,CAAC,MAAM,CAAC,YAAR,CApBpB;AAqBL,IAAA,OAAO,EAAE,WAAW,CAAC,qBAAD,EAAwB,MAAM,CAAC,OAA/B,CArBf;AAsBL,IAAA,uBAAuB,EAAE,WAAW,CAAC,qCAAD,EAAwC,MAAM,CAAC,uBAA/C,CAtB/B;AAuBL,IAAA,gBAAgB,EAAE,WAAW,CAAC,8BAAD,EAAiC,MAAM,CAAC,gBAAxC,CAvBxB;AAwBL,IAAA,MAAM,EAAE,WAAW,CAAC,oBAAD,EAAuB,MAAM,CAAC,MAA9B,CAxBd;AAyBL,IAAA,OAAO,EAAE,WAAW,CAAC,qBAAD,EAAwB,MAAM,CAAC,OAA/B,CAzBf;AA0BL,IAAA,gBAAgB,EAAE,WAAW,CAAC,MAAM,CAAC,gBAAR;AA1BxB,GAAP;AA4BD,CAvCyC,CAArC;AA0CP,OAAO,IAAM,2BAA2B,GAAG,eAAe,CACxD,UAAC,MAAD,EAAuC;AACrC,SAAO;AACL,IAAA,UAAU,EAAE,WAAW,CAAC,wBAAD,EAA2B,MAAM,CAAC,UAAlC,CADlB;AAEL,IAAA,IAAI,EAAE,WAAW,CAAC,oBAAD,EAAuB,MAAM,CAAC,IAA9B,EAAoC;AACnD,MAAA,SAAS,EAAE;AACT,kBAAU,MAAM,CAAC,WADR;AAET,kBAAU,MAAM,CAAC,WAFR;AAGT,mBAAW,MAAM,CAAC;AAHT;AADwC,KAApC,CAFZ;AASL,IAAA,iBAAiB,EAAE,WAAW,CAAC,MAAM,CAAC,iBAAR;AATzB,GAAP;AAWD,CAbuD,CAAnD","sourcesContent":["import {\r\n  IComboBoxStyles,\r\n  IComboBoxOptionStyles,\r\n  IComboBoxClassNames,\r\n  IComboBoxOptionClassNames,\r\n} from './ComboBox.types';\r\nimport { memoizeFunction } from '../../Utilities';\r\nimport { mergeStyles } from '../../Styling';\r\n\r\nexport const getClassNames = memoizeFunction(\r\n  (\r\n    styles: Partial<IComboBoxStyles>,\r\n    className: string,\r\n    isOpen: boolean,\r\n    disabled: boolean,\r\n    required: boolean,\r\n    focused: boolean,\r\n    allowFreeForm: boolean,\r\n    hasErrorMessage: boolean,\r\n  ): IComboBoxClassNames => {\r\n    return {\r\n      container: mergeStyles('ms-ComboBox-container', className, styles.container),\r\n      label: mergeStyles(styles.label, disabled && styles.labelDisabled),\r\n      root: mergeStyles(\r\n        'ms-ComboBox',\r\n        hasErrorMessage ? styles.rootError : isOpen && 'is-open',\r\n        required && 'is-required',\r\n        styles.root,\r\n        !allowFreeForm && styles.rootDisallowFreeForm,\r\n        hasErrorMessage && !focused ? styles.rootError : !disabled && focused && styles.rootFocused,\r\n        !disabled && {\r\n          selectors: {\r\n            ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,\r\n            ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,\r\n            ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused,\r\n          },\r\n        },\r\n        disabled && ['is-disabled', styles.rootDisabled],\r\n      ),\r\n      input: mergeStyles('ms-ComboBox-Input', styles.input, disabled && styles.inputDisabled),\r\n      errorMessage: mergeStyles(styles.errorMessage),\r\n      callout: mergeStyles('ms-ComboBox-callout', styles.callout),\r\n      optionsContainerWrapper: mergeStyles('ms-ComboBox-optionsContainerWrapper', styles.optionsContainerWrapper),\r\n      optionsContainer: mergeStyles('ms-ComboBox-optionsContainer', styles.optionsContainer),\r\n      header: mergeStyles('ms-ComboBox-header', styles.header),\r\n      divider: mergeStyles('ms-ComboBox-divider', styles.divider),\r\n      screenReaderText: mergeStyles(styles.screenReaderText),\r\n    };\r\n  },\r\n);\r\n\r\nexport const getComboBoxOptionClassNames = memoizeFunction(\r\n  (styles: Partial<IComboBoxOptionStyles>): IComboBoxOptionClassNames => {\r\n    return {\r\n      optionText: mergeStyles('ms-ComboBox-optionText', styles.optionText),\r\n      root: mergeStyles('ms-ComboBox-option', styles.root, {\r\n        selectors: {\r\n          ':hover': styles.rootHovered,\r\n          ':focus': styles.rootFocused,\r\n          ':active': styles.rootPressed,\r\n        },\r\n      }),\r\n      optionTextWrapper: mergeStyles(styles.optionTextWrapper),\r\n    };\r\n  },\r\n);\r\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}