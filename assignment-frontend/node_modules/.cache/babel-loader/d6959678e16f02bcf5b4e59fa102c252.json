{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport { classNamesFunction, getNativeProps, inputProperties, css, initializeComponentRef } from '../../../Utilities';\nimport { composeRenderFunction } from '@uifabric/utilities';\nvar getClassNames = classNamesFunction();\nvar LARGE_IMAGE_SIZE = 71;\n/**\n * {@docCategory ChoiceGroup}\n */\n\nvar ChoiceGroupOptionBase =\n/** @class */\nfunction (_super) {\n  __extends(ChoiceGroupOptionBase, _super);\n\n  function ChoiceGroupOptionBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onChange = function (evt) {\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(evt, _this.props);\n      }\n    };\n\n    _this._onBlur = function (evt) {\n      var onBlur = _this.props.onBlur;\n\n      if (onBlur) {\n        onBlur(evt, _this.props);\n      }\n    };\n\n    _this._onFocus = function (evt) {\n      var onFocus = _this.props.onFocus;\n\n      if (onFocus) {\n        onFocus(evt, _this.props);\n      }\n    };\n\n    _this._onRenderField = function (props) {\n      var id = props.id,\n          imageSrc = props.imageSrc,\n          _a = props.imageAlt,\n          imageAlt = _a === void 0 ? '' : _a,\n          selectedImageSrc = props.selectedImageSrc,\n          iconProps = props.iconProps;\n      var imageSize = props.imageSize ? props.imageSize : {\n        width: 32,\n        height: 32\n      };\n      var onRenderLabel = props.onRenderLabel ? composeRenderFunction(props.onRenderLabel, _this._onRenderLabel) : _this._onRenderLabel;\n      var label = onRenderLabel(props);\n      return React.createElement(\"label\", {\n        htmlFor: id,\n        className: _this._classNames.field\n      }, imageSrc && React.createElement(\"div\", {\n        className: _this._classNames.innerField\n      }, React.createElement(\"div\", {\n        className: _this._classNames.imageWrapper\n      }, React.createElement(Image, {\n        src: imageSrc,\n        alt: imageAlt,\n        width: imageSize.width,\n        height: imageSize.height\n      })), React.createElement(\"div\", {\n        className: _this._classNames.selectedImageWrapper\n      }, React.createElement(Image, {\n        src: selectedImageSrc,\n        alt: imageAlt,\n        width: imageSize.width,\n        height: imageSize.height\n      }))), iconProps && React.createElement(\"div\", {\n        className: _this._classNames.innerField\n      }, React.createElement(\"div\", {\n        className: _this._classNames.iconWrapper\n      }, React.createElement(Icon, __assign({}, iconProps)))), imageSrc || iconProps ? React.createElement(\"div\", {\n        className: _this._classNames.labelWrapper\n      }, label) : label);\n    };\n\n    _this._onRenderLabel = function (props) {\n      return React.createElement(\"span\", {\n        id: props.labelId,\n        className: \"ms-ChoiceFieldLabel\"\n      }, props.text);\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  ChoiceGroupOptionBase.prototype.render = function () {\n    var _a = this.props,\n        ariaLabel = _a.ariaLabel,\n        focused = _a.focused,\n        required = _a.required,\n        theme = _a.theme,\n        iconProps = _a.iconProps,\n        imageSrc = _a.imageSrc,\n        imageSize = _a.imageSize,\n        disabled = _a.disabled,\n        // eslint-disable-next-line deprecation/deprecation\n    checked = _a.checked,\n        id = _a.id,\n        styles = _a.styles,\n        name = _a.name,\n        _b = _a.onRenderField,\n        onRenderField = _b === void 0 ? this._onRenderField : _b,\n        rest = __rest(_a, [\"ariaLabel\", \"focused\", \"required\", \"theme\", \"iconProps\", \"imageSrc\", \"imageSize\", \"disabled\", \"checked\", \"id\", \"styles\", \"name\", \"onRenderField\"]);\n\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      hasIcon: !!iconProps,\n      hasImage: !!imageSrc,\n      checked: checked,\n      disabled: disabled,\n      imageIsLarge: !!imageSrc && (imageSize.width > LARGE_IMAGE_SIZE || imageSize.height > LARGE_IMAGE_SIZE),\n      imageSize: imageSize,\n      focused: focused\n    });\n\n    var _c = getNativeProps(rest, inputProperties),\n        className = _c.className,\n        nativeProps = __rest(_c, [\"className\"]);\n\n    return React.createElement(\"div\", {\n      className: this._classNames.root\n    }, React.createElement(\"div\", {\n      className: this._classNames.choiceFieldWrapper\n    }, React.createElement(\"input\", __assign({\n      \"aria-label\": ariaLabel,\n      id: id,\n      className: css(this._classNames.input, className),\n      type: \"radio\",\n      name: name,\n      disabled: disabled,\n      checked: checked,\n      required: required\n    }, nativeProps, {\n      onChange: this._onChange,\n      onFocus: this._onFocus,\n      onBlur: this._onBlur\n    })), onRenderField(this.props, this._onRenderField)));\n  };\n\n  ChoiceGroupOptionBase.defaultProps = {\n    // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n    imageSize: {\n      width: 32,\n      height: 32\n    }\n  };\n  return ChoiceGroupOptionBase;\n}(React.Component);\n\nexport { ChoiceGroupOptionBase };","map":{"version":3,"sources":["components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport {\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles,\n} from './ChoiceGroupOption.types';\nimport { classNamesFunction, getNativeProps, inputProperties, css, initializeComponentRef } from '../../../Utilities';\nimport { IProcessedStyleSet } from '../../../Styling';\nimport { composeRenderFunction } from '@uifabric/utilities';\n\nconst getClassNames = classNamesFunction<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>();\n\nconst LARGE_IMAGE_SIZE = 71;\n\n/**\n * {@docCategory ChoiceGroup}\n */\nexport class ChoiceGroupOptionBase extends React.Component<IChoiceGroupOptionProps, {}> {\n  public static defaultProps: Partial<IChoiceGroupOptionProps> = {\n    // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n    imageSize: { width: 32, height: 32 },\n  };\n\n  private _classNames: IProcessedStyleSet<IChoiceGroupOptionStyles>;\n\n  constructor(props: IChoiceGroupOptionProps) {\n    super(props);\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaLabel,\n      focused,\n      required,\n      theme,\n      iconProps,\n      imageSrc,\n      imageSize,\n      disabled,\n      // eslint-disable-next-line deprecation/deprecation\n      checked,\n      id,\n      styles,\n      name,\n      onRenderField = this._onRenderField,\n      ...rest\n    } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      hasIcon: !!iconProps,\n      hasImage: !!imageSrc,\n      checked,\n      disabled,\n      imageIsLarge: !!imageSrc && (imageSize!.width > LARGE_IMAGE_SIZE || imageSize!.height > LARGE_IMAGE_SIZE),\n      imageSize,\n      focused,\n    });\n\n    const { className, ...nativeProps } = getNativeProps<{ className: string }>(rest, inputProperties);\n\n    return (\n      <div className={this._classNames.root}>\n        <div className={this._classNames.choiceFieldWrapper}>\n          <input\n            aria-label={ariaLabel}\n            id={id}\n            className={css(this._classNames.input, className)}\n            type=\"radio\"\n            name={name}\n            disabled={disabled}\n            checked={checked}\n            required={required}\n            {...nativeProps}\n            onChange={this._onChange}\n            onFocus={this._onFocus}\n            onBlur={this._onBlur}\n          />\n          {onRenderField(this.props, this._onRenderField)}\n        </div>\n      </div>\n    );\n  }\n\n  private _onChange = (evt: React.FormEvent<HTMLInputElement>): void => {\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(evt, this.props);\n    }\n  };\n\n  private _onBlur = (evt: React.FocusEvent<HTMLElement>) => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(evt, this.props);\n    }\n  };\n\n  private _onFocus = (evt: React.FocusEvent<HTMLElement>) => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(evt, this.props);\n    }\n  };\n\n  private _onRenderField = (props: IChoiceGroupOptionProps): JSX.Element => {\n    const { id, imageSrc, imageAlt = '', selectedImageSrc, iconProps } = props;\n\n    const imageSize = props.imageSize ? props.imageSize : { width: 32, height: 32 };\n\n    const onRenderLabel = props.onRenderLabel\n      ? composeRenderFunction(props.onRenderLabel, this._onRenderLabel)\n      : this._onRenderLabel;\n\n    const label = onRenderLabel(props);\n\n    return (\n      <label htmlFor={id} className={this._classNames.field}>\n        {imageSrc && (\n          <div className={this._classNames.innerField}>\n            <div className={this._classNames.imageWrapper}>\n              <Image src={imageSrc} alt={imageAlt} width={imageSize.width} height={imageSize.height} />\n            </div>\n            <div className={this._classNames.selectedImageWrapper}>\n              <Image src={selectedImageSrc} alt={imageAlt} width={imageSize.width} height={imageSize.height} />\n            </div>\n          </div>\n        )}\n        {iconProps && (\n          <div className={this._classNames.innerField}>\n            <div className={this._classNames.iconWrapper}>\n              <Icon {...iconProps} />\n            </div>\n          </div>\n        )}\n        {imageSrc || iconProps ? <div className={this._classNames.labelWrapper}>{label}</div> : label}\n      </label>\n    );\n  };\n\n  private _onRenderLabel = (props: IChoiceGroupOptionProps): JSX.Element => {\n    return (\n      <span id={props.labelId} className=\"ms-ChoiceFieldLabel\">\n        {props.text}\n      </span>\n    );\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}