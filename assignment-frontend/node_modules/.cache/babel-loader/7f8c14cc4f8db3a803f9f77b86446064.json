{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { initializeComponentRef, EventGroup, Async, classNamesFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nvar MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nvar getClassNames = classNamesFunction();\nvar TRANSITION_DURATION_DRAG = 200; // ms\n\nvar TRANSITION_DURATION_DROP = 1500; // ms\n\nvar CLASSNAME_ADD_INTERVAL = 20; // ms\n\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\n\nvar DetailsColumnBase =\n/** @class */\nfunction (_super) {\n  __extends(DetailsColumnBase, _super);\n\n  function DetailsColumnBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._root = React.createRef();\n\n    _this._onRenderColumnHeaderTooltip = function (tooltipHostProps) {\n      return React.createElement(\"span\", {\n        className: tooltipHostProps.hostClassName\n      }, tooltipHostProps.children);\n    };\n\n    _this._onColumnClick = function (ev) {\n      var _a = _this.props,\n          onColumnClick = _a.onColumnClick,\n          column = _a.column;\n\n      if (column.columnActionsMode === ColumnActionsMode.disabled) {\n        return;\n      }\n\n      if (column.onColumnClick) {\n        column.onColumnClick(ev, column);\n      }\n\n      if (onColumnClick) {\n        onColumnClick(ev, column);\n      }\n    };\n\n    _this._onDragStart = function (item, itemIndex, selectedItems, event) {\n      var classNames = _this._classNames;\n\n      if (itemIndex) {\n        _this._updateHeaderDragInfo(itemIndex);\n\n        _this._root.current.classList.add(classNames.borderWhileDragging);\n\n        _this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderWhileDragging);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n    };\n\n    _this._onDragEnd = function (item, event) {\n      var classNames = _this._classNames;\n\n      if (event) {\n        _this._updateHeaderDragInfo(-1, event);\n      }\n\n      _this._root.current.classList.remove(classNames.borderWhileDragging);\n\n      _this._root.current.classList.remove(classNames.noBorderWhileDragging);\n    };\n\n    _this._updateHeaderDragInfo = function (itemIndex, event) {\n      /* eslint-disable deprecation/deprecation */\n      if (_this.props.setDraggedItemIndex) {\n        _this.props.setDraggedItemIndex(itemIndex);\n      }\n      /* eslint-enable deprecation/deprecation */\n\n\n      if (_this.props.updateDragInfo) {\n        _this.props.updateDragInfo({\n          itemIndex: itemIndex\n        }, event);\n      }\n    };\n\n    _this._onColumnContextMenu = function (ev) {\n      var _a = _this.props,\n          onColumnContextMenu = _a.onColumnContextMenu,\n          column = _a.column;\n\n      if (column.onColumnContextMenu) {\n        column.onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n\n      if (onColumnContextMenu) {\n        onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n    };\n\n    _this._onRootMouseDown = function (ev) {\n      var isDraggable = _this.props.isDraggable; // Ignore anything except the primary button.\n\n      if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n        ev.stopPropagation();\n      }\n    };\n\n    initializeComponentRef(_this);\n    _this._async = new Async(_this);\n    _this._events = new EventGroup(_this);\n    return _this;\n  }\n\n  DetailsColumnBase.prototype.render = function () {\n    var _a = this.props,\n        column = _a.column,\n        columnIndex = _a.columnIndex,\n        parentId = _a.parentId,\n        isDraggable = _a.isDraggable,\n        styles = _a.styles,\n        theme = _a.theme,\n        _b = _a.cellStyleProps,\n        cellStyleProps = _b === void 0 ? DEFAULT_CELL_STYLE_PROPS : _b,\n        _c = _a.useFastIcons,\n        useFastIcons = _c === void 0 ? true : _c;\n    var _d = this.props.onRenderColumnHeaderTooltip,\n        onRenderColumnHeaderTooltip = _d === void 0 ? this._onRenderColumnHeaderTooltip : _d;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps: cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP\n    });\n    var classNames = this._classNames;\n    var IconComponent = useFastIcons ? FontIcon : Icon;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      key: column.key,\n      ref: this._root,\n      role: 'columnheader',\n      \"aria-sort\": column.isSorted ? column.isSortedDescending ? 'descending' : 'ascending' : 'none',\n      \"aria-colindex\": columnIndex,\n      className: classNames.root,\n      \"data-is-draggable\": isDraggable,\n      draggable: isDraggable,\n      style: {\n        width: column.calculatedWidth + cellStyleProps.cellLeftPadding + cellStyleProps.cellRightPadding + (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0)\n      },\n      \"data-automationid\": 'ColumnsHeaderColumn',\n      \"data-item-key\": column.key\n    }, isDraggable && React.createElement(IconComponent, {\n      iconName: \"GripperBarVertical\",\n      className: classNames.gripperBarVerticalStyle\n    }), onRenderColumnHeaderTooltip({\n      hostClassName: classNames.cellTooltip,\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      setAriaDescribedBy: false,\n      column: column,\n      content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n      children: React.createElement(\"span\", {\n        id: parentId + \"-\" + column.key,\n        \"aria-label\": column.isIconOnly ? column.name : undefined,\n        \"aria-labelledby\": column.isIconOnly ? undefined : parentId + \"-\" + column.key + \"-name\",\n        className: classNames.cellTitle,\n        \"data-is-focusable\": column.columnActionsMode !== ColumnActionsMode.disabled,\n        role: column.columnActionsMode !== ColumnActionsMode.disabled && (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined) ? 'button' : undefined,\n        \"aria-describedby\": !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleLabel() ? parentId + \"-\" + column.key + \"-tooltip\" : undefined,\n        onContextMenu: this._onColumnContextMenu,\n        onClick: this._onColumnClick,\n        \"aria-haspopup\": column.columnActionsMode === ColumnActionsMode.hasDropdown,\n        \"aria-expanded\": column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n      }, React.createElement(\"span\", {\n        id: parentId + \"-\" + column.key + \"-name\",\n        className: classNames.cellName\n      }, (column.iconName || column.iconClassName) && React.createElement(IconComponent, {\n        className: classNames.iconClassName,\n        iconName: column.iconName\n      }), column.isIconOnly ? React.createElement(\"span\", {\n        className: classNames.accessibleLabel\n      }, column.name) : column.name), column.isFiltered && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"Filter\"\n      }), column.isSorted && React.createElement(IconComponent, {\n        className: classNames.sortIcon,\n        iconName: column.isSortedDescending ? 'SortDown' : 'SortUp'\n      }), column.isGrouped && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"GroupedDescending\"\n      }), column.columnActionsMode === ColumnActionsMode.hasDropdown && !column.isIconOnly && React.createElement(IconComponent, {\n        \"aria-hidden\": true,\n        className: classNames.filterChevron,\n        iconName: \"ChevronDown\"\n      }))\n    }, this._onRenderColumnHeaderTooltip)), !this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleLabel() : null);\n  };\n\n  DetailsColumnBase.prototype.componentDidMount = function () {\n    var _this = this;\n\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    var classNames = this._classNames;\n\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n\n        this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n\n      this._async.setTimeout(function () {\n        if (_this._root.current) {\n          _this._root.current.classList.remove(classNames.borderAfterDropping);\n\n          _this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  };\n\n  DetailsColumnBase.prototype.componentWillUnmount = function () {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n\n      delete this._dragDropSubscription;\n    }\n\n    this._async.dispose();\n\n    this._events.dispose();\n  };\n\n  DetailsColumnBase.prototype.componentDidUpdate = function () {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n\n      this._events.off(this._root.current, 'mousedown');\n\n      delete this._dragDropSubscription;\n    }\n  };\n\n  DetailsColumnBase.prototype._getColumnDragDropOptions = function () {\n    var _this = this;\n\n    var columnIndex = this.props.columnIndex;\n    var options = {\n      selectionIndex: columnIndex,\n      context: {\n        data: columnIndex,\n        index: columnIndex\n      },\n      canDrag: function () {\n        return _this.props.isDraggable;\n      },\n      canDrop: function () {\n        return false;\n      },\n      onDragStart: this._onDragStart,\n      updateDropState: function () {\n        return undefined;\n      },\n      onDrop: function () {\n        return undefined;\n      },\n      onDragEnd: this._onDragEnd\n    };\n    return options;\n  };\n\n  DetailsColumnBase.prototype._hasAccessibleLabel = function () {\n    var column = this.props.column;\n    return !!(column.ariaLabel || column.filterAriaLabel || column.sortAscendingAriaLabel || column.sortDescendingAriaLabel || column.groupAriaLabel);\n  };\n\n  DetailsColumnBase.prototype._renderAccessibleLabel = function () {\n    var _a = this.props,\n        column = _a.column,\n        parentId = _a.parentId;\n    var classNames = this._classNames;\n    return this._hasAccessibleLabel() && !this.props.onRenderColumnHeaderTooltip ? React.createElement(\"label\", {\n      key: column.key + \"_label\",\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      className: classNames.accessibleLabel\n    }, column.ariaLabel, column.isFiltered && column.filterAriaLabel || null, column.isSorted && (column.isSortedDescending ? column.sortDescendingAriaLabel : column.sortAscendingAriaLabel) || null, column.isGrouped && column.groupAriaLabel || null) : null;\n  };\n\n  DetailsColumnBase.prototype._addDragDropHandling = function () {\n    this._dragDropSubscription = this.props.dragDropHelper.subscribe(this._root.current, this._events, this._getColumnDragDropOptions()); // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  };\n\n  return DetailsColumnBase;\n}(React.Component);\n\nexport { DetailsColumnBase };","map":{"version":3,"sources":["components/DetailsList/DetailsColumn.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { initializeComponentRef, EventGroup, Async, IDisposable, classNamesFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { IDragDropOptions } from './../../utilities/dragdrop/interfaces';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport {\n  IDetailsColumnStyleProps,\n  IDetailsColumnProps,\n  IDetailsColumnStyles,\n  IDetailsColumnRenderTooltipProps,\n} from './DetailsColumn.types';\n\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nconst getClassNames = classNamesFunction<IDetailsColumnStyleProps, IDetailsColumnStyles>();\nconst TRANSITION_DURATION_DRAG = 200; // ms\nconst TRANSITION_DURATION_DROP = 1500; // ms\nconst CLASSNAME_ADD_INTERVAL = 20; // ms\n\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\nexport class DetailsColumnBase extends React.Component<IDetailsColumnProps> {\n  private _async: Async;\n  private _events: EventGroup;\n  private _root = React.createRef<HTMLDivElement>();\n  private _dragDropSubscription: IDisposable;\n  private _classNames: IProcessedStyleSet<IDetailsColumnStyles>;\n\n  constructor(props: IDetailsColumnProps) {\n    super(props);\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      column,\n      columnIndex,\n      parentId,\n      isDraggable,\n      styles,\n      theme,\n      cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n      useFastIcons = true,\n    } = this.props;\n    const { onRenderColumnHeaderTooltip = this._onRenderColumnHeaderTooltip } = this.props;\n\n    this._classNames = getClassNames(styles, {\n      theme: theme!,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP,\n    });\n\n    const classNames = this._classNames;\n    const IconComponent = useFastIcons ? FontIcon : Icon;\n\n    return (\n      <>\n        <div\n          key={column.key}\n          ref={this._root}\n          role={'columnheader'}\n          aria-sort={column.isSorted ? (column.isSortedDescending ? 'descending' : 'ascending') : 'none'}\n          aria-colindex={columnIndex}\n          className={classNames.root}\n          data-is-draggable={isDraggable}\n          draggable={isDraggable}\n          style={{\n            width:\n              column.calculatedWidth! +\n              cellStyleProps.cellLeftPadding +\n              cellStyleProps.cellRightPadding +\n              (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0),\n          }}\n          data-automationid={'ColumnsHeaderColumn'}\n          data-item-key={column.key}\n        >\n          {isDraggable && (\n            <IconComponent iconName=\"GripperBarVertical\" className={classNames.gripperBarVerticalStyle} />\n          )}\n          {onRenderColumnHeaderTooltip(\n            {\n              hostClassName: classNames.cellTooltip,\n              id: `${parentId}-${column.key}-tooltip`,\n              setAriaDescribedBy: false,\n              column,\n              content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n              children: (\n                <span\n                  id={`${parentId}-${column.key}`}\n                  aria-label={column.isIconOnly ? column.name : undefined}\n                  aria-labelledby={column.isIconOnly ? undefined : `${parentId}-${column.key}-name`}\n                  className={classNames.cellTitle}\n                  data-is-focusable={column.columnActionsMode !== ColumnActionsMode.disabled}\n                  role={\n                    column.columnActionsMode !== ColumnActionsMode.disabled &&\n                    (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined)\n                      ? 'button'\n                      : undefined\n                  }\n                  aria-describedby={\n                    !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleLabel()\n                      ? `${parentId}-${column.key}-tooltip`\n                      : undefined\n                  }\n                  onContextMenu={this._onColumnContextMenu}\n                  onClick={this._onColumnClick}\n                  aria-haspopup={column.columnActionsMode === ColumnActionsMode.hasDropdown}\n                  aria-expanded={\n                    column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n                  }\n                >\n                  <span id={`${parentId}-${column.key}-name`} className={classNames.cellName}>\n                    {(column.iconName || column.iconClassName) && (\n                      <IconComponent className={classNames.iconClassName} iconName={column.iconName} />\n                    )}\n\n                    {column.isIconOnly ? (\n                      <span className={classNames.accessibleLabel}>{column.name}</span>\n                    ) : (\n                      column.name\n                    )}\n                  </span>\n\n                  {column.isFiltered && <IconComponent className={classNames.nearIcon} iconName=\"Filter\" />}\n\n                  {column.isSorted && (\n                    <IconComponent\n                      className={classNames.sortIcon}\n                      iconName={column.isSortedDescending ? 'SortDown' : 'SortUp'}\n                    />\n                  )}\n\n                  {column.isGrouped && <IconComponent className={classNames.nearIcon} iconName=\"GroupedDescending\" />}\n\n                  {column.columnActionsMode === ColumnActionsMode.hasDropdown && !column.isIconOnly && (\n                    <IconComponent aria-hidden={true} className={classNames.filterChevron} iconName=\"ChevronDown\" />\n                  )}\n                </span>\n              ),\n            },\n            this._onRenderColumnHeaderTooltip,\n          )}\n        </div>\n        {!this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleLabel() : null}\n      </>\n    );\n  }\n\n  public componentDidMount(): void {\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    const classNames = this._classNames;\n\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n\n        this._async.setTimeout(() => {\n          if (this._root.current) {\n            this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n\n      this._async.setTimeout(() => {\n        if (this._root.current) {\n          this._root.current.classList.remove(classNames.borderAfterDropping);\n          this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n      delete this._dragDropSubscription;\n    }\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public componentDidUpdate(): void {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n      this._events.off(this._root.current, 'mousedown');\n      delete this._dragDropSubscription;\n    }\n  }\n\n  private _onRenderColumnHeaderTooltip = (tooltipHostProps: IDetailsColumnRenderTooltipProps): JSX.Element => {\n    return <span className={tooltipHostProps.hostClassName}>{tooltipHostProps.children}</span>;\n  };\n\n  private _onColumnClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onColumnClick, column } = this.props;\n\n    if (column.columnActionsMode === ColumnActionsMode.disabled) {\n      return;\n    }\n\n    if (column.onColumnClick) {\n      column.onColumnClick(ev, column);\n    }\n\n    if (onColumnClick) {\n      onColumnClick(ev, column);\n    }\n  };\n\n  private _getColumnDragDropOptions(): IDragDropOptions {\n    const { columnIndex } = this.props;\n    const options = {\n      selectionIndex: columnIndex,\n      context: { data: columnIndex, index: columnIndex },\n      canDrag: () => this.props.isDraggable!,\n      canDrop: () => false,\n      onDragStart: this._onDragStart,\n      updateDropState: () => undefined,\n      onDrop: () => undefined,\n      onDragEnd: this._onDragEnd,\n    };\n    return options;\n  }\n\n  private _hasAccessibleLabel(): boolean {\n    const { column } = this.props;\n\n    return !!(\n      column.ariaLabel ||\n      column.filterAriaLabel ||\n      column.sortAscendingAriaLabel ||\n      column.sortDescendingAriaLabel ||\n      column.groupAriaLabel\n    );\n  }\n\n  private _renderAccessibleLabel(): JSX.Element | null {\n    const { column, parentId } = this.props;\n    const classNames = this._classNames;\n\n    return this._hasAccessibleLabel() && !this.props.onRenderColumnHeaderTooltip ? (\n      <label\n        key={`${column.key}_label`}\n        id={`${parentId}-${column.key}-tooltip`}\n        className={classNames.accessibleLabel}\n      >\n        {column.ariaLabel}\n        {(column.isFiltered && column.filterAriaLabel) || null}\n        {(column.isSorted &&\n          (column.isSortedDescending ? column.sortDescendingAriaLabel : column.sortAscendingAriaLabel)) ||\n          null}\n        {(column.isGrouped && column.groupAriaLabel) || null}\n      </label>\n    ) : null;\n  }\n\n  private _onDragStart = (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent): void => {\n    const classNames = this._classNames;\n    if (itemIndex) {\n      this._updateHeaderDragInfo(itemIndex);\n      this._root.current!.classList.add(classNames.borderWhileDragging);\n      this._async.setTimeout(() => {\n        if (this._root.current) {\n          this._root.current.classList.add(classNames.noBorderWhileDragging);\n        }\n      }, CLASSNAME_ADD_INTERVAL);\n    }\n  };\n\n  private _onDragEnd = (item?: any, event?: MouseEvent): void => {\n    const classNames = this._classNames;\n    if (event) {\n      this._updateHeaderDragInfo(-1, event);\n    }\n    this._root.current!.classList.remove(classNames.borderWhileDragging);\n    this._root.current!.classList.remove(classNames.noBorderWhileDragging);\n  };\n\n  private _updateHeaderDragInfo = (itemIndex: number, event?: MouseEvent) => {\n    /* eslint-disable deprecation/deprecation */\n    if (this.props.setDraggedItemIndex) {\n      this.props.setDraggedItemIndex(itemIndex);\n    }\n    /* eslint-enable deprecation/deprecation */\n    if (this.props.updateDragInfo) {\n      this.props.updateDragInfo({ itemIndex }, event);\n    }\n  };\n\n  private _onColumnContextMenu = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onColumnContextMenu, column } = this.props;\n    if (column.onColumnContextMenu) {\n      column.onColumnContextMenu(column, ev);\n      ev.preventDefault();\n    }\n    if (onColumnContextMenu) {\n      onColumnContextMenu(column, ev);\n      ev.preventDefault();\n    }\n  };\n\n  private _onRootMouseDown = (ev: MouseEvent): void => {\n    const { isDraggable } = this.props;\n    // Ignore anything except the primary button.\n    if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n      ev.stopPropagation();\n    }\n  };\n\n  private _addDragDropHandling() {\n    this._dragDropSubscription = this.props.dragDropHelper!.subscribe(\n      this._root.current!,\n      this._events,\n      this._getColumnDragDropOptions(),\n    );\n\n    // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}