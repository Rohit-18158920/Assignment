{"ast":null,"code":"import { extendComponent } from './extendComponent';\n/**\n * Helper to manage componentRef resolution. Internally appends logic to\n * lifetime methods to resolve componentRef to the passed in object.\n *\n * Usage: call initializeComponentRef(this) in the constructor,\n */\n\nexport function initializeComponentRef(obj) {\n  extendComponent(obj, {\n    componentDidMount: _onMount,\n    componentDidUpdate: _onUpdate,\n    componentWillUnmount: _onUnmount\n  });\n}\n\nfunction _onMount() {\n  _setComponentRef(this.props.componentRef, this);\n}\n\nfunction _onUpdate(prevProps) {\n  if (prevProps.componentRef !== this.props.componentRef) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _setComponentRef(prevProps.componentRef, null);\n\n    _setComponentRef(this.props.componentRef, this);\n  }\n}\n\nfunction _onUnmount() {\n  _setComponentRef(this.props.componentRef, null);\n}\n\nfunction _setComponentRef(componentRef, value) {\n  if (componentRef) {\n    if (typeof componentRef === 'object') {\n      componentRef.current = value;\n    } else if (typeof componentRef === 'function') {\n      componentRef(value);\n    }\n  }\n}","map":{"version":3,"sources":["initializeComponentRef.ts"],"names":[],"mappings":"AAEA,SAAS,eAAT,QAAgC,mBAAhC;AAEA;;;;;AAKG;;AACH,OAAM,SAAU,sBAAV,CAAoE,GAApE,EAAwG;AAC5G,EAAA,eAAe,CAAC,GAAD,EAAM;AACnB,IAAA,iBAAiB,EAAE,QADA;AAEnB,IAAA,kBAAkB,EAAE,SAFD;AAGnB,IAAA,oBAAoB,EAAE;AAHH,GAAN,CAAf;AAKD;;AAED,SAAS,QAAT,GAAiB;AACf,EAAA,gBAAgB,CAAC,KAAK,KAAL,CAAW,YAAZ,EAA0B,IAA1B,CAAhB;AACD;;AAED,SAAS,SAAT,CAAmB,SAAnB,EAAwC;AACtC,MAAI,SAAS,CAAC,YAAV,KAA2B,KAAK,KAAL,CAAW,YAA1C,EAAwD;AACtD;AACA,IAAA,gBAAgB,CAAE,SAAiB,CAAC,YAApB,EAAkC,IAAlC,CAAhB;;AACA,IAAA,gBAAgB,CAAC,KAAK,KAAL,CAAW,YAAZ,EAA0B,IAA1B,CAAhB;AACD;AACF;;AAED,SAAS,UAAT,GAAmB;AACjB,EAAA,gBAAgB,CAAC,KAAK,KAAL,CAAW,YAAZ,EAA0B,IAA1B,CAAhB;AACD;;AAED,SAAS,gBAAT,CAAsC,YAAtC,EAAiF,KAAjF,EAAyG;AACvG,MAAI,YAAJ,EAAkB;AAChB,QAAI,OAAO,YAAP,KAAwB,QAA5B,EAAsC;AACnC,MAAA,YAA+C,CAAC,OAAhD,GAA0D,KAA1D;AACF,KAFD,MAEO,IAAI,OAAO,YAAP,KAAwB,UAA5B,EAAwC;AAC5C,MAAA,YAAyB,CAAC,KAAD,CAAzB;AACF;AACF;AACF","sourcesContent":["import * as React from 'react';\nimport { IBaseProps } from './BaseComponent.types';\nimport { extendComponent } from './extendComponent';\n\n/**\n * Helper to manage componentRef resolution. Internally appends logic to\n * lifetime methods to resolve componentRef to the passed in object.\n *\n * Usage: call initializeComponentRef(this) in the constructor,\n */\nexport function initializeComponentRef<TProps extends IBaseProps, TState>(obj: React.Component<TProps, TState>): void {\n  extendComponent(obj, {\n    componentDidMount: _onMount,\n    componentDidUpdate: _onUpdate,\n    componentWillUnmount: _onUnmount,\n  });\n}\n\nfunction _onMount(): void {\n  _setComponentRef(this.props.componentRef, this);\n}\n\nfunction _onUpdate(prevProps: IBaseProps): void {\n  if (prevProps.componentRef !== this.props.componentRef) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _setComponentRef((prevProps as any).componentRef, null);\n    _setComponentRef(this.props.componentRef, this);\n  }\n}\n\nfunction _onUnmount(): void {\n  _setComponentRef(this.props.componentRef, null);\n}\n\nfunction _setComponentRef<TInterface>(componentRef: React.RefObject<TInterface>, value: TInterface | null): void {\n  if (componentRef) {\n    if (typeof componentRef === 'object') {\n      (componentRef as { current: TInterface | null }).current = value;\n    } else if (typeof componentRef === 'function') {\n      (componentRef as Function)(value);\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}