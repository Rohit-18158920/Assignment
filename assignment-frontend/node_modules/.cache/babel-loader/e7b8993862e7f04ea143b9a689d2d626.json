{"ast":null,"code":"var _jsxFileName = \"D:\\\\personalWork\\\\assignment-frontend\\\\src\\\\Login\\\\login.js\";\nimport React from 'react';\nimport './style.css';\nimport Config from '../config';\nimport LineLoader from '../components/LineLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction validate(username, password) {\n  return {\n    username: username.length === 0,\n    password: password.length === 0\n  };\n}\n\nclass LoginComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n\n      if (event.target.id === 'email') {\n        this.setState({\n          isDisabledusername: false\n        });\n      }\n\n      if (event.target.id === 'password') {\n        this.setState({\n          isDisabledpassword: false\n        });\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (!this.canBeSubmitted()) {\n        event.preventDefault();\n        return;\n      }\n\n      this.setState({\n        errorMsg: ''\n      });\n      this.validateData();\n    };\n\n    this.state = {\n      cardHidden: true,\n      email: \"\",\n      password: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n    document.body.style.backgroundColor = \"#0747a6\";\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      this.setState({\n        cardHidden: false,\n        email: \"\",\n        password: \"\",\n        isDisabledusername: false,\n        isDisabledpassword: false,\n        userName: false,\n        errorMsg: \"\",\n        loaded: true\n      });\n    }.bind(this), 700);\n  }\n\n  submituserRegistrationForm(e) {\n    e.preventDefault();\n    this.validateData();\n  }\n\n  canBeSubmitted() {\n    const errors = validate(this.state.email, this.state.password);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n    this.setState({\n      isDisabledusername: errors.username\n    });\n    this.setState({\n      isDisabledpassword: errors.password\n    });\n    return !isDisabled;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [!this.state.loaded ? /*#__PURE__*/_jsxDEV(LineLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Loan Data Viewer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group has-error\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"text\",\n            className: \"form-control\",\n            name: \"username\",\n            value: this.state.email,\n            onChange: this.handleChange,\n            placeholder: \"Username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange,\n            placeholder: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !this.state.loaded,\n            className: \"btn btn-primary btn-lg btn-block \",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), this.state.errorMsg !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"center\",\n          style: {\n            color: \"red\"\n          },\n          children: this.state.errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n  validateData() {\n    let api = {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      url: Config.loginUrl,\n      body: {\n        \"username\": this.state.email,\n        \"password\": this.state.password\n      }\n    }; // window.location.href = '/home';\n\n    this.setState({\n      loaded: false\n    });\n    this.request(api).then(res => {\n      if (res.status === 200 || res.status === 304) {\n        return res.json().then(res => {\n          let redirectToHomePage = '/home';\n          this.setState({\n            loaded: true\n          });\n          sessionStorage.setItem('homePage', redirectToHomePage);\n          sessionStorage.setItem('token', res.token);\n          sessionStorage.setItem('userId', res.username);\n          console.log('res::' + JSON.stringify(res));\n          window.location.href = redirectToHomePage;\n        });\n      } else if (res.status === 401) {\n        return res.json().then(res => {\n          console.log('reached here' + JSON.stringify(res));\n          this.setState({\n            loaded: true,\n            errorMsg: res.error\n          });\n        });\n      } else {\n        this.setState({\n          loaded: true,\n          errorMsg: 'Something went wrong'\n        });\n      }\n    });\n  }\n\n  async request(api, query) {\n    let result = await fetch(api.url, {\n      method: api.method,\n      headers: api.headers,\n      body: this.validateBody(api)\n    });\n    return result;\n  }\n\n  validateBody(api) {\n    if (api.method === 'GET' || api.method === 'PUT') {\n      return JSON.stringify();\n    }\n\n    return JSON.stringify(api.body);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["D:/personalWork/assignment-frontend/src/Login/login.js"],"names":["React","Config","LineLoader","validate","username","password","length","LoginComponent","Component","constructor","handleChange","event","setState","target","id","value","isDisabledusername","isDisabledpassword","handleSubmit","preventDefault","canBeSubmitted","errorMsg","validateData","state","cardHidden","email","bind","submituserRegistrationForm","document","body","style","backgroundColor","componentDidMount","setTimeout","userName","loaded","e","errors","isDisabled","Object","keys","some","x","render","color","api","headers","method","url","loginUrl","request","then","res","status","json","redirectToHomePage","sessionStorage","setItem","token","console","log","JSON","stringify","window","location","href","error","query","result","fetch","validateBody"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\nimport Config from '../config';\r\nimport LineLoader from '../components/LineLoader';\r\n\r\nfunction validate(username, password) {\r\n  return {\r\n    username: username.length === 0,\r\n    password: password.length === 0,\r\n  };\r\n}\r\n\r\nclass LoginComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cardHidden: true,\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\r\n    document.body.style.backgroundColor = \"#0747a6\";\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(\r\n      function () {\r\n        this.setState({\r\n          cardHidden: false,\r\n          email: \"\",\r\n          password: \"\",\r\n          isDisabledusername: false,\r\n          isDisabledpassword: false,\r\n          userName: false,\r\n          errorMsg: \"\",\r\n          loaded: true\r\n        });\r\n      }.bind(this),\r\n      700\r\n    );\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n    if (event.target.id === 'email') {\r\n      this.setState({ isDisabledusername: false });\r\n    }\r\n    if (event.target.id === 'password') {\r\n      this.setState({ isDisabledpassword: false });\r\n    }\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (!this.canBeSubmitted()) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    this.setState({\r\n      errorMsg: ''\r\n    })\r\n\r\n    this.validateData();\r\n\r\n  }\r\n  submituserRegistrationForm(e) {\r\n    e.preventDefault();\r\n    this.validateData();\r\n\r\n  }\r\n  canBeSubmitted() {\r\n    const errors = validate(this.state.email, this.state.password);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    this.setState({ isDisabledusername: errors.username });\r\n    this.setState({ isDisabledpassword: errors.password });\r\n    return !isDisabled;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-form\">\r\n        {!this.state.loaded ? (\r\n          <LineLoader />\r\n        ) : <></>}\r\n        <form onSubmit={this.handleSubmit}>\r\n          {/* <>\r\n            <img src=\"/apple-icon-57x57.png\" alt=\"kbz icon\" />\r\n          </> */}\r\n          <h2 className=\"text-center\">Loan Data Viewer</h2>\r\n          <div className=\"form-group has-error\">\r\n            <input id=\"email\" type=\"text\" className=\"form-control\" name=\"username\" value={this.state.email} onChange={this.handleChange} placeholder=\"Username\" required />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input id=\"password\" type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" required />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" disabled={!this.state.loaded} className=\"btn btn-primary btn-lg btn-block \">Sign in</button>\r\n          </div>\r\n          {\r\n            this.state.errorMsg !== '' ?\r\n              <div align=\"center\" style={{ color: \"red\" }}>\r\n                {this.state.errorMsg}\r\n              </div> : <></>\r\n          }\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  validateData() {\r\n    let api = {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      url: Config.loginUrl,\r\n      body: {\r\n        \"username\": this.state.email,\r\n        \"password\": this.state.password\r\n      }\r\n    }\r\n    // window.location.href = '/home';\r\n    this.setState({\r\n      loaded: false\r\n    })\r\n    this.request(api).then((res) => {\r\n      if (res.status === 200 || res.status === 304) {\r\n        return res.json().then((res) => {\r\n          let redirectToHomePage = '/home';\r\n          this.setState({\r\n            loaded: true\r\n          })\r\n          sessionStorage.setItem('homePage', redirectToHomePage);\r\n          sessionStorage.setItem('token', res.token);\r\n          sessionStorage.setItem('userId', res.username);\r\n          console.log('res::' + JSON.stringify(res));\r\n          window.location.href = redirectToHomePage;\r\n\r\n        })\r\n      } else if (res.status === 401) {\r\n\r\n        return res.json().then((res) => {\r\n          console.log('reached here' + JSON.stringify(res));\r\n          this.setState({\r\n            loaded: true,\r\n            errorMsg: res.error\r\n          })\r\n        })\r\n      } else {\r\n        this.setState({\r\n          loaded: true,\r\n          errorMsg: 'Something went wrong'\r\n        })\r\n      }\r\n    });\r\n  }\r\n  async request(api, query) {\r\n    let result = await fetch(api.url, {\r\n      method: api.method,\r\n      headers: api.headers,\r\n      body: this.validateBody(api)\r\n    });\r\n    return result\r\n  }\r\n  validateBody(api) {\r\n    if (api.method === 'GET' || api.method === 'PUT') {\r\n      return JSON.stringify()\r\n    }\r\n    return JSON.stringify(api.body);\r\n  }\r\n}\r\n\r\nexport default LoginComponent;  "]},"metadata":{},"sourceType":"module"}