{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nexport var CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e; // eslint-disable-next-line deprecation/deprecation\n\n\n  var _f = props.height,\n      height = _f === void 0 ? props.checkBoxHeight || '18px' : _f,\n      checked = props.checked,\n      className = props.className,\n      theme = props.theme;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var isRTL = getRTL(theme);\n  var classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n  var sharedCircleCheck = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    verticalAlign: 'middle'\n  };\n  return {\n    root: [classNames.root, fonts.medium, {\n      // lineHeight currently needs to be a string to output without 'px'\n      lineHeight: '1',\n      width: height,\n      height: height,\n      verticalAlign: 'top',\n      position: 'relative',\n      userSelect: 'none',\n      selectors: (_a = {\n        ':before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: '1px',\n          right: '1px',\n          bottom: '1px',\n          left: '1px',\n          borderRadius: '50%',\n          opacity: 1,\n          background: semanticColors.bodyBackground\n        }\n      }, _a[\".\" + classNames.checkHost + \":hover &, .\" + classNames.checkHost + \":focus &, &:hover, &:focus\"] = {\n        opacity: 1\n      }, _a)\n    }, checked && ['is-checked', {\n      selectors: {\n        ':before': {\n          background: palette.themePrimary,\n          opacity: 1,\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            background: 'Window'\n          }, _b)\n        }\n      }\n    }], className],\n    circle: [classNames.circle, sharedCircleCheck, {\n      color: palette.neutralSecondary,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _c)\n    }, checked && {\n      color: palette.white\n    }],\n    check: [classNames.check, sharedCircleCheck, {\n      opacity: 0,\n      color: palette.neutralSecondary,\n      fontSize: IconFontSizes.medium,\n      left: isRTL ? '-0.5px' : '.5px',\n      selectors: (_d = {\n        ':hover': {\n          opacity: 1\n        }\n      }, _d[HighContrastSelector] = __assign({}, getHighContrastNoAdjustStyle()), _d)\n    }, checked && {\n      opacity: 1,\n      color: palette.white,\n      fontWeight: 900,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none',\n        color: 'WindowText'\n      }, _e)\n    }],\n    checkHost: classNames.checkHost\n  };\n};","map":{"version":3,"sources":["components/Check/Check.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { ICheckStyleProps, ICheckStyles } from './Check.types';\nimport {\n  HighContrastSelector,\n  IStyle,\n  getGlobalClassNames,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { getRTL } from '../../Utilities';\n\nexport const CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost',\n};\n\nexport const getStyles = (props: ICheckStyleProps): ICheckStyles => {\n  // eslint-disable-next-line deprecation/deprecation\n  const { height = props.checkBoxHeight || '18px', checked, className, theme } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n  const isRTL = getRTL(theme);\n\n  const classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n\n  const sharedCircleCheck: IStyle = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    verticalAlign: 'middle',\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      {\n        // lineHeight currently needs to be a string to output without 'px'\n        lineHeight: '1',\n        width: height,\n        height: height,\n        verticalAlign: 'top',\n        position: 'relative',\n        userSelect: 'none',\n\n        selectors: {\n          ':before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '1px',\n            right: '1px',\n            bottom: '1px',\n            left: '1px',\n            borderRadius: '50%',\n            opacity: 1,\n            background: semanticColors.bodyBackground,\n          },\n\n          [`.${classNames.checkHost}:hover &, .${classNames.checkHost}:focus &, &:hover, &:focus`]: {\n            opacity: 1,\n          },\n        },\n      },\n\n      checked && [\n        'is-checked',\n        {\n          selectors: {\n            ':before': {\n              background: palette.themePrimary,\n              opacity: 1,\n              selectors: {\n                [HighContrastSelector]: {\n                  background: 'Window',\n                },\n              },\n            },\n          },\n        },\n      ],\n      className,\n    ],\n\n    circle: [\n      classNames.circle,\n      sharedCircleCheck,\n\n      {\n        color: palette.neutralSecondary,\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n          },\n        },\n      },\n\n      checked && {\n        color: palette.white,\n      },\n    ],\n\n    check: [\n      classNames.check,\n      sharedCircleCheck,\n\n      {\n        opacity: 0,\n        color: palette.neutralSecondary,\n        fontSize: IconFontSizes.medium,\n        left: isRTL ? '-0.5px' : '.5px', // for centering the check icon inside the circle.\n\n        selectors: {\n          ':hover': {\n            opacity: 1,\n          },\n\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      checked && {\n        opacity: 1,\n        color: palette.white,\n        fontWeight: 900,\n\n        selectors: {\n          [HighContrastSelector]: {\n            border: 'none',\n            color: 'WindowText',\n          },\n        },\n      },\n    ],\n\n    checkHost: classNames.checkHost,\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}