{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { getRTL, getInitials, styled } from '../../../Utilities';\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\nimport { ValidationState } from '../BasePicker.types';\nimport { PeoplePickerItem } from './PeoplePickerItems/PeoplePickerItem';\nimport { PeoplePickerItemSuggestion } from './PeoplePickerItems/PeoplePickerItemSuggestion';\nimport { getStyles } from '../BasePicker.styles';\n/**\n * {@docCategory PeoplePicker}\n */\n\nvar BasePeoplePicker =\n/** @class */\nfunction (_super) {\n  __extends(BasePeoplePicker, _super);\n\n  function BasePeoplePicker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return BasePeoplePicker;\n}(BasePicker);\n\nexport { BasePeoplePicker };\n/**\n * {@docCategory PeoplePicker}\n */\n\nvar MemberListPeoplePicker =\n/** @class */\nfunction (_super) {\n  __extends(MemberListPeoplePicker, _super);\n\n  function MemberListPeoplePicker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MemberListPeoplePicker;\n}(BasePickerListBelow);\n\nexport { MemberListPeoplePicker };\n/**\n * Standard People Picker.\n * {@docCategory PeoplePicker}\n */\n\nvar NormalPeoplePickerBase =\n/** @class */\nfunction (_super) {\n  __extends(NormalPeoplePickerBase, _super);\n\n  function NormalPeoplePickerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** Default props for NormalPeoplePicker. */\n\n\n  NormalPeoplePickerBase.defaultProps = {\n    onRenderItem: function (props) {\n      return React.createElement(PeoplePickerItem, __assign({}, props));\n    },\n    onRenderSuggestionsItem: function (personaProps, suggestionsProps) {\n      return React.createElement(PeoplePickerItemSuggestion, {\n        personaProps: personaProps,\n        suggestionsProps: suggestionsProps\n      });\n    },\n    createGenericItem: createGenericItem\n  };\n  return NormalPeoplePickerBase;\n}(BasePeoplePicker);\n\nexport { NormalPeoplePickerBase };\n/**\n * Compact layout. It uses personas without secondary text when displaying search results.\n * {@docCategory PeoplePicker}\n */\n\nvar CompactPeoplePickerBase =\n/** @class */\nfunction (_super) {\n  __extends(CompactPeoplePickerBase, _super);\n\n  function CompactPeoplePickerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** Default props for CompactPeoplePicker. */\n\n\n  CompactPeoplePickerBase.defaultProps = {\n    onRenderItem: function (props) {\n      return React.createElement(PeoplePickerItem, __assign({}, props));\n    },\n    onRenderSuggestionsItem: function (personaProps, suggestionsProps) {\n      return React.createElement(PeoplePickerItemSuggestion, {\n        personaProps: personaProps,\n        suggestionsProps: suggestionsProps,\n        compact: true\n      });\n    },\n    createGenericItem: createGenericItem\n  };\n  return CompactPeoplePickerBase;\n}(BasePeoplePicker);\n\nexport { CompactPeoplePickerBase };\n/**\n * MemberList layout. The selected people show up below the search box.\n * {@docCategory PeoplePicker}\n */\n\nvar ListPeoplePickerBase =\n/** @class */\nfunction (_super) {\n  __extends(ListPeoplePickerBase, _super);\n\n  function ListPeoplePickerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** Default props for ListPeoplePicker. */\n\n\n  ListPeoplePickerBase.defaultProps = {\n    onRenderItem: function (props) {\n      return React.createElement(PeoplePickerItem, __assign({}, props));\n    },\n    onRenderSuggestionsItem: function (personaProps, suggestionsProps) {\n      return React.createElement(PeoplePickerItemSuggestion, {\n        personaProps: personaProps,\n        suggestionsProps: suggestionsProps\n      });\n    },\n    createGenericItem: createGenericItem\n  };\n  return ListPeoplePickerBase;\n}(MemberListPeoplePicker);\n\nexport { ListPeoplePickerBase };\n/**\n * {@docCategory PeoplePicker}\n */\n\nexport function createGenericItem(name, currentValidationState) {\n  var personaToConvert = {\n    key: name,\n    primaryText: name,\n    imageInitials: '!',\n    ValidationState: currentValidationState\n  };\n\n  if (currentValidationState !== ValidationState.warning) {\n    personaToConvert.imageInitials = getInitials(name, getRTL());\n  }\n\n  return personaToConvert;\n}\nexport var NormalPeoplePicker = styled(NormalPeoplePickerBase, getStyles, undefined, {\n  scope: 'NormalPeoplePicker'\n});\nexport var CompactPeoplePicker = styled(CompactPeoplePickerBase, getStyles, undefined, {\n  scope: 'CompactPeoplePicker'\n});\nexport var ListPeoplePicker = styled(ListPeoplePickerBase, getStyles, undefined, {\n  scope: 'ListPeoplePickerBase'\n});","map":{"version":3,"sources":["components/pickers/PeoplePicker/PeoplePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { getRTL, getInitials, styled } from '../../../Utilities';\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\nimport {\n  IBasePickerProps,\n  IBasePickerSuggestionsProps,\n  ValidationState,\n  IBasePickerStyleProps,\n  IBasePickerStyles,\n} from '../BasePicker.types';\nimport { PeoplePickerItem } from './PeoplePickerItems/PeoplePickerItem';\nimport { IPersonaProps } from '../../../Persona';\nimport { PeoplePickerItemSuggestion } from './PeoplePickerItems/PeoplePickerItemSuggestion';\nimport { IPeoplePickerItemSelectedProps } from './PeoplePickerItems/PeoplePickerItem.types';\nimport { getStyles } from '../BasePicker.styles';\n\n/**\n * PeoplePicker props interface which renders Personas as items.\n * {@docCategory PeoplePicker}\n * */\nexport interface IPeoplePickerProps extends IBasePickerProps<IPersonaProps> {}\n\n/**\n * {@docCategory PeoplePicker}\n */\nexport class BasePeoplePicker extends BasePicker<IPersonaProps, IPeoplePickerProps> {}\n\n/**\n * {@docCategory PeoplePicker}\n */\nexport class MemberListPeoplePicker extends BasePickerListBelow<IPersonaProps, IPeoplePickerProps> {}\n\n/**\n * Standard People Picker.\n * {@docCategory PeoplePicker}\n */\nexport class NormalPeoplePickerBase extends BasePeoplePicker {\n  /** Default props for NormalPeoplePicker. */\n  public static defaultProps = {\n    onRenderItem: (props: IPeoplePickerItemSelectedProps) => <PeoplePickerItem {...props} />,\n    onRenderSuggestionsItem: (personaProps: IPersonaProps, suggestionsProps?: IBasePickerSuggestionsProps) => (\n      <PeoplePickerItemSuggestion personaProps={personaProps} suggestionsProps={suggestionsProps} />\n    ),\n    createGenericItem: createGenericItem,\n  };\n}\n\n/**\n * Compact layout. It uses personas without secondary text when displaying search results.\n * {@docCategory PeoplePicker}\n */\nexport class CompactPeoplePickerBase extends BasePeoplePicker {\n  /** Default props for CompactPeoplePicker. */\n  public static defaultProps = {\n    onRenderItem: (props: IPeoplePickerItemSelectedProps) => <PeoplePickerItem {...props} />,\n    onRenderSuggestionsItem: (personaProps: IPersonaProps, suggestionsProps?: IBasePickerSuggestionsProps) => (\n      <PeoplePickerItemSuggestion personaProps={personaProps} suggestionsProps={suggestionsProps} compact={true} />\n    ),\n    createGenericItem: createGenericItem,\n  };\n}\n\n/**\n * MemberList layout. The selected people show up below the search box.\n * {@docCategory PeoplePicker}\n */\nexport class ListPeoplePickerBase extends MemberListPeoplePicker {\n  /** Default props for ListPeoplePicker. */\n  public static defaultProps = {\n    onRenderItem: (props: IPeoplePickerItemSelectedProps) => <PeoplePickerItem {...props} />,\n    onRenderSuggestionsItem: (personaProps: IPersonaProps, suggestionsProps?: IBasePickerSuggestionsProps) => (\n      <PeoplePickerItemSuggestion personaProps={personaProps} suggestionsProps={suggestionsProps} />\n    ),\n    createGenericItem: createGenericItem,\n  };\n}\n\n/**\n * {@docCategory PeoplePicker}\n */\nexport interface IGenericItem {\n  primaryText: string;\n  imageInitials: string;\n  ValidationState: ValidationState;\n}\n\n/**\n * {@docCategory PeoplePicker}\n */\nexport function createGenericItem(\n  name: string,\n  currentValidationState: ValidationState,\n): IGenericItem & { key: React.Key } {\n  const personaToConvert = {\n    key: name,\n    primaryText: name,\n    imageInitials: '!',\n    ValidationState: currentValidationState,\n  };\n\n  if (currentValidationState !== ValidationState.warning) {\n    personaToConvert.imageInitials = getInitials(name, getRTL());\n  }\n\n  return personaToConvert;\n}\n\nexport const NormalPeoplePicker = styled<IPeoplePickerProps, IBasePickerStyleProps, IBasePickerStyles>(\n  NormalPeoplePickerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'NormalPeoplePicker',\n  },\n);\n\nexport const CompactPeoplePicker = styled<IPeoplePickerProps, IBasePickerStyleProps, IBasePickerStyles>(\n  CompactPeoplePickerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'CompactPeoplePicker',\n  },\n);\n\nexport const ListPeoplePicker = styled<IPeoplePickerProps, IBasePickerStyleProps, IBasePickerStyles>(\n  ListPeoplePickerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'ListPeoplePickerBase',\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}