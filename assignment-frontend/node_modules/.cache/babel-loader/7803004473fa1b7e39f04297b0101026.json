{"ast":null,"code":"import _Object$values from 'babel-runtime/core-js/object/values';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { bsClass as setBsClass, bsStyles, getClassSet, prefix, splitBsProps } from './utils/bootstrapUtils';\nimport { State } from './utils/StyleConfig';\nimport ValidComponentChildren from './utils/ValidComponentChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    } // eslint-disable-next-line no-use-before-define\n\n\n    if (child.type === ProgressBar) return;\n    var childIdentifier = React.isValidElement(child) ? child.type.displayName || child.type.name || child.type : child;\n    error = new Error('Children of ' + componentName + ' can contain only ProgressBar ' + ('components. Found ' + childIdentifier + '.'));\n  });\n  return error;\n}\n\nvar propTypes = {\n  min: PropTypes.number,\n  now: PropTypes.number,\n  max: PropTypes.number,\n  label: PropTypes.node,\n  srOnly: PropTypes.bool,\n  striped: PropTypes.bool,\n  active: PropTypes.bool,\n  children: onlyProgressBar,\n\n  /**\n   * @private\n   */\n  isChild: PropTypes.bool\n};\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  active: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nvar ProgressBar = function (_React$Component) {\n  _inherits(ProgressBar, _React$Component);\n\n  function ProgressBar() {\n    _classCallCheck(this, ProgressBar);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  ProgressBar.prototype.renderProgressBar = function renderProgressBar(_ref) {\n    var _extends2;\n\n    var min = _ref.min,\n        now = _ref.now,\n        max = _ref.max,\n        label = _ref.label,\n        srOnly = _ref.srOnly,\n        striped = _ref.striped,\n        active = _ref.active,\n        className = _ref.className,\n        style = _ref.style,\n        props = _objectWithoutProperties(_ref, ['min', 'now', 'max', 'label', 'srOnly', 'striped', 'active', 'className', 'style']);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {\n      active: active\n    }, _extends2[prefix(bsProps, 'striped')] = active || striped, _extends2));\n\n    return React.createElement('div', _extends({}, elementProps, {\n      role: 'progressbar',\n      className: classNames(className, classes),\n      style: _extends({\n        width: getPercentage(now, min, max) + '%'\n      }, style),\n      'aria-valuenow': now,\n      'aria-valuemin': min,\n      'aria-valuemax': max\n    }), srOnly ? React.createElement('span', {\n      className: 'sr-only'\n    }, label) : label);\n  };\n\n  ProgressBar.prototype.render = function render() {\n    var _props = this.props,\n        isChild = _props.isChild,\n        props = _objectWithoutProperties(_props, ['isChild']);\n\n    if (isChild) {\n      return this.renderProgressBar(props);\n    }\n\n    var min = props.min,\n        now = props.now,\n        max = props.max,\n        label = props.label,\n        srOnly = props.srOnly,\n        striped = props.striped,\n        active = props.active,\n        bsClass = props.bsClass,\n        bsStyle = props.bsStyle,\n        className = props.className,\n        children = props.children,\n        wrapperProps = _objectWithoutProperties(props, ['min', 'now', 'max', 'label', 'srOnly', 'striped', 'active', 'bsClass', 'bsStyle', 'className', 'children']);\n\n    return React.createElement('div', _extends({}, wrapperProps, {\n      className: classNames(className, 'progress')\n    }), children ? ValidComponentChildren.map(children, function (child) {\n      return cloneElement(child, {\n        isChild: true\n      });\n    }) : this.renderProgressBar({\n      min: min,\n      now: now,\n      max: max,\n      label: label,\n      srOnly: srOnly,\n      striped: striped,\n      active: active,\n      bsClass: bsClass,\n      bsStyle: bsStyle\n    }));\n  };\n\n  return ProgressBar;\n}(React.Component);\n\nProgressBar.propTypes = propTypes;\nProgressBar.defaultProps = defaultProps;\nexport default setBsClass('progress-bar', bsStyles(_Object$values(State), ProgressBar));","map":{"version":3,"sources":["D:/personalWork/assignment-frontend/node_modules/react-bootstrap/es/ProgressBar.js"],"names":["_Object$values","_extends","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","classNames","React","cloneElement","PropTypes","bsClass","setBsClass","bsStyles","getClassSet","prefix","splitBsProps","State","ValidComponentChildren","ROUND_PRECISION","onlyProgressBar","props","propName","componentName","children","error","Children","forEach","child","type","ProgressBar","childIdentifier","isValidElement","displayName","name","Error","propTypes","min","number","now","max","label","node","srOnly","bool","striped","active","isChild","defaultProps","getPercentage","percentage","Math","round","_React$Component","apply","arguments","prototype","renderProgressBar","_ref","_extends2","className","style","_splitBsProps","bsProps","elementProps","classes","createElement","role","width","render","_props","bsStyle","wrapperProps","map","Component"],"mappings":"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","sourcesContent":["import _Object$values from 'babel-runtime/core-js/object/values';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { bsClass as setBsClass, bsStyles, getClassSet, prefix, splitBsProps } from './utils/bootstrapUtils';\nimport { State } from './utils/StyleConfig';\nimport ValidComponentChildren from './utils/ValidComponentChildren';\n\nvar ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n\n    // eslint-disable-next-line no-use-before-define\n    if (child.type === ProgressBar) return;\n\n    var childIdentifier = React.isValidElement(child) ? child.type.displayName || child.type.name || child.type : child;\n    error = new Error('Children of ' + componentName + ' can contain only ProgressBar ' + ('components. Found ' + childIdentifier + '.'));\n  });\n\n  return error;\n}\n\nvar propTypes = {\n  min: PropTypes.number,\n  now: PropTypes.number,\n  max: PropTypes.number,\n  label: PropTypes.node,\n  srOnly: PropTypes.bool,\n  striped: PropTypes.bool,\n  active: PropTypes.bool,\n  children: onlyProgressBar,\n\n  /**\n   * @private\n   */\n  isChild: PropTypes.bool\n};\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  active: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nvar ProgressBar = function (_React$Component) {\n  _inherits(ProgressBar, _React$Component);\n\n  function ProgressBar() {\n    _classCallCheck(this, ProgressBar);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  ProgressBar.prototype.renderProgressBar = function renderProgressBar(_ref) {\n    var _extends2;\n\n    var min = _ref.min,\n        now = _ref.now,\n        max = _ref.max,\n        label = _ref.label,\n        srOnly = _ref.srOnly,\n        striped = _ref.striped,\n        active = _ref.active,\n        className = _ref.className,\n        style = _ref.style,\n        props = _objectWithoutProperties(_ref, ['min', 'now', 'max', 'label', 'srOnly', 'striped', 'active', 'className', 'style']);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {\n      active: active\n    }, _extends2[prefix(bsProps, 'striped')] = active || striped, _extends2));\n\n    return React.createElement(\n      'div',\n      _extends({}, elementProps, {\n        role: 'progressbar',\n        className: classNames(className, classes),\n        style: _extends({ width: getPercentage(now, min, max) + '%' }, style),\n        'aria-valuenow': now,\n        'aria-valuemin': min,\n        'aria-valuemax': max\n      }),\n      srOnly ? React.createElement(\n        'span',\n        { className: 'sr-only' },\n        label\n      ) : label\n    );\n  };\n\n  ProgressBar.prototype.render = function render() {\n    var _props = this.props,\n        isChild = _props.isChild,\n        props = _objectWithoutProperties(_props, ['isChild']);\n\n    if (isChild) {\n      return this.renderProgressBar(props);\n    }\n\n    var min = props.min,\n        now = props.now,\n        max = props.max,\n        label = props.label,\n        srOnly = props.srOnly,\n        striped = props.striped,\n        active = props.active,\n        bsClass = props.bsClass,\n        bsStyle = props.bsStyle,\n        className = props.className,\n        children = props.children,\n        wrapperProps = _objectWithoutProperties(props, ['min', 'now', 'max', 'label', 'srOnly', 'striped', 'active', 'bsClass', 'bsStyle', 'className', 'children']);\n\n    return React.createElement(\n      'div',\n      _extends({}, wrapperProps, { className: classNames(className, 'progress') }),\n      children ? ValidComponentChildren.map(children, function (child) {\n        return cloneElement(child, { isChild: true });\n      }) : this.renderProgressBar({\n        min: min,\n        now: now,\n        max: max,\n        label: label,\n        srOnly: srOnly,\n        striped: striped,\n        active: active,\n        bsClass: bsClass,\n        bsStyle: bsStyle\n      })\n    );\n  };\n\n  return ProgressBar;\n}(React.Component);\n\nProgressBar.propTypes = propTypes;\nProgressBar.defaultProps = defaultProps;\n\nexport default setBsClass('progress-bar', bsStyles(_Object$values(State), ProgressBar));"]},"metadata":{},"sourceType":"module"}