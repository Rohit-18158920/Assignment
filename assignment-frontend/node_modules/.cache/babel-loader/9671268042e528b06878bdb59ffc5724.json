{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { hoistStatics } from '../hoistStatics';\nimport { CustomizerContext } from './CustomizerContext';\nimport { concatStyleSets } from '@uifabric/merge-styles';\nexport function customizable(scope, fields, concatStyles) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function customizableFactory(ComposedComponent) {\n    var _a;\n\n    var resultClass = (_a =\n    /** @class */\n    function (_super) {\n      __extends(ComponentWithInjectedProps, _super);\n\n      function ComponentWithInjectedProps(props) {\n        var _this = _super.call(this, props) || this; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        _this._styleCache = {};\n        _this._onSettingChanged = _this._onSettingChanged.bind(_this);\n        return _this;\n      }\n\n      ComponentWithInjectedProps.prototype.componentDidMount = function () {\n        Customizations.observe(this._onSettingChanged);\n      };\n\n      ComponentWithInjectedProps.prototype.componentWillUnmount = function () {\n        Customizations.unobserve(this._onSettingChanged);\n      };\n\n      ComponentWithInjectedProps.prototype.render = function () {\n        var _this = this;\n\n        return React.createElement(CustomizerContext.Consumer, null, function (context) {\n          var defaultProps = Customizations.getSettings(fields, scope, context.customizations); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          var componentProps = _this.props; // If defaultProps.styles is a function, evaluate it before calling concatStyleSets\n\n          if (defaultProps.styles && typeof defaultProps.styles === 'function') {\n            defaultProps.styles = defaultProps.styles(__assign(__assign({}, defaultProps), componentProps));\n          } // If concatStyles is true and custom styles have been defined compute those styles\n\n\n          if (concatStyles && defaultProps.styles) {\n            if (_this._styleCache.default !== defaultProps.styles || _this._styleCache.component !== componentProps.styles) {\n              var mergedStyles = concatStyleSets(defaultProps.styles, componentProps.styles);\n              _this._styleCache.default = defaultProps.styles;\n              _this._styleCache.component = componentProps.styles;\n              _this._styleCache.merged = mergedStyles;\n            }\n\n            return React.createElement(ComposedComponent, __assign({}, defaultProps, componentProps, {\n              styles: _this._styleCache.merged\n            }));\n          }\n\n          return React.createElement(ComposedComponent, __assign({}, defaultProps, componentProps));\n        });\n      };\n\n      ComponentWithInjectedProps.prototype._onSettingChanged = function () {\n        this.forceUpdate();\n      };\n\n      return ComponentWithInjectedProps;\n    }(React.Component), _a.displayName = 'Customized' + scope, _a);\n    return hoistStatics(ComposedComponent, resultClass);\n  };\n}","map":{"version":3,"sources":["customizations/customizable.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { hoistStatics } from '../hoistStatics';\nimport { CustomizerContext, ICustomizerContext } from './CustomizerContext';\nimport { concatStyleSets } from '@uifabric/merge-styles';\n\nexport function customizable(\n  scope: string,\n  fields: string[],\n  concatStyles?: boolean,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): <P>(ComposedComponent: React.ComponentType<P>) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function customizableFactory<P>(ComposedComponent: React.ComponentType<P>): any {\n    const resultClass = class ComponentWithInjectedProps extends React.Component<P, {}> {\n      public static displayName: string = 'Customized' + scope;\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      private _styleCache: { default?: any; component?: any; merged?: any } = {};\n\n      constructor(props: P) {\n        super(props);\n\n        this._onSettingChanged = this._onSettingChanged.bind(this);\n      }\n\n      public componentDidMount(): void {\n        Customizations.observe(this._onSettingChanged);\n      }\n\n      public componentWillUnmount(): void {\n        Customizations.unobserve(this._onSettingChanged);\n      }\n\n      public render(): JSX.Element {\n        return (\n          <CustomizerContext.Consumer>\n            {(context: ICustomizerContext) => {\n              const defaultProps = Customizations.getSettings(fields, scope, context.customizations);\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const componentProps = this.props as any;\n\n              // If defaultProps.styles is a function, evaluate it before calling concatStyleSets\n              if (defaultProps.styles && typeof defaultProps.styles === 'function') {\n                defaultProps.styles = defaultProps.styles({ ...defaultProps, ...componentProps });\n              }\n\n              // If concatStyles is true and custom styles have been defined compute those styles\n              if (concatStyles && defaultProps.styles) {\n                if (\n                  this._styleCache.default !== defaultProps.styles ||\n                  this._styleCache.component !== componentProps.styles\n                ) {\n                  const mergedStyles = concatStyleSets(defaultProps.styles, componentProps.styles);\n                  this._styleCache.default = defaultProps.styles;\n                  this._styleCache.component = componentProps.styles;\n                  this._styleCache.merged = mergedStyles;\n                }\n\n                return <ComposedComponent {...defaultProps} {...componentProps} styles={this._styleCache.merged} />;\n              }\n\n              return <ComposedComponent {...defaultProps} {...componentProps} />;\n            }}\n          </CustomizerContext.Consumer>\n        );\n      }\n\n      private _onSettingChanged(): void {\n        this.forceUpdate();\n      }\n    };\n\n    return hoistStatics(ComposedComponent, resultClass);\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}