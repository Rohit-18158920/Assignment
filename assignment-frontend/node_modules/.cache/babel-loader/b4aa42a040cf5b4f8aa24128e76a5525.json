{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { css, getId, initializeComponentRef } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { IconButton } from '../../../../Button';\nimport * as stylesImport from './ExtendedSelectedItem.scss';\nvar styles = stylesImport;\n\nvar ExtendedSelectedItem =\n/** @class */\nfunction (_super) {\n  __extends(ExtendedSelectedItem, _super);\n\n  function ExtendedSelectedItem(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.persona = React.createRef();\n    initializeComponentRef(_this); // eslint-disable-next-line react/no-unused-state\n\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n\n  ExtendedSelectedItem.prototype.render = function () {\n    var _a, _b;\n\n    var _c = this.props,\n        item = _c.item,\n        onExpandItem = _c.onExpandItem,\n        onRemoveItem = _c.onRemoveItem,\n        removeButtonAriaLabel = _c.removeButtonAriaLabel,\n        index = _c.index,\n        selected = _c.selected;\n    var itemId = getId();\n    return React.createElement(\"div\", {\n      ref: this.persona,\n      className: css('ms-PickerPersona-container', styles.personaContainer, (_a = {}, _a['is-selected ' + styles.personaContainerIsSelected] = selected, _a), (_b = {}, _b['is-invalid ' + styles.validationError] = !item.isValid, _b)),\n      \"data-is-focusable\": true,\n      \"data-is-sub-focuszone\": true,\n      \"data-selection-index\": index,\n      role: 'listitem',\n      \"aria-labelledby\": 'selectedItemPersona-' + itemId\n    }, React.createElement(\"div\", {\n      hidden: !item.canExpand || onExpandItem === undefined\n    }, React.createElement(IconButton, {\n      onClick: this._onClickIconButton(onExpandItem),\n      iconProps: {\n        iconName: 'Add',\n        style: {\n          fontSize: '14px'\n        }\n      },\n      className: css('ms-PickerItem-removeButton', styles.expandButton, styles.actionButton),\n      ariaLabel: removeButtonAriaLabel\n    })), React.createElement(\"div\", {\n      className: css(styles.personaWrapper)\n    }, React.createElement(\"div\", {\n      className: css('ms-PickerItem-content', styles.itemContent),\n      id: 'selectedItemPersona-' + itemId\n    }, React.createElement(Persona, __assign({}, item, {\n      onRenderCoin: this.props.renderPersonaCoin,\n      onRenderPrimaryText: this.props.renderPrimaryText,\n      size: PersonaSize.size32\n    }))), React.createElement(IconButton, {\n      onClick: this._onClickIconButton(onRemoveItem),\n      iconProps: {\n        iconName: 'Cancel',\n        style: {\n          fontSize: '14px'\n        }\n      },\n      className: css('ms-PickerItem-removeButton', styles.removeButton, styles.actionButton),\n      ariaLabel: removeButtonAriaLabel\n    })));\n  };\n\n  ExtendedSelectedItem.prototype._onClickIconButton = function (action) {\n    return function (ev) {\n      ev.stopPropagation();\n      ev.preventDefault();\n\n      if (action) {\n        action();\n      }\n    };\n  };\n\n  return ExtendedSelectedItem;\n}(React.Component);\n\nexport { ExtendedSelectedItem };","map":{"version":3,"sources":["components/SelectedItemsList/SelectedPeopleList/Items/ExtendedSelectedItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css, getId, initializeComponentRef } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { ISelectedPeopleItemProps } from '../SelectedPeopleList';\nimport { IconButton } from '../../../../Button';\nimport * as stylesImport from './ExtendedSelectedItem.scss';\nconst styles: any = stylesImport;\n\nexport interface IPeoplePickerItemState {\n  contextualMenuVisible: boolean;\n}\n\nexport class ExtendedSelectedItem extends React.Component<ISelectedPeopleItemProps, IPeoplePickerItemState> {\n  protected persona = React.createRef<HTMLDivElement>();\n\n  constructor(props: ISelectedPeopleItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    // eslint-disable-next-line react/no-unused-state\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public render(): JSX.Element {\n    const { item, onExpandItem, onRemoveItem, removeButtonAriaLabel, index, selected } = this.props;\n    const itemId = getId();\n    return (\n      <div\n        ref={this.persona}\n        className={css(\n          'ms-PickerPersona-container',\n          styles.personaContainer,\n          { ['is-selected ' + styles.personaContainerIsSelected]: selected },\n          { ['is-invalid ' + styles.validationError]: !item.isValid },\n        )}\n        data-is-focusable={true}\n        data-is-sub-focuszone={true}\n        data-selection-index={index}\n        role={'listitem'}\n        aria-labelledby={'selectedItemPersona-' + itemId}\n      >\n        <div hidden={!item.canExpand || onExpandItem === undefined}>\n          <IconButton\n            onClick={this._onClickIconButton(onExpandItem)}\n            iconProps={{ iconName: 'Add', style: { fontSize: '14px' } }}\n            className={css('ms-PickerItem-removeButton', styles.expandButton, styles.actionButton)}\n            ariaLabel={removeButtonAriaLabel}\n          />\n        </div>\n        <div className={css(styles.personaWrapper)}>\n          <div className={css('ms-PickerItem-content', styles.itemContent)} id={'selectedItemPersona-' + itemId}>\n            <Persona\n              {...item}\n              onRenderCoin={this.props.renderPersonaCoin}\n              onRenderPrimaryText={this.props.renderPrimaryText}\n              size={PersonaSize.size32}\n            />\n          </div>\n          <IconButton\n            onClick={this._onClickIconButton(onRemoveItem)}\n            iconProps={{ iconName: 'Cancel', style: { fontSize: '14px' } }}\n            className={css('ms-PickerItem-removeButton', styles.removeButton, styles.actionButton)}\n            ariaLabel={removeButtonAriaLabel}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _onClickIconButton(\n    action: (() => void) | undefined,\n  ): (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => void {\n    return (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>): void => {\n      ev.stopPropagation();\n      ev.preventDefault();\n      if (action) {\n        action();\n      }\n    };\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}