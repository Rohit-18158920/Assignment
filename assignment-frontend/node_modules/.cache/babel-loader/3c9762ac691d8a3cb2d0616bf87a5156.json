{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css, styled, classNamesFunction } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { composeRenderFunction } from '@uifabric/utilities';\nvar getClassNames = classNamesFunction();\n\nvar DetailsRowCheckBase = function (props) {\n  var _a = props.isVisible,\n      isVisible = _a === void 0 ? false : _a,\n      _b = props.canSelect,\n      canSelect = _b === void 0 ? false : _b,\n      _c = props.anySelected,\n      anySelected = _c === void 0 ? false : _c,\n      _d = props.selected,\n      selected = _d === void 0 ? false : _d,\n      _e = props.isHeader,\n      isHeader = _e === void 0 ? false : _e,\n      className = props.className,\n      checkClassName = props.checkClassName,\n      styles = props.styles,\n      theme = props.theme,\n      compact = props.compact,\n      onRenderDetailsCheckbox = props.onRenderDetailsCheckbox,\n      _f = props.useFastIcons,\n      useFastIcons = _f === void 0 ? true : _f,\n      // must be removed from buttonProps\n  buttonProps = __rest(props, [\"isVisible\", \"canSelect\", \"anySelected\", \"selected\", \"isHeader\", \"className\", \"checkClassName\", \"styles\", \"theme\", \"compact\", \"onRenderDetailsCheckbox\", \"useFastIcons\"]);\n\n  var defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n  var onRenderCheckbox = onRenderDetailsCheckbox ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender) : defaultCheckboxRender;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    canSelect: canSelect,\n    selected: selected,\n    anySelected: anySelected,\n    className: className,\n    isHeader: isHeader,\n    isVisible: isVisible,\n    compact: compact\n  });\n  var detailsCheckboxProps = {\n    checked: selected,\n    theme: theme\n  };\n  return canSelect ? React.createElement(\"div\", __assign({}, buttonProps, {\n    role: \"checkbox\",\n    // eslint-disable-next-line deprecation/deprecation\n    className: css(classNames.root, classNames.check),\n    \"aria-checked\": selected,\n    \"data-selection-toggle\": true,\n    \"data-automationid\": \"DetailsRowCheck\"\n  }), onRenderCheckbox(detailsCheckboxProps)) : // eslint-disable-next-line deprecation/deprecation\n  React.createElement(\"div\", __assign({}, buttonProps, {\n    className: css(classNames.root, classNames.check)\n  }));\n};\n\nvar FastCheck = React.memo(function (props) {\n  return React.createElement(Check, {\n    theme: props.theme,\n    checked: props.checked,\n    className: props.className,\n    useFastIcons: true\n  });\n});\n\nfunction _defaultCheckboxRender(checkboxProps) {\n  return React.createElement(Check, {\n    checked: checkboxProps.checked\n  });\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps) {\n  return React.createElement(FastCheck, {\n    theme: checkboxProps.theme,\n    checked: checkboxProps.checked\n  });\n}\n\nexport var DetailsRowCheck = styled(DetailsRowCheckBase, getStyles, undefined, {\n  scope: 'DetailsRowCheck'\n}, true);","map":{"version":3,"sources":["components/DetailsList/DetailsRowCheck.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  IDetailsRowCheckProps,\n  IDetailsCheckboxProps,\n  IDetailsRowCheckStyleProps,\n  IDetailsRowCheckStyles,\n} from './DetailsRowCheck.types';\nimport { css, styled, classNamesFunction } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { composeRenderFunction } from '@uifabric/utilities';\nimport { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>();\n\nconst DetailsRowCheckBase: React.FunctionComponent<IDetailsRowCheckProps> = props => {\n  const {\n    isVisible = false,\n    canSelect = false,\n    anySelected = false,\n    selected = false,\n    isHeader = false,\n    className,\n    checkClassName,\n    styles,\n    theme,\n    compact,\n    onRenderDetailsCheckbox,\n    useFastIcons = true, // must be removed from buttonProps\n    ...buttonProps\n  } = props;\n  const defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n\n  const onRenderCheckbox = onRenderDetailsCheckbox\n    ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender)\n    : defaultCheckboxRender;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    canSelect,\n    selected,\n    anySelected,\n    className,\n    isHeader,\n    isVisible,\n    compact,\n  });\n\n  const detailsCheckboxProps: IDetailsCheckboxProps = {\n    checked: selected,\n    theme,\n  };\n\n  return canSelect ? (\n    <div\n      {...buttonProps}\n      role=\"checkbox\"\n      // eslint-disable-next-line deprecation/deprecation\n      className={css(classNames.root, classNames.check)}\n      aria-checked={selected}\n      data-selection-toggle={true}\n      data-automationid=\"DetailsRowCheck\"\n    >\n      {onRenderCheckbox(detailsCheckboxProps)}\n    </div>\n  ) : (\n    // eslint-disable-next-line deprecation/deprecation\n    <div {...buttonProps} className={css(classNames.root, classNames.check)} />\n  );\n};\n\nconst FastCheck = React.memo((props: { theme?: ITheme; checked?: boolean; className?: string }) => {\n  return <Check theme={props.theme} checked={props.checked} className={props.className} useFastIcons />;\n});\n\nfunction _defaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <Check checked={checkboxProps.checked} />;\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <FastCheck theme={checkboxProps.theme} checked={checkboxProps.checked} />;\n}\n\nexport const DetailsRowCheck = styled<IDetailsRowCheckProps, IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>(\n  DetailsRowCheckBase,\n  getStyles,\n  undefined,\n  { scope: 'DetailsRowCheck' },\n  true,\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}