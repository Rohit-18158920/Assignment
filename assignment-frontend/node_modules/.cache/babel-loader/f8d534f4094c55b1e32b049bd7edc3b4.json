{"ast":null,"code":"/**\n * Sets the virtual parent of an element.\n * Pass `undefined` as the `parent` to clear the virtual parent.\n *\n * @public\n */\nexport function setVirtualParent(child, parent) {\n  var virtualChild = child;\n  var virtualParent = parent;\n\n  if (!virtualChild._virtual) {\n    virtualChild._virtual = {\n      children: []\n    };\n  }\n\n  var oldParent = virtualChild._virtual.parent;\n\n  if (oldParent && oldParent !== parent) {\n    // Remove the child from its old parent.\n    var index = oldParent._virtual.children.indexOf(virtualChild);\n\n    if (index > -1) {\n      oldParent._virtual.children.splice(index, 1);\n    }\n  }\n\n  virtualChild._virtual.parent = virtualParent || undefined;\n\n  if (virtualParent) {\n    if (!virtualParent._virtual) {\n      virtualParent._virtual = {\n        children: []\n      };\n    }\n\n    virtualParent._virtual.children.push(virtualChild);\n  }\n}","map":{"version":3,"sources":["setVirtualParent.ts"],"names":[],"mappings":"AACA;;;;;AAKG;AACH,OAAM,SAAU,gBAAV,CAA2B,KAA3B,EAA+C,MAA/C,EAAyE;AAC7E,MAAM,YAAY,GAAoB,KAAtC;AACA,MAAM,aAAa,GAA2B,MAA9C;;AAEA,MAAI,CAAC,YAAY,CAAC,QAAlB,EAA4B;AAC1B,IAAA,YAAY,CAAC,QAAb,GAAwB;AACtB,MAAA,QAAQ,EAAE;AADY,KAAxB;AAGD;;AAED,MAAM,SAAS,GAAG,YAAY,CAAC,QAAb,CAAsB,MAAxC;;AAEA,MAAI,SAAS,IAAI,SAAS,KAAK,MAA/B,EAAuC;AACrC;AACA,QAAM,KAAK,GAAG,SAAS,CAAC,QAAV,CAAmB,QAAnB,CAA4B,OAA5B,CAAoC,YAApC,CAAd;;AAEA,QAAI,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,MAAA,SAAS,CAAC,QAAV,CAAmB,QAAnB,CAA4B,MAA5B,CAAmC,KAAnC,EAA0C,CAA1C;AACD;AACF;;AAED,EAAA,YAAY,CAAC,QAAb,CAAsB,MAAtB,GAA+B,aAAa,IAAI,SAAhD;;AAEA,MAAI,aAAJ,EAAmB;AACjB,QAAI,CAAC,aAAa,CAAC,QAAnB,EAA6B;AAC3B,MAAA,aAAa,CAAC,QAAd,GAAyB;AACvB,QAAA,QAAQ,EAAE;AADa,OAAzB;AAGD;;AAED,IAAA,aAAa,CAAC,QAAd,CAAuB,QAAvB,CAAgC,IAAhC,CAAqC,YAArC;AACD;AACF","sourcesContent":["import { IVirtualElement } from './IVirtualElement';\n/**\n * Sets the virtual parent of an element.\n * Pass `undefined` as the `parent` to clear the virtual parent.\n *\n * @public\n */\nexport function setVirtualParent(child: HTMLElement, parent: HTMLElement | null): void {\n  const virtualChild = <IVirtualElement>child;\n  const virtualParent = <IVirtualElement | null>parent;\n\n  if (!virtualChild._virtual) {\n    virtualChild._virtual = {\n      children: [],\n    };\n  }\n\n  const oldParent = virtualChild._virtual.parent;\n\n  if (oldParent && oldParent !== parent) {\n    // Remove the child from its old parent.\n    const index = oldParent._virtual.children.indexOf(virtualChild);\n\n    if (index > -1) {\n      oldParent._virtual.children.splice(index, 1);\n    }\n  }\n\n  virtualChild._virtual.parent = virtualParent || undefined;\n\n  if (virtualParent) {\n    if (!virtualParent._virtual) {\n      virtualParent._virtual = {\n        children: [],\n      };\n    }\n\n    virtualParent._virtual.children.push(virtualChild);\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}