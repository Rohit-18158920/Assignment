{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, ScreenWidthMaxMedium, ScreenWidthMaxSmall, ScreenWidthMinMedium, getFocusStyle, getScreenSelector, getGlobalClassNames, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-Breadcrumb',\n  list: 'ms-Breadcrumb-list',\n  listItem: 'ms-Breadcrumb-listItem',\n  chevron: 'ms-Breadcrumb-chevron',\n  overflow: 'ms-Breadcrumb-overflow',\n  overflowButton: 'ms-Breadcrumb-overflowButton',\n  itemLink: 'ms-Breadcrumb-itemLink',\n  item: 'ms-Breadcrumb-item'\n};\nvar SingleLineTextStyle = {\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden'\n};\nvar overflowButtonFontSize = 16;\nvar chevronSmallFontSize = 8;\nvar itemLineHeight = 36;\nvar itemFontSize = 18;\nvar MinimumScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\nvar MediumScreenSelector = getScreenSelector(ScreenWidthMinMedium, ScreenWidthMaxMedium);\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d;\n\n  var className = props.className,\n      theme = props.theme;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme); // Tokens\n\n  var itemBackgroundHoveredColor = semanticColors.menuItemBackgroundHovered;\n  var itemBackgroundPressedColor = semanticColors.menuItemBackgroundPressed;\n  var itemTextColor = palette.neutralSecondary;\n  var itemTextFontWeight = FontWeights.regular;\n  var itemTextHoveredOrPressedColor = palette.neutralPrimary;\n  var itemLastChildTextColor = palette.neutralPrimary;\n  var itemLastChildTextFontWeight = FontWeights.semibold;\n  var chevronButtonColor = palette.neutralSecondary;\n  var overflowButtonColor = palette.neutralSecondary;\n  var lastChildItemStyles = {\n    fontWeight: itemLastChildTextFontWeight,\n    color: itemLastChildTextColor\n  };\n  var itemStateSelectors = {\n    ':hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundHoveredColor,\n      cursor: 'pointer',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'Highlight'\n      }, _a)\n    },\n    ':active': {\n      backgroundColor: itemBackgroundPressedColor,\n      color: itemTextHoveredOrPressedColor\n    },\n    '&:active:hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundPressedColor\n    },\n    '&:active, &:hover, &:active:hover': {\n      textDecoration: 'none'\n    }\n  };\n  var commonItemStyles = {\n    color: itemTextColor,\n    padding: '0 8px',\n    lineHeight: itemLineHeight,\n    fontSize: itemFontSize,\n    fontWeight: itemTextFontWeight\n  };\n  return {\n    root: [classNames.root, fonts.medium, {\n      margin: '11px 0 1px'\n    }, className],\n    list: [classNames.list, {\n      whiteSpace: 'nowrap',\n      padding: 0,\n      margin: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    listItem: [classNames.listItem, {\n      listStyleType: 'none',\n      margin: '0',\n      padding: '0',\n      display: 'flex',\n      position: 'relative',\n      alignItems: 'center',\n      selectors: {\n        '&:last-child .ms-Breadcrumb-itemLink': lastChildItemStyles,\n        '&:last-child .ms-Breadcrumb-item': lastChildItemStyles\n      }\n    }],\n    chevron: [classNames.chevron, {\n      color: chevronButtonColor,\n      fontSize: fonts.small.fontSize,\n      selectors: (_b = {}, _b[HighContrastSelector] = __assign({\n        color: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _b[MediumScreenSelector] = {\n        fontSize: chevronSmallFontSize\n      }, _b[MinimumScreenSelector] = {\n        fontSize: chevronSmallFontSize\n      }, _b)\n    }],\n    overflow: [classNames.overflow, {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    }],\n    overflowButton: [classNames.overflowButton, getFocusStyle(theme), SingleLineTextStyle, {\n      fontSize: overflowButtonFontSize,\n      color: overflowButtonColor,\n      height: '100%',\n      cursor: 'pointer',\n      selectors: __assign(__assign({}, itemStateSelectors), (_c = {}, _c[MinimumScreenSelector] = {\n        padding: '4px 6px'\n      }, _c[MediumScreenSelector] = {\n        fontSize: fonts.mediumPlus.fontSize\n      }, _c))\n    }],\n    itemLink: [classNames.itemLink, getFocusStyle(theme), SingleLineTextStyle, __assign(__assign({}, commonItemStyles), {\n      selectors: __assign((_d = {\n        ':focus': {\n          color: palette.neutralDark\n        }\n      }, _d[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        outline: \"none\"\n      }, _d), itemStateSelectors)\n    })],\n    item: [classNames.item, __assign(__assign({}, commonItemStyles), {\n      selectors: {\n        ':hover': {\n          cursor: 'default'\n        }\n      }\n    })]\n  };\n};","map":{"version":3,"sources":["components/Breadcrumb/Breadcrumb.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  HighContrastSelector,\n  IRawStyle,\n  ScreenWidthMaxMedium,\n  ScreenWidthMaxSmall,\n  ScreenWidthMinMedium,\n  getFocusStyle,\n  getScreenSelector,\n  getGlobalClassNames,\n  FontWeights,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { IBreadcrumbStyleProps, IBreadcrumbStyles } from './Breadcrumb.types';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Breadcrumb',\n  list: 'ms-Breadcrumb-list',\n  listItem: 'ms-Breadcrumb-listItem',\n  chevron: 'ms-Breadcrumb-chevron',\n  overflow: 'ms-Breadcrumb-overflow',\n  overflowButton: 'ms-Breadcrumb-overflowButton',\n  itemLink: 'ms-Breadcrumb-itemLink',\n  item: 'ms-Breadcrumb-item',\n};\n\nconst SingleLineTextStyle: IRawStyle = {\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n};\n\nconst overflowButtonFontSize = 16;\nconst chevronSmallFontSize = 8;\nconst itemLineHeight = 36;\nconst itemFontSize = 18;\n\nconst MinimumScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\nconst MediumScreenSelector = getScreenSelector(ScreenWidthMinMedium, ScreenWidthMaxMedium);\n\nexport const getStyles = (props: IBreadcrumbStyleProps): IBreadcrumbStyles => {\n  const { className, theme } = props;\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Tokens\n  const itemBackgroundHoveredColor = semanticColors.menuItemBackgroundHovered;\n  const itemBackgroundPressedColor = semanticColors.menuItemBackgroundPressed;\n  const itemTextColor = palette.neutralSecondary;\n  const itemTextFontWeight = FontWeights.regular;\n  const itemTextHoveredOrPressedColor = palette.neutralPrimary;\n  const itemLastChildTextColor = palette.neutralPrimary;\n  const itemLastChildTextFontWeight = FontWeights.semibold;\n  const chevronButtonColor = palette.neutralSecondary;\n  const overflowButtonColor = palette.neutralSecondary;\n\n  const lastChildItemStyles: IRawStyle = {\n    fontWeight: itemLastChildTextFontWeight,\n    color: itemLastChildTextColor,\n  };\n\n  const itemStateSelectors = {\n    ':hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundHoveredColor,\n      cursor: 'pointer',\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Highlight',\n        },\n      },\n    },\n    ':active': {\n      backgroundColor: itemBackgroundPressedColor,\n      color: itemTextHoveredOrPressedColor,\n    },\n    '&:active:hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundPressedColor,\n    },\n    '&:active, &:hover, &:active:hover': {\n      textDecoration: 'none',\n    },\n  };\n\n  const commonItemStyles: IRawStyle = {\n    color: itemTextColor,\n    padding: '0 8px',\n    lineHeight: itemLineHeight,\n    fontSize: itemFontSize,\n    fontWeight: itemTextFontWeight,\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      {\n        margin: '11px 0 1px',\n      },\n      className,\n    ],\n\n    list: [\n      classNames.list,\n      {\n        whiteSpace: 'nowrap',\n        padding: 0,\n        margin: 0,\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n\n    listItem: [\n      classNames.listItem,\n      {\n        listStyleType: 'none',\n        margin: '0',\n        padding: '0',\n        display: 'flex',\n        position: 'relative',\n        alignItems: 'center',\n        selectors: {\n          '&:last-child .ms-Breadcrumb-itemLink': lastChildItemStyles,\n          '&:last-child .ms-Breadcrumb-item': lastChildItemStyles,\n        },\n      },\n    ],\n\n    chevron: [\n      classNames.chevron,\n      {\n        color: chevronButtonColor,\n        fontSize: fonts.small.fontSize,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n          [MediumScreenSelector]: {\n            fontSize: chevronSmallFontSize,\n          },\n          [MinimumScreenSelector]: {\n            fontSize: chevronSmallFontSize,\n          },\n        },\n      },\n    ],\n\n    overflow: [\n      classNames.overflow,\n      {\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n      },\n    ],\n\n    overflowButton: [\n      classNames.overflowButton,\n      getFocusStyle(theme),\n      SingleLineTextStyle,\n      {\n        fontSize: overflowButtonFontSize,\n        color: overflowButtonColor,\n        height: '100%',\n        cursor: 'pointer',\n        selectors: {\n          ...itemStateSelectors,\n          [MinimumScreenSelector]: {\n            padding: '4px 6px',\n          },\n          [MediumScreenSelector]: {\n            fontSize: fonts.mediumPlus.fontSize,\n          },\n        },\n      },\n    ],\n\n    itemLink: [\n      classNames.itemLink,\n      getFocusStyle(theme),\n      SingleLineTextStyle,\n      {\n        ...commonItemStyles,\n        selectors: {\n          ':focus': {\n            color: palette.neutralDark,\n          },\n          [`.${IsFocusVisibleClassName} &:focus`]: {\n            outline: `none`,\n          },\n          ...itemStateSelectors,\n        },\n      },\n    ],\n\n    item: [\n      classNames.item,\n      {\n        ...commonItemStyles,\n        selectors: {\n          ':hover': {\n            cursor: 'default',\n          },\n        },\n      },\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}