{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { AnimationClassNames, AnimationStyles, HighContrastSelector, getFocusStyle, getGlobalClassNames, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nexport var DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields'\n};\nvar IsFocusableSelector = \"[data-is-focusable='true']\";\nexport var DEFAULT_CELL_STYLE_PROPS = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24\n}; // Source of default row heights to share.\n\nexport var DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32\n}; // Constant values\n\nvar values = __assign(__assign({}, DEFAULT_ROW_HEIGHTS), {\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6\n});\n\nexport var getDetailsRowStyles = function (props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n  var theme = props.theme,\n      isSelected = props.isSelected,\n      canSelect = props.canSelect,\n      droppingClassName = props.droppingClassName,\n      anySelected = props.anySelected,\n      isCheckVisible = props.isCheckVisible,\n      checkboxCellClassName = props.checkboxCellClassName,\n      compact = props.compact,\n      className = props.className,\n      _o = props.cellStyleProps,\n      cellStyleProps = _o === void 0 ? DEFAULT_CELL_STYLE_PROPS : _o,\n      enableUpdateAnimations = props.enableUpdateAnimations;\n  var palette = theme.palette,\n      fonts = theme.fonts;\n  var neutralPrimary = palette.neutralPrimary,\n      white = palette.white,\n      neutralSecondary = palette.neutralSecondary,\n      neutralLighter = palette.neutralLighter,\n      neutralLight = palette.neutralLight,\n      neutralDark = palette.neutralDark,\n      neutralQuaternaryAlt = palette.neutralQuaternaryAlt;\n  var focusBorder = theme.semanticColors.focusBorder;\n  var classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n  var colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt\n  }; // Selected row styles\n\n  var selectedStyles = [getFocusStyle(theme, {\n    inset: -1,\n    borderColor: focusBorder,\n    outlineColor: white\n  }), classNames.isSelected, {\n    color: colors.selectedMetaText,\n    background: colors.selectedBackground,\n    borderBottom: \"1px solid \" + white,\n    selectors: (_a = {\n      '&:before': {\n        position: 'absolute',\n        display: 'block',\n        top: -1,\n        height: 1,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        content: '',\n        borderTop: \"1px solid \" + white\n      },\n      // Selected State hover\n      '&:hover': {\n        background: colors.selectedHoverBackground,\n        color: colors.selectedHoverMetaText,\n        selectors: (_b = {}, // Selected State hover meta cell\n        _b[\".\" + classNames.cell + \" \" + HighContrastSelector] = {\n          color: 'HighlightText',\n          selectors: {\n            '> a': {\n              color: 'HighlightText'\n            }\n          }\n        }, // Selected State hover Header cell\n        _b[\".\" + classNames.isRowHeader] = {\n          color: colors.selectedHoverHeaderText,\n          selectors: (_c = {}, _c[HighContrastSelector] = {\n            color: 'HighlightText'\n          }, _c)\n        }, // Ensure high-contrast mode overrides default hover background\n        _b[HighContrastSelector] = {\n          background: 'Highlight'\n        }, _b)\n      },\n      // Focus state\n      '&:focus': {\n        background: colors.focusBackground,\n        selectors: (_d = {}, // Selected State hover meta cell\n        _d[\".\" + classNames.cell] = {\n          color: colors.focusMetaText,\n          selectors: (_e = {}, _e[HighContrastSelector] = {\n            color: 'HighlightText',\n            selectors: {\n              '> a': {\n                color: 'HighlightText'\n              }\n            }\n          }, _e)\n        }, // Row header cell\n        _d[\".\" + classNames.isRowHeader] = {\n          color: colors.focusHeaderText,\n          selectors: (_f = {}, _f[HighContrastSelector] = {\n            color: 'HighlightText'\n          }, _f)\n        }, // Ensure high-contrast mode overrides default focus background\n        _d[HighContrastSelector] = {\n          background: 'Highlight'\n        }, _d)\n      }\n    }, _a[HighContrastSelector] = __assign(__assign({\n      background: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), {\n      selectors: {\n        a: {\n          color: 'HighlightText'\n        }\n      }\n    }), // Focus and hover state\n    _a['&:focus:hover'] = {\n      background: colors.focusHoverBackground\n    }, _a)\n  }];\n  var cannotSelectStyles = [classNames.isContentUnselectable, {\n    userSelect: 'none',\n    cursor: 'default'\n  }];\n  var rootCompactStyles = {\n    minHeight: values.compactRowHeight,\n    border: 0\n  };\n  var cellCompactStyles = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\"\n  };\n  var defaultCellStyles = [getFocusStyle(theme, {\n    inset: -1\n  }), classNames.cell, {\n    display: 'inline-block',\n    position: 'relative',\n    boxSizing: 'border-box',\n    minHeight: values.rowHeight,\n    verticalAlign: 'top',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingTop: values.rowVerticalPadding,\n    paddingBottom: values.rowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\",\n    selectors: (_g = {\n      '& > button': {\n        maxWidth: '100%'\n      }\n    }, _g[IsFocusableSelector] = getFocusStyle(theme, {\n      inset: -1,\n      borderColor: neutralSecondary,\n      outlineColor: white\n    }), _g)\n  }, isSelected && {\n    selectors: (_h = {}, _h[HighContrastSelector] = __assign(__assign({\n      background: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), {\n      selectors: {\n        a: {\n          color: 'HighlightText'\n        }\n      }\n    }), _h)\n  }, compact && cellCompactStyles];\n  return {\n    root: [classNames.root, AnimationClassNames.fadeIn400, droppingClassName, theme.fonts.small, isCheckVisible && classNames.isCheckVisible, getFocusStyle(theme, {\n      borderColor: focusBorder,\n      outlineColor: white\n    }), {\n      borderBottom: \"1px solid \" + neutralLighter,\n      background: colors.defaultBackground,\n      color: colors.defaultMetaText,\n      // This ensures that the row always tries to consume is minimum width and does not compress.\n      display: 'inline-flex',\n      minWidth: '100%',\n      minHeight: values.rowHeight,\n      whiteSpace: 'nowrap',\n      padding: 0,\n      boxSizing: 'border-box',\n      verticalAlign: 'top',\n      textAlign: 'left',\n      selectors: (_j = {}, _j[\".\" + classNames.listCellFirstChild + \" &:before\"] = {\n        display: 'none'\n      }, _j['&:hover'] = {\n        background: colors.defaultHoverBackground,\n        color: colors.defaultHoverMetaText,\n        selectors: (_k = {}, _k[\".\" + classNames.isRowHeader] = {\n          color: colors.defaultHoverHeaderText\n        }, _k)\n      }, _j[\"&:hover .\" + classNames.check] = {\n        opacity: 1\n      }, _j[\".\" + IsFocusVisibleClassName + \" &:focus .\" + classNames.check] = {\n        opacity: 1\n      }, _j)\n    }, isSelected && selectedStyles, !canSelect && cannotSelectStyles, compact && rootCompactStyles, className],\n    cellUnpadded: {\n      paddingRight: cellStyleProps.cellRightPadding + \"px\"\n    },\n    cellPadded: {\n      paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding + \"px\",\n      selectors: (_l = {}, _l[\"&.\" + classNames.cellCheck] = {\n        paddingRight: 0\n      }, _l)\n    },\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [classNames.cellMeasurer, {\n      overflow: 'visible',\n      whiteSpace: 'nowrap'\n    }],\n    checkCell: [defaultCellStyles, classNames.cellCheck, checkboxCellClassName, {\n      padding: 0,\n      // Ensure that the check cell covers the top border of the cell.\n      // This ensures the click target does not leave a spot which would\n      // cause other items to be deselected.\n      paddingTop: 1,\n      marginTop: -1,\n      flexShrink: 0\n    }],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none'\n    },\n    fields: [classNames.fields, {\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    isRowHeader: [classNames.isRowHeader, {\n      color: colors.defaultHeaderText,\n      fontSize: fonts.medium.fontSize\n    }, isSelected && {\n      color: colors.selectedHeaderText,\n      fontWeight: FontWeights.semibold,\n      selectors: (_m = {}, _m[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _m)\n    }],\n    isMultiline: [defaultCellStyles, {\n      whiteSpace: 'normal',\n      wordBreak: 'break-word',\n      textOverflow: 'clip'\n    }],\n    check: [classNames.check]\n  };\n};","map":{"version":3,"sources":["components/DetailsList/DetailsRow.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IDetailsRowStyleProps, IDetailsRowStyles, ICellStyleProps } from './DetailsRow.types';\nimport {\n  AnimationClassNames,\n  AnimationStyles,\n  HighContrastSelector,\n  IStyle,\n  getFocusStyle,\n  getGlobalClassNames,\n  FontWeights,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nexport const DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields',\n};\nconst IsFocusableSelector = \"[data-is-focusable='true']\";\n\nexport const DEFAULT_CELL_STYLE_PROPS: ICellStyleProps = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24,\n};\n\n// Source of default row heights to share.\nexport const DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32,\n};\n\n// Constant values\nconst values = {\n  ...DEFAULT_ROW_HEIGHTS,\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6,\n};\n\nexport const getDetailsRowStyles = (props: IDetailsRowStyleProps): IDetailsRowStyles => {\n  const {\n    theme,\n    isSelected,\n    canSelect,\n    droppingClassName,\n    anySelected,\n    isCheckVisible,\n    checkboxCellClassName,\n    compact,\n    className,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    enableUpdateAnimations,\n  } = props;\n\n  const { palette, fonts } = theme;\n  const {\n    neutralPrimary,\n    white,\n    neutralSecondary,\n    neutralLighter,\n    neutralLight,\n    neutralDark,\n    neutralQuaternaryAlt,\n  } = palette;\n  const { focusBorder } = theme.semanticColors;\n\n  const classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n\n  const colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt,\n  };\n\n  // Selected row styles\n  const selectedStyles: IStyle = [\n    getFocusStyle(theme, { inset: -1, borderColor: focusBorder, outlineColor: white }),\n    classNames.isSelected,\n    {\n      color: colors.selectedMetaText,\n      background: colors.selectedBackground,\n      borderBottom: `1px solid ${white}`,\n      selectors: {\n        '&:before': {\n          position: 'absolute',\n          display: 'block',\n          top: -1,\n          height: 1,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          content: '',\n          borderTop: `1px solid ${white}`,\n        },\n\n        // Selected State hover\n        '&:hover': {\n          background: colors.selectedHoverBackground,\n          color: colors.selectedHoverMetaText,\n          selectors: {\n            // Selected State hover meta cell\n            [`.${classNames.cell} ${HighContrastSelector}`]: {\n              color: 'HighlightText',\n              selectors: {\n                '> a': {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Selected State hover Header cell\n            [`.${classNames.isRowHeader}`]: {\n              color: colors.selectedHoverHeaderText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Ensure high-contrast mode overrides default hover background\n            [HighContrastSelector]: {\n              background: 'Highlight',\n            },\n          },\n        },\n\n        // Focus state\n        '&:focus': {\n          background: colors.focusBackground,\n          selectors: {\n            // Selected State hover meta cell\n            [`.${classNames.cell}`]: {\n              color: colors.focusMetaText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                  selectors: {\n                    '> a': {\n                      color: 'HighlightText',\n                    },\n                  },\n                },\n              },\n            },\n\n            // Row header cell\n            [`.${classNames.isRowHeader}`]: {\n              color: colors.focusHeaderText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Ensure high-contrast mode overrides default focus background\n            [HighContrastSelector]: {\n              background: 'Highlight',\n            },\n          },\n        },\n\n        [HighContrastSelector]: {\n          background: 'Highlight',\n          color: 'HighlightText',\n          ...getHighContrastNoAdjustStyle(),\n          selectors: {\n            a: {\n              color: 'HighlightText',\n            },\n          },\n        },\n\n        // Focus and hover state\n        '&:focus:hover': {\n          background: colors.focusHoverBackground,\n        },\n      },\n    },\n  ];\n\n  const cannotSelectStyles: IStyle = [\n    classNames.isContentUnselectable,\n    {\n      userSelect: 'none',\n      cursor: 'default',\n    },\n  ];\n\n  const rootCompactStyles: IStyle = {\n    minHeight: values.compactRowHeight,\n    border: 0,\n  };\n\n  const cellCompactStyles: IStyle = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: `${cellStyleProps.cellLeftPadding}px`,\n  };\n\n  const defaultCellStyles: IStyle = [\n    getFocusStyle(theme, { inset: -1 }),\n    classNames.cell,\n    {\n      display: 'inline-block',\n      position: 'relative',\n      boxSizing: 'border-box',\n      minHeight: values.rowHeight,\n      verticalAlign: 'top',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingTop: values.rowVerticalPadding,\n      paddingBottom: values.rowVerticalPadding,\n      paddingLeft: `${cellStyleProps.cellLeftPadding}px`,\n      selectors: {\n        '& > button': {\n          maxWidth: '100%',\n        },\n\n        [IsFocusableSelector]: getFocusStyle(theme, { inset: -1, borderColor: neutralSecondary, outlineColor: white }),\n      },\n    },\n\n    isSelected && {\n      selectors: {\n        [HighContrastSelector]: {\n          background: 'Highlight',\n          color: 'HighlightText',\n          ...getHighContrastNoAdjustStyle(),\n          selectors: {\n            a: {\n              color: 'HighlightText',\n            },\n          },\n        },\n      },\n    },\n\n    compact && cellCompactStyles,\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      AnimationClassNames.fadeIn400,\n      droppingClassName,\n      theme.fonts.small,\n      isCheckVisible && classNames.isCheckVisible,\n      getFocusStyle(theme, { borderColor: focusBorder, outlineColor: white }),\n      {\n        borderBottom: `1px solid ${neutralLighter}`,\n        background: colors.defaultBackground,\n        color: colors.defaultMetaText,\n        // This ensures that the row always tries to consume is minimum width and does not compress.\n        display: 'inline-flex',\n        minWidth: '100%',\n        minHeight: values.rowHeight,\n        whiteSpace: 'nowrap',\n        padding: 0,\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        textAlign: 'left',\n        selectors: {\n          [`.${classNames.listCellFirstChild} &:before`]: {\n            display: 'none',\n          },\n\n          '&:hover': {\n            background: colors.defaultHoverBackground,\n            color: colors.defaultHoverMetaText,\n            selectors: {\n              [`.${classNames.isRowHeader}`]: {\n                color: colors.defaultHoverHeaderText,\n              },\n            },\n          },\n\n          [`&:hover .${classNames.check}`]: {\n            opacity: 1,\n          },\n\n          [`.${IsFocusVisibleClassName} &:focus .${classNames.check}`]: {\n            opacity: 1,\n          },\n        },\n      },\n      isSelected && selectedStyles,\n      !canSelect && cannotSelectStyles,\n      compact && rootCompactStyles,\n      className,\n    ],\n\n    cellUnpadded: {\n      paddingRight: `${cellStyleProps.cellRightPadding}px`,\n    },\n\n    cellPadded: {\n      paddingRight: `${cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding}px`,\n      selectors: {\n        [`&.${classNames.cellCheck}`]: {\n          paddingRight: 0,\n        },\n      },\n    },\n\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [\n      classNames.cellMeasurer,\n      {\n        overflow: 'visible',\n        whiteSpace: 'nowrap',\n      },\n    ],\n    checkCell: [\n      defaultCellStyles,\n      classNames.cellCheck,\n      checkboxCellClassName,\n      {\n        padding: 0,\n        // Ensure that the check cell covers the top border of the cell.\n        // This ensures the click target does not leave a spot which would\n        // cause other items to be deselected.\n        paddingTop: 1,\n        marginTop: -1,\n        flexShrink: 0,\n      },\n    ],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none',\n    },\n    fields: [\n      classNames.fields,\n      {\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n    isRowHeader: [\n      classNames.isRowHeader,\n      {\n        color: colors.defaultHeaderText,\n        fontSize: fonts.medium.fontSize,\n      },\n      isSelected && {\n        color: colors.selectedHeaderText,\n        fontWeight: FontWeights.semibold,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n    ],\n    isMultiline: [\n      defaultCellStyles,\n      {\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n        textOverflow: 'clip',\n      },\n    ],\n    check: [classNames.check],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}