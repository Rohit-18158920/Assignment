{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cn from 'classnames';\nimport { prefix, splitBsPropsAndOmit, bsClass } from './utils/bootstrapUtils';\nimport PanelCollapse from './PanelCollapse';\nvar propTypes = {\n  /**\n   * A convenience prop that renders a Collapse component around the Body for\n   * situations when the parent Panel only contains a single Panel.Body child.\n   *\n   * renders:\n   * ```jsx\n   * <Panel.Collapse>\n   *  <Panel.Body />\n   * </Panel.Collapse>\n   * ```\n   */\n  collapsible: PropTypes.bool.isRequired\n};\nvar defaultProps = {\n  collapsible: false\n};\nvar contextTypes = {\n  $bs_panel: PropTypes.shape({\n    bsClass: PropTypes.string\n  })\n};\n\nvar PanelBody = function (_React$Component) {\n  _inherits(PanelBody, _React$Component);\n\n  function PanelBody() {\n    _classCallCheck(this, PanelBody);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  PanelBody.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        className = _props.className,\n        collapsible = _props.collapsible;\n\n    var _ref = this.context.$bs_panel || {},\n        _bsClass = _ref.bsClass;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(this.props, ['collapsible']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n    var body = React.createElement('div', _extends({}, elementProps, {\n      className: cn(className, prefix(bsProps, 'body'))\n    }), children);\n\n    if (collapsible) {\n      body = React.createElement(PanelCollapse, null, body);\n    }\n\n    return body;\n  };\n\n  return PanelBody;\n}(React.Component);\n\nPanelBody.propTypes = propTypes;\nPanelBody.defaultProps = defaultProps;\nPanelBody.contextTypes = contextTypes;\nexport default bsClass('panel', PanelBody);","map":{"version":3,"sources":["D:/personalWork/assignment-frontend/node_modules/react-bootstrap/es/PanelBody.js"],"names":["_extends","_classCallCheck","_possibleConstructorReturn","_inherits","PropTypes","React","cn","prefix","splitBsPropsAndOmit","bsClass","PanelCollapse","propTypes","collapsible","bool","isRequired","defaultProps","contextTypes","$bs_panel","shape","string","PanelBody","_React$Component","apply","arguments","prototype","render","_props","props","children","className","_ref","context","_bsClass","_splitBsPropsAndOmit","bsProps","elementProps","body","createElement","Component"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,MAAT,EAAiBC,mBAAjB,EAAsCC,OAAtC,QAAqD,wBAArD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAIC,SAAS,GAAG;AACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAER,SAAS,CAACS,IAAV,CAAeC;AAZd,CAAhB;AAeA,IAAIC,YAAY,GAAG;AACjBH,EAAAA,WAAW,EAAE;AADI,CAAnB;AAIA,IAAII,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAEb,SAAS,CAACc,KAAV,CAAgB;AACzBT,IAAAA,OAAO,EAAEL,SAAS,CAACe;AADM,GAAhB;AADM,CAAnB;;AAMA,IAAIC,SAAS,GAAG,UAAUC,gBAAV,EAA4B;AAC1ClB,EAAAA,SAAS,CAACiB,SAAD,EAAYC,gBAAZ,CAAT;;AAEA,WAASD,SAAT,GAAqB;AACnBnB,IAAAA,eAAe,CAAC,IAAD,EAAOmB,SAAP,CAAf;;AAEA,WAAOlB,0BAA0B,CAAC,IAAD,EAAOmB,gBAAgB,CAACC,KAAjB,CAAuB,IAAvB,EAA6BC,SAA7B,CAAP,CAAjC;AACD;;AAEDH,EAAAA,SAAS,CAACI,SAAV,CAAoBC,MAApB,GAA6B,SAASA,MAAT,GAAkB;AAC7C,QAAIC,MAAM,GAAG,KAAKC,KAAlB;AAAA,QACIC,QAAQ,GAAGF,MAAM,CAACE,QADtB;AAAA,QAEIC,SAAS,GAAGH,MAAM,CAACG,SAFvB;AAAA,QAGIjB,WAAW,GAAGc,MAAM,CAACd,WAHzB;;AAKA,QAAIkB,IAAI,GAAG,KAAKC,OAAL,CAAad,SAAb,IAA0B,EAArC;AAAA,QACIe,QAAQ,GAAGF,IAAI,CAACrB,OADpB;;AAGA,QAAIwB,oBAAoB,GAAGzB,mBAAmB,CAAC,KAAKmB,KAAN,EAAa,CAAC,aAAD,CAAb,CAA9C;AAAA,QACIO,OAAO,GAAGD,oBAAoB,CAAC,CAAD,CADlC;AAAA,QAEIE,YAAY,GAAGF,oBAAoB,CAAC,CAAD,CAFvC;;AAIAC,IAAAA,OAAO,CAACzB,OAAR,GAAkBuB,QAAQ,IAAIE,OAAO,CAACzB,OAAtC;AAEA,QAAI2B,IAAI,GAAG/B,KAAK,CAACgC,aAAN,CACT,KADS,EAETrC,QAAQ,CAAC,EAAD,EAAKmC,YAAL,EAAmB;AAAEN,MAAAA,SAAS,EAAEvB,EAAE,CAACuB,SAAD,EAAYtB,MAAM,CAAC2B,OAAD,EAAU,MAAV,CAAlB;AAAf,KAAnB,CAFC,EAGTN,QAHS,CAAX;;AAMA,QAAIhB,WAAJ,EAAiB;AACfwB,MAAAA,IAAI,GAAG/B,KAAK,CAACgC,aAAN,CACL3B,aADK,EAEL,IAFK,EAGL0B,IAHK,CAAP;AAKD;;AAED,WAAOA,IAAP;AACD,GA9BD;;AAgCA,SAAOhB,SAAP;AACD,CA1Ce,CA0Cdf,KAAK,CAACiC,SA1CQ,CAAhB;;AA4CAlB,SAAS,CAACT,SAAV,GAAsBA,SAAtB;AACAS,SAAS,CAACL,YAAV,GAAyBA,YAAzB;AACAK,SAAS,CAACJ,YAAV,GAAyBA,YAAzB;AAEA,eAAeP,OAAO,CAAC,OAAD,EAAUW,SAAV,CAAtB","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cn from 'classnames';\nimport { prefix, splitBsPropsAndOmit, bsClass } from './utils/bootstrapUtils';\nimport PanelCollapse from './PanelCollapse';\n\nvar propTypes = {\n  /**\n   * A convenience prop that renders a Collapse component around the Body for\n   * situations when the parent Panel only contains a single Panel.Body child.\n   *\n   * renders:\n   * ```jsx\n   * <Panel.Collapse>\n   *  <Panel.Body />\n   * </Panel.Collapse>\n   * ```\n   */\n  collapsible: PropTypes.bool.isRequired\n};\n\nvar defaultProps = {\n  collapsible: false\n};\n\nvar contextTypes = {\n  $bs_panel: PropTypes.shape({\n    bsClass: PropTypes.string\n  })\n};\n\nvar PanelBody = function (_React$Component) {\n  _inherits(PanelBody, _React$Component);\n\n  function PanelBody() {\n    _classCallCheck(this, PanelBody);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  PanelBody.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        className = _props.className,\n        collapsible = _props.collapsible;\n\n    var _ref = this.context.$bs_panel || {},\n        _bsClass = _ref.bsClass;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(this.props, ['collapsible']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n\n    var body = React.createElement(\n      'div',\n      _extends({}, elementProps, { className: cn(className, prefix(bsProps, 'body')) }),\n      children\n    );\n\n    if (collapsible) {\n      body = React.createElement(\n        PanelCollapse,\n        null,\n        body\n      );\n    }\n\n    return body;\n  };\n\n  return PanelBody;\n}(React.Component);\n\nPanelBody.propTypes = propTypes;\nPanelBody.defaultProps = defaultProps;\nPanelBody.contextTypes = contextTypes;\n\nexport default bsClass('panel', PanelBody);"]},"metadata":{},"sourceType":"module"}